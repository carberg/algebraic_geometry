
+++++++++++++++++++++++++++++++++++++++

The given ring is:
(0,a,b,c,d),(x,y,x(0),y(0),r(2)),(Dp(5),C)

F = {
(b-d)*x+(-a+c)*y+(2*a*d-2*b*c), 
(-a+c)*x+(b-d)*y, 
x(0)^2+y(0)^2-r(2)^2+(-2*a)*x(0)+(-2*b)*y(0)+(a^2+b^2), 
x(0)^2+y(0)^2-r(2)^2+(-2*c)*x(0)+(-2*d)*y(0)+(c^2+d^2), 
x(0)^2+y(0)^2-r(2)^2+(-2*a-2*c)*x(0)+(-2*b-2*d)*y(0)+(a^2+2*a*c+b^2+2*b*d+c^2+d^2), 
x^2-2*x*x(0)+y^2-2*y*y(0)+x(0)^2+y(0)^2-r(2)^2
}.

E = {0}.

N = {}.


Module Comprehensive Groebner Systems: 

Branch 1:
constraints: a^4*b*d-a^4*d^2-a^3*b^2*c+a^3*c*d^2-a^2*b^3*d+a^2*b^2*c^2+a^2*b^2*d^2-2*a^2*b*c^2*d+a^2*b*d^3+a^2*c^2*d^2-a^2*d^4+a*b^4*c+a*b^2*c^3-2*a*b^2*c*d^2-a*c^3*d^2+a*c*d^4-b^4*c^2+b^3*c^2*d-b^2*c^4+b^2*c^2*d^2+b*c^4*d-b*c^2*d^3!=0,
RGB from KSW:
[(a^4*b*d-a^4*d^2-a^3*b^2*c+a^3*c*d^2-a^2*b^3*d+a^2*b^2*c^2+a^2*b^2*d^2-2*a^2*b*c^2*d+a^2*b*d^3+a^2*c^2*d^2-a^2*d^4+a*b^4*c+a*b^2*c^3-2*a*b^2*c*d^2-a*c^3*d^2+a*c*d^4-b^4*c^2+b^3*c^2*d-b^2*c^4+b^2*c^2*d^2+b*c^4*d-b*c^2*d^3)  ,  0]
[(a^4*b*c-a^4*c*d+a^3*b^2*d-a^3*b*c^2-a^3*b*d^2+a^3*c^2*d-a^2*b^3*c-a^2*b*c^3+2*a^2*b*c*d^2+a^2*c^3*d-a^2*c*d^3-a*b^4*d+a*b^3*c^2+a*b^3*d^2-2*a*b^2*c^2*d+a*b^2*d^3+a*b*c^4-a*b*d^4-a*c^4*d+a*c^2*d^3+b^4*c*d-b^3*c*d^2+b^2*c^3*d-b^2*c*d^3-b*c^3*d^2+b*c*d^4)  ,  0]
[(a^3*b^2*c^2+a^3*b^2*d^2-a^3*b*c^2*d-a^3*b*d^3-a^2*b^2*c^3-a^2*b^2*c*d^2+a^2*b*c^3*d+a^2*b*c*d^3-a*b^4*c^2-a*b^4*d^2+a*b^3*c^2*d+a*b^3*d^3-a*b^2*c^4+a*b^2*d^4+a*b*c^4*d-a*b*d^5+b^4*c^3+b^4*c*d^2-b^3*c^3*d-b^3*c*d^3+b^2*c^5-b^2*c*d^4-b*c^5*d+b*c*d^5)  ,  0]
[(2*a*d-2*b*c)*y(0)+(-a^2*c-2*a*b*d+a*c^2-a*d^2+b^2*c+2*b*c*d)  ,  0]
[(2*a^3*b*c-2*a^2*b*c^2-2*a*b*c^3-2*b^4*d+2*b^3*d^2+2*b^2*d^3+2*b*c^4-2*b*d^4)*y(0)+(-a^4*c^2-3*a^3*b*c*d+a^3*c^3+a^2*b^3*d-a^2*b^2*d^2+4*a^2*b*c^2*d+a^2*c^4-a^2*c^2*d^2-a*b^3*c*d+a*b^2*c^3+2*a*b^2*c*d^2+a*b*c^3*d-a*b*c*d^3-a*c^5+a*c^3*d^2+b^5*d-2*b^3*d^3-b^2*c^4-b^2*c^2*d^2-2*b*c^4*d+b*c^2*d^3+b*d^5)  ,  0]
[(2*a^2*b^2*c^2-2*a*b^2*c^3-2*b^4*d^2+2*b^3*d^3-2*b^2*c^4+2*b^2*d^4+2*b*c^4*d-2*b*d^5)*y(0)+(a^3*b^2*c*d-a^3*b*c^3-a^3*b*c*d^2+a^2*b^3*d^2-4*a^2*b^2*c^2*d-a^2*b^2*d^3+a^2*b*c^4+a^2*b*c^2*d^2+a*b^4*c*d-2*a*b^3*c*d^2+3*a*b^2*c^3*d+a*b^2*c*d^3+b^5*d^2-b^4*c^2*d+b^3*c^4+b^3*c^2*d^2-2*b^3*d^4-b*c^4*d^2+b*d^6)  ,  0]
[(2*a*b^3*c^3-2*b^4*d^3-2*b^3*c^4+2*b^3*d^4-2*b^2*c^4*d+2*b^2*d^5+2*b*c^4*d^2-2*b*d^6)*y(0)+(2*a^2*b^3*c^2*d+a^2*b^3*d^3-a^2*b^2*c^4-2*a^2*b^2*c^2*d^2-a^2*b^2*d^4+2*a*b^4*c*d^2-5*a*b^3*c^3*d-3*a*b^3*c*d^3+2*a*b^2*c^5+2*a*b^2*c^3*d^2-a*b*c^5*d+a*b*c*d^5+b^5*d^3-2*b^4*c^2*d^2+4*b^3*c^4*d+2*b^3*c^2*d^3-2*b^3*d^5-b^2*c^6+b^2*c^2*d^4+b*c^6*d-b*c^4*d^3-b*c^2*d^5+b*d^7)  ,  0]
[(2*b^4*c^4-2*b^4*d^4-2*b^3*c^4*d+2*b^3*d^5-2*b^2*c^4*d^2+2*b^2*d^6+2*b*c^4*d^3-2*b*d^7)*y(0)+(a^2*b^3*c^4+2*a^2*b^3*c^2*d^2+a^2*b^3*d^4-a^2*b^2*c^4*d-2*a^2*b^2*c^2*d^3-a^2*b^2*d^5+2*a*b^4*c^3*d+2*a*b^4*c*d^3-a*b^3*c^5-4*a*b^3*c^3*d^2-3*a*b^3*c*d^4+2*a*b^2*c^5*d+2*a*b^2*c^3*d^3-a*b*c^5*d^2+a*b*c*d^6-b^5*c^4+b^5*d^4-2*b^4*c^4*d-2*b^4*c^2*d^3+4*b^3*c^4*d^2+2*b^3*c^2*d^4-2*b^3*d^6-b^2*c^6*d+b^2*c^2*d^5+b*c^6*d^2-b*c^4*d^4-b*c^2*d^6+b*d^8)  ,  0]
[(2*c)*x(0)+(2*d)*y(0)+(-2*a*c-2*b*d-c^2-d^2)  ,  0]
[(2*a)*x(0)+(2*b)*y(0)+(-a^2-2*a*c-b^2-2*b*d)  ,  0]
[(a^2-2*a*c-b^2+2*b*d+c^2-d^2)*y+(-2*a^2*d+2*a*b*c+2*a*c*d-2*b*c^2)  ,  0]
[(a*b*d+a*c^2+b^2*c-3*b*c*d-c^3+c*d^2)*y+(-a^2*b*c+a^2*c*d-a*b^2*d-a*b*c^2-a*b*d^2-a*c^2*d+b^2*c*d+2*b*c^3+b*c*d^2)  ,  0]
[(a*b*c-a*c*d-b^2*d-b*c^2+2*b*d^2+c^2*d-d^3)*y+(a^2*b*d-a^2*d^2-a*b^2*c+a*c*d^2+b^2*c^2-b*c^2*d)  ,  0]
[(2*b^3*d+b^2*c^2-5*b^2*d^2-2*b*c^2*d+4*b*d^3+c^2*d^2-d^4)*y+(-a^3*b*c+a^3*c*d-2*a^2*b^2*d+3*a^2*b*d^2-a^2*d^3+a*b^3*c-a*b^2*c*d+a*b*c^3-a*b*c*d^2-a*c^3*d+a*c*d^3-b^3*c^2+3*b^2*c^2*d-2*b*c^2*d^2)  ,  0]
[(a*c^2*d+a*d^3-2*b^3*c+6*b^2*c*d-6*b*c*d^2-c^3*d+c*d^3)*y+(-a^3*b*d+a^3*d^2+2*a^2*b^2*c-3*a^2*b*c*d+a^2*c*d^2+a*b^3*d-a*b^2*d^2-2*a*b*d^3-2*a*c^2*d^2-b^3*c*d-2*b^2*c^3+b^2*c*d^2+4*b*c^3*d+2*b*c*d^3)  ,  0]
[(a*c^3+a*c*d^2+b^2*c^2+b^2*d^2-2*b*c^2*d-2*b*d^3-c^4+d^4)*y+(-a^2*b*c^2-a^2*b*d^2+a^2*c^2*d+a^2*d^3-a*b*c^3-a*b*c*d^2-a*c^3*d-a*c*d^3+2*b*c^4+2*b*c^2*d^2)  ,  0]
[(2*b^2*c^2*d+2*b^2*d^3+b*c^4-2*b*c^2*d^2-3*b*d^4-c^4*d+d^5)*y+(2*a^2*b*c^2-2*b^3*d^2-2*b*c^4+2*b*d^4)*y(0)+(a^3*b*c*d-a^3*c^3-a^3*c*d^2+a^2*b^2*d^2-4*a^2*b*c^2*d-2*a^2*b*d^3+a^2*c^2*d^2+a^2*d^4+a*b^3*c*d+a*c^5-a*c*d^4+b^4*d^2-b^3*c^2*d+b^3*d^3-b^2*c^2*d^2-b^2*d^4+3*b*c^4*d+2*b*c^2*d^3-b*d^5)  ,  0]
[(4*b^3*c^2+12*b^2*d^3+5*b*c^4-2*b*c^2*d^2-19*b*d^4-5*c^4*d-2*c^2*d^3+7*d^5)*y+(10*a^2*b*c^2-10*b^3*d^2-10*b*c^4+10*b*d^4)*y(0)+(7*a^3*b*c*d-5*a^3*c^3-7*a^3*c*d^2-4*a^2*b^2*c^2+5*a^2*b^2*d^2-16*a^2*b*c^2*d-12*a^2*b*d^3+5*a^2*c^2*d^2+7*a^2*d^4+3*a*b^3*c*d+2*a*b^2*c*d^2-2*a*b*c^3*d+2*a*b*c*d^3+5*a*c^5+2*a*c^3*d^2-7*a*c*d^4+5*b^4*d^2-3*b^3*c^2*d+5*b^3*d^3+4*b^2*c^4-7*b^2*c^2*d^2-5*b^2*d^4+11*b*c^4*d+10*b*c^2*d^3-5*b*d^5)  ,  0]
[(2*b^4*c+3*b^2*c^3-9*b^2*c*d^2-6*b*c^3*d+10*b*c*d^3+3*c^3*d^2-3*c*d^4)*y+(a^3*b^2*d-3*a^3*b*c^2-a^3*b*d^2+3*a^3*c^2*d-2*a^2*b^3*c-3*a^2*b^2*c*d+8*a^2*b*c*d^2-3*a^2*c*d^3-a*b^4*d+3*a*b^3*c^2+a*b^3*d^2-4*a*b^2*c^2*d+a*b^2*d^3+3*a*b*c^4-2*a*b*c^2*d^2-a*b*d^4-3*a*c^4*d+3*a*c^2*d^3+b^4*c*d-b^3*c^3-b^3*c*d^2+6*b^2*c^3*d-b^2*c*d^3-5*b*c^3*d^2+b*c*d^4)  ,  0]
[(b^2*c^4-b^2*d^4-2*b*c^4*d+2*b*d^5+c^4*d^2-d^6)*y+(-a^3*b*c^3-a^3*b*c*d^2+a^3*c^3*d+a^3*c*d^3+a^2*b*c^2*d^2+a^2*b*d^4-a^2*c^2*d^3-a^2*d^5+a*b^3*c^3+a*b^3*c*d^2-a*b^2*c^3*d-a*b^2*c*d^3+a*b*c^5-a*b*c*d^4-a*c^5*d+a*c*d^5-b^3*c^4-b^3*c^2*d^2+b^2*c^4*d+b^2*c^2*d^3)  ,  0]
[(b*c^6+b*c^4*d^2-b*c^2*d^4-b*d^6-c^6*d-c^4*d^3+c^2*d^5+d^7)*y+(2*a^2*b*c^4-2*b^3*c^4-2*b^3*c^2*d^2+2*b^3*d^4-2*b*c^6+2*b*c^4*d^2+2*b*c^2*d^4-2*b*d^6)*y(0)+(2*a^3*b*c^3*d+a^3*b*c*d^3-a^3*c^5-2*a^3*c^3*d^2-a^3*c*d^4-a^2*b^2*c^4-a^2*b^2*c^2*d^2-a^2*b^2*d^4-3*a^2*b*c^4*d-a^2*b*c^2*d^3+a^2*c^4*d^2+2*a^2*c^2*d^4+a^2*d^6-2*a*b^3*c^3*d-3*a*b^3*c*d^3+a*b^2*c^5+3*a*b^2*c^3*d^2+2*a*b^2*c*d^4-2*a*b*c^5*d+2*a*b*c*d^5+a*c^7+a*c^5*d^2-a*c^3*d^4-a*c*d^6+b^4*c^4+b^4*c^2*d^2-b^4*d^4+3*b^3*c^4*d+4*b^3*c^2*d^3-b^3*d^5-3*b^2*c^4*d^2-2*b^2*c^2*d^4+b^2*d^6+3*b*c^6*d-b*c^4*d^3-3*b*c^2*d^5+b*d^7)  ,  0]
[(b-d)*x+(-a+c)*y+(2*a*d-2*b*c)  ,  0]
[(a-c)*x+(-b+d)*y  ,  0]
[(4*a*d-4*b*c)*r(2)^2+(2*b^2*d-2*b*d^2)*x(0)+(-2*a^2*c+2*a*c^2-4*b^2*c+4*b*c*d)*y(0)+(-a^3*d+a^2*b*c+3*a^2*c*d-3*a*b^2*d-a*b*c^2+3*a*b*d^2-3*a*c^2*d-a*d^3+3*b^3*c-b^2*c*d+b*c^3-b*c*d^2)  ,  0]
[(4*a^2*b*c-4*b^3*c-4*b*c^3+4*b*c*d^2)*r(2)^2+(2*b^4*d-2*b^2*d^3)*x(0)+(-2*a^3*c^2+2*a^2*b^2*c+2*a*c^4+2*b^3*c*d-2*b^2*c^3-2*b*c*d^3)*y(0)+(-a^4*c*d+a^3*b^2*d-a^3*b*d^2+2*a^3*c^2*d-a^2*b^3*c-2*a^2*b^2*c*d-a^2*c*d^3-a*b^4*d-a*b^3*c^2+2*a*b^2*d^3-a*b*c^4-a*b*d^4-a*c^4*d+a*c^2*d^3+b^5*c-3*b^4*c*d+3*b^3*c^3-b^3*c*d^2+b^2*c^3*d+2*b^2*c*d^3+b*c^5+b*c*d^4)  ,  0]
[(4*a*b^2*c^2-4*b^3*c*d-4*b*c^3*d+4*b*c*d^3)*r(2)^2+(2*b^4*d^2-2*b^2*d^4)*x(0)+(-2*a^2*b*c^3+6*a*b^3*c^2+2*a*b*c^4+4*b^4*c*d-4*b^3*c^3-2*b^3*c*d^2-2*b^2*c^3*d-2*b^2*c*d^3)*y(0)+(-a^3*b*c^2*d+3*a^2*b^3*c*d-a^2*b^2*c^3-2*a^2*b^2*c*d^2+2*a^2*b*c^3*d-a^2*b*c*d^3-4*a*b^4*c^2-8*a*b^3*c^2*d-a*b^3*d^3+a*b^2*c^2*d^2+a*b^2*d^4-a*b*c^4*d+a*b*c^2*d^3-b^5*c*d+2*b^4*c^3-5*b^4*c*d^2+7*b^3*c^3*d+4*b^3*c*d^3+b^2*c^3*d^2+3*b^2*c*d^4+b*c^5*d-b*c*d^5)  ,  0]
[(4*b^3*c^3-4*b^3*c*d^2-4*b*c^3*d^2+4*b*c*d^4)*r(2)^2+(2*b^4*d^3-2*b^2*d^5)*x(0)+(-2*a*b^2*c^4+10*b^4*c^3+8*b^4*c*d^2-8*b^3*c^3*d-6*b^3*c*d^3+4*b^2*c^5-2*b^2*c^3*d^2-4*b^2*c*d^4-2*b*c^5*d+2*b*c*d^5)*y(0)+(2*a^2*b^3*c^3+2*a^2*b^3*c*d^2-2*a^2*b^2*c^3*d-a^2*b^2*c*d^3+a^2*b*c^5-a^2*b*c*d^4+2*a*b^4*c^2*d-a*b^3*c^4-4*a*b^3*c^2*d^2-a*b^3*d^4+4*a*b^2*c^4*d+a*b^2*c^2*d^3+a*b^2*d^5-a*b*c^6+a*b*c^2*d^4-6*b^5*c^3-4*b^5*c*d^2-3*b^4*c^3*d-4*b^4*c*d^3-3*b^3*c^5+8*b^3*c^3*d^2+7*b^3*c*d^4-2*b^2*c^5*d+b^2*c^3*d^3+3*b^2*c*d^5+2*b*c^5*d^2-2*b*c*d^6)  ,  0]
[(4*c^2+4*d^2)*y(0)^2+(-4*c^2)*r(2)^2+(-8*b*c^2-8*b*d^2-4*c^2*d-4*d^3)*y(0)+(4*b^2*c^2+4*b^2*d^2+4*b*c^2*d+4*b*d^3+c^4+2*c^2*d^2+d^4)  ,  0]
[(4*a*c+4*b*d)*y(0)^2+(-4*a*c)*r(2)^2+(-6*a*b*c-6*b^2*d-6*b*c^2-6*b*d^2)*y(0)+(a^3*c-4*a^2*c^2+3*a*b^2*c-2*a*b*c*d+4*a*c^3+2*b^3*d+3*b^2*c^2+5*b^2*d^2+6*b*c^2*d+2*b*d^3)  ,  0]
[(4*a^2+4*b^2)*y(0)^2+(-4*a^2)*r(2)^2+(-4*a^2*b-8*a*b*c-4*b^3-8*b^2*d)*y(0)+(a^4-4*a^3*c+2*a^2*b^2-4*a^2*b*d+4*a^2*c^2+4*a*b^2*c+8*a*b*c*d+b^4+4*b^3*d+4*b^2*d^2)  ,  0]
[(4*d)*x(0)*y(0)+(-4*c)*y(0)^2+(4*c)*r(2)^2+(-4*b*d-2*d^2)*x(0)+(4*b*c+2*c*d)*y(0)+(-2*a^2*c+2*a*c^2-2*b^2*c+2*b*c*d-c^3-c*d^2)  ,  0]
[(4*b)*x(0)*y(0)+(-4*a)*y(0)^2+(4*a)*r(2)^2+(-2*b^2-4*b*d)*x(0)+(2*a*b+4*b*c)*y(0)+(-a^3+4*a^2*c-a*b^2+6*a*b*d-4*a*c^2-2*b^2*c-4*b*c*d)  ,  0]
[x(0)^2+y(0)^2-r(2)^2+(-2*a*c-2*b*d)  ,  0]
[(2*a*c-2*b*d-2*c^2+2*d^2)*y*y(0)+(-2*a*c*d+2*b^2*d+b*c^2-b*d^2+c^2*d-d^3)*y+(-2*a^2*c^2-2*a*b*c*d+2*a*c^3+2*b*c^2*d)  ,  0]
[(2*b*c^2-2*b*d^2-2*c^2*d+2*d^3)*y*y(0)+(-b^2*c^2+3*b^2*d^2+b*c^2*d-3*b*d^3)*y+(a^2*b*c^2-a^2*b*d^2-a^2*c^2*d+a^2*d^3+2*a*b^2*c*d-a*b*c^3-a*b*c*d^2+a*c^3*d-a*c*d^3-2*b^2*c^2*d+2*b*c^2*d^2)  ,  0]
[(4*b^2*d-4*b*d^2)*y*y(0)+(b^2*c^2-7*b^2*d^2-3*b*c^2*d+9*b*d^3+2*c^2*d^2-2*d^4)*y+(-2*a*b^2*c-2*b^3*d+2*b*c^2*d+2*b*d^3)*y(0)+(-2*a^3*b*c+2*a^3*c*d-3*a^2*b^2*d+a^2*b*c^2+5*a^2*b*d^2-2*a^2*d^3+2*a*b^3*c+a*b*c^3-a*b*c*d^2-2*a*c^3*d+2*a*c*d^3+b^4*d-b^3*c^2+b^3*d^2+3*b^2*c^2*d-b^2*d^3-5*b*c^2*d^2-b*d^4)  ,  0]
[(4*b^2*c-4*b*c*d)*y*y(0)+(-2*b^3*c-2*b^2*c*d-b*c^3+5*b*c*d^2+c^3*d-c*d^3)*y+(-2*a^2*b*c-2*b^3*c+2*b*c^3+2*b*c*d^2)*y(0)+(a^3*c^2+a^2*b^2*c+3*a^2*b*c*d-a^2*c*d^2-a*b^2*c^2-a*c^4+a*c^2*d^2+b^4*c+b^3*c*d-b^2*c*d^2-3*b*c^3*d-b*c*d^3)  ,  0]
[(b-d)*y*x(0)+(a-c)*y*y(0)+(-a*b+c*d)*y+(-a^2*c-a*b*d+a*c^2+b*c*d)  ,  0]
[(b-d)*y^2+(-b^2+d^2)*y  ,  0]
[(a-c)*y^2+(-a*b-a*d+b*c+c*d)*y  ,  0]
[x^2-2*x*x(0)+y^2-2*y*y(0)+(2*a*c+2*b*d)  ,  0]
[(8*a*b^2*c-8*b^3*d-8*b*c^2*d+8*b*d^3)*y(0)*r(2)^2+(4*a*b^3*c+4*a*b*c^3+4*b^4*d-12*b^3*c^2+4*b^3*d^2-4*b^2*d^3-4*b*c^4+8*b*c^2*d^2-4*b*d^4)*r(2)^2+(-2*a^3*c^3+4*a*b^4*c-2*a*b^2*c^3+2*a*c^5+4*b^5*d-12*b^4*c^2-12*b^4*d^2+6*b^3*c^2*d+6*b^3*d^3-4*b^2*c^4+4*b^2*c^2*d^2+8*b^2*d^4+6*b*c^4*d-2*b*c^2*d^3-6*b*d^5)*y(0)+(-a^4*c^2*d-3*a^3*b*c^3-4*a^3*b*c*d^2+2*a^3*c^3*d+2*a^2*b^4*d+a^2*b^3*c^2+a^2*b^3*d^2-4*a^2*b^2*c^2*d-3*a^2*b^2*d^3+5*a^2*b*c^4+5*a^2*b*c^2*d^2-a^2*c^2*d^3-4*a*b^5*c-4*a*b^4*c*d-3*a*b^3*c^3-4*a*b^3*c*d^2+5*a*b^2*c^3*d+3*a*b^2*c*d^3-3*a*b*c^5-2*a*b*c^3*d^2-a*b*c*d^4-a*c^5*d+a*c^3*d^3-2*b^6*d+9*b^5*c^2+5*b^5*d^2+3*b^4*c^2*d+3*b^4*d^3+6*b^3*c^4-2*b^3*c^2*d^2-8*b^3*d^4-b^2*c^4*d-b^2*c^2*d^3-b^2*d^5+b*c^6-3*b*c^4*d^2+b*c^2*d^4+3*b*d^6)  ,  0]
[(4*b^3*c^2-4*b^3*d^2-4*b*c^2*d^2+4*b*d^4)*y(0)*r(2)^2+(6*b^4*c^2+2*b^4*d^2-10*b^3*c^2*d+2*b^3*d^3+4*b^2*c^4-2*b^2*c^2*d^2-2*b^2*d^4-4*b*c^4*d+6*b*c^2*d^3-2*b*d^5)*r(2)^2+(8*b^5*c^2+8*b^5*d^2-8*b^4*c^2*d-8*b^4*d^3+4*b^3*c^4-4*b^3*d^4-4*b^2*c^4*d+4*b^2*d^5)*y(0)+(-6*b^6*c^2-6*b^6*d^2+2*b^5*c^2*d+2*b^5*d^3-5*b^4*c^4+2*b^4*c^2*d^2+7*b^4*d^4+3*b^3*c^4*d+2*b^3*c^2*d^3-b^3*d^5-b^2*c^6+2*b^2*c^4*d^2+b^2*c^2*d^4-2*b^2*d^6+b*c^6*d-b*c^2*d^5)  ,  0]
[(2*a*c-2*b*d-2*c^2+2*d^2)*y*r(2)^2+(-2*a^2*c^2+2*a*b^2*c+2*a*c^3+2*b^3*d-4*b^2*c^2-2*b^2*d^2+2*b*c^2*d)*y(0)+(-a^3*c*d+a^2*b^2*d-a^2*b*d^2+3*a^2*c^2*d-2*a*b^3*c-3*a*b^2*c*d-a*b*c^3+a*b*c*d^2-2*a*c^3*d-b^4*d+3*b^3*c^2+2*b^2*c^2*d+b^2*d^3+b*c^4-b*c^2*d^2)  ,  0]
[(2*b*c^2-2*b*d^2-2*c^2*d+2*d^3)*y*r(2)^2+(2*a^2*b*c^2-2*a*b*c^3+4*b^3*c^2+2*b^3*d^2-4*b^2*c^2*d-2*b^2*d^3)*y(0)+(a^3*b*c*d-a^3*c^3-a^3*c*d^2+a^2*b^2*d^2-4*a^2*b*c^2*d-a^2*b*d^3+a^2*c^4+a^2*c^2*d^2+a*b^3*c*d-2*a*b^2*c*d^2+3*a*b*c^3*d+a*b*c*d^3-2*b^4*c^2-b^4*d^2-b^3*c^2*d+3*b^2*c^2*d^2+b^2*d^4)  ,  0]
[(4*b^2*d-4*b*d^2)*y*r(2)^2+(-4*a*b^2*c+4*b*c^2*d)*r(2)^2+(2*a^2*b*c^2-4*a*b^3*c-2*a*b*c^3-4*b^4*d+4*b^3*c^2+2*b^3*d^2+2*b^2*d^3)*y(0)+(a^3*b*c*d-2*a^2*b^3*d+a^2*b^2*c^2+2*a^2*b^2*d^2-3*a^2*b*c^2*d+4*a*b^4*c+5*a*b^3*c*d+a*b^2*c^3-a*b^2*c*d^2+a*b*c^3*d-a*b*c*d^3+2*b^5*d-3*b^4*c^2+2*b^4*d^2-4*b^3*c^2*d-3*b^3*d^3-b^2*c^4-b^2*d^4)  ,  0]
[(4*b^2*c-4*b*c*d)*y*r(2)^2+(-4*b^3*c+4*b*c*d^2)*r(2)^2+(2*b^4*d-2*b^2*d^3)*x(0)+(2*a^2*b^2*c-2*b^2*c^3)*y(0)+(a^3*b^2*d-a^3*b*c^2-a^3*b*d^2-a^2*b^3*c-2*a^2*b^2*c*d-a*b^4*d+2*a*b^2*d^3+a*b*c^4-a*b*d^4+b^5*c-2*b^4*c*d+2*b^3*c^3+b^2*c^3*d+b^2*c*d^3)  ,  0]
[(4*b-4*d)*y*y(0)^2+(-2*b+2*d)*y*r(2)^2+(-4*b^2+4*d^2)*y*y(0)+(2*b^3-2*b^2*d+2*b*d^2-2*d^3)*y+(-2*a*b*c-2*b^2*d+2*b*c^2+2*b*d^2)*y(0)+(a^2*b*d+a^2*c^2-a^2*d^2+2*a*b*c*d-a*c^3+a*c*d^2+b^3*d-3*b*c^2*d-b*d^3)  ,  0]
[(4*a-4*c)*y*y(0)^2+(-2*a+2*c)*y*r(2)^2+(-4*a*b+4*c*d)*y*y(0)+(2*a*b^2+2*a*c^2+2*b^2*c-4*b*c*d-2*c^3)*y+(-2*a^2*c+2*a*c^2-2*b^2*c+2*b*c*d)*y(0)+(a^3*d-5*a^2*b*c-a^2*c*d-5*a*b^2*d+2*a*b*c^2-4*a*b*d^2+b^3*c+5*b^2*c*d+3*b*c^3+3*b*c*d^2)  ,  0]
[(32*b^3*d-32*b*d^3)*y(0)^2*r(2)^2+(-16*a*b^2*c+16*b*c^2*d)*r(2)^4+(-8*a*b*c^3-64*b^4*d-32*b^3*d^2+72*b^2*d^3+8*b*c^4+24*b*d^4)*y(0)*r(2)^2+(4*a^3*c^3+24*a*b^4*c-4*a*c^5+24*b^5*d-36*b^4*c^2+36*b^4*d^2+28*b^3*c^2*d-24*b^3*d^3-24*b^2*c^4+16*b^2*c^2*d^2-32*b^2*d^4+24*b*c^4*d-32*b*c^2*d^3-4*b*d^5)*r(2)^2+(10*a^2*b*c^4+8*a*b^5*c-6*a*b*c^5+8*b^6*d-32*b^5*c^2-32*b^5*d^2+4*b^4*c^2*d+4*b^4*d^3-26*b^3*c^4+10*b^3*c^2*d^2+46*b^3*d^4+2*b^2*c^4*d+10*b^2*c^2*d^3+2*b^2*d^5-4*b*c^6+24*b*c^4*d^2-28*b*d^6)*y(0)+(a^5*c^3+a^5*c*d^2-a^4*c^4-a^4*c^2*d^2-5*a^3*b*c*d^3-a^3*c^5+a^3*c*d^4+4*a^2*b^5*d+10*a^2*b^3*c^2*d+10*a^2*b^3*d^3-10*a^2*b^2*c^4-19*a^2*b^2*c^2*d^2-14*a^2*b^2*d^4-3*a^2*b*c^4*d+10*a^2*b*c^2*d^3-a^2*c^6-2*a^2*c^4*d^2-a^2*c^2*d^4-8*a*b^6*c-8*a*b^5*c*d+7*a*b^4*c^3+7*a*b^4*c*d^2-22*a*b^3*c^3*d-27*a*b^3*c*d^3+19*a*b^2*c^5+23*a*b^2*c^3*d^2+10*a*b^2*c*d^4-8*a*b*c^5*d-5*a*b*c^3*d^3+9*a*b*c*d^5+2*a*c^7+2*a*c^5*d^2-4*b^7*d+24*b^6*c^2+16*b^6*d^2+6*b^5*c^2*d+6*b^5*d^3+17*b^4*c^4-6*b^4*c^2*d^2-28*b^4*d^4+9*b^3*c^4*d-b^3*c^2*d^3-17*b^3*d^5-2*b^2*c^6-13*b^2*c^4*d^2-4*b^2*c^2*d^4+13*b^2*d^6+4*b*c^6*d-12*b*c^4*d^3-2*b*c^2*d^5+14*b*d^7)  ,  0]
[(32*b^3*c-32*b*c*d^2)*y(0)^2*r(2)^2+(-16*b^3*c+16*b*c*d^2)*r(2)^4+(8*b^4*d-8*b^2*d^3)*x(0)*r(2)^2+(-24*b^4*c-64*b^3*c*d+16*b^2*c^3+40*b^2*c*d^2-16*b*c^3*d+48*b*c*d^3)*y(0)*r(2)^2+(16*b^5*c+8*b^4*c*d+16*b^3*c*d^2-8*b^2*c^3*d-16*b^2*c*d^3+8*b*c^3*d^2-24*b*c*d^4)*r(2)^2+(-4*b^6*d+4*b^5*d^2-2*b^4*d^3+2*b^2*d^5)*x(0)+(-4*a^2*b^4*c+4*a*b^4*c^2+2*a*b^2*c^4-10*b^4*c^3-8*b^4*c*d^2+8*b^3*c^3*d+6*b^3*c*d^3-8*b^2*c^5+2*b^2*c^3*d^2+8*b^2*c*d^4+6*b*c^5*d-6*b*c*d^5)*y(0)+(-2*a^3*b^4*d+2*a^3*b*c^2*d^2+2*a^3*b*d^4+2*a^2*b^5*c+6*a^2*b^4*c*d-a^2*b^2*c*d^3-a^2*b*c^5-2*a^2*b*c^3*d^2-a^2*b*c*d^4+2*a*b^6*d-2*a*b^5*c^2-2*a*b^5*d^2-4*a*b^4*c^2*d+2*a*b^4*d^3-a*b^3*c^4-2*a*b^3*c^2*d^2-3*a*b^3*d^4+3*a*b^2*c^2*d^3-a*b^2*d^5+a*b*c^6-2*a*b*c^4*d^2-a*b*c^2*d^4+2*a*b*d^6-2*b^7*c+6*b^6*c*d+2*b^5*c^3-4*b^5*c*d^2+5*b^4*c^3*d+6*b^4*c*d^3+3*b^3*c^5-6*b^3*c^3*d^2-5*b^3*c*d^4+2*b^2*c^5*d-b^2*c^3*d^3-3*b^2*c*d^5-2*b*c^5*d^2+2*b*c*d^6)  ,  0]

Module Groebner basis: 
[(a^4*b*d-a^4*d^2-a^3*b^2*c+a^3*c*d^2-a^2*b^3*d+a^2*b^2*c^2+a^2*b^2*d^2-2*a^2*b*c^2*d+a^2*b*d^3+a^2*c^2*d^2-a^2*d^4+a*b^4*c+a*b^2*c^3-2*a*b^2*c*d^2-a*c^3*d^2+a*c*d^4-b^4*c^2+b^3*c^2*d-b^2*c^4+b^2*c^2*d^2+b*c^4*d-b*c^2*d^3) , 0].

LPP Set of Module Groebner Basis under specialization:
[ 1 ]

Branch 2:
constraints: a^4*b*d-a^4*d^2-a^3*b^2*c+a^3*c*d^2-a^2*b^3*d+a^2*b^2*c^2+a^2*b^2*d^2-2*a^2*b*c^2*d+a^2*b*d^3+a^2*c^2*d^2-a^2*d^4+a*b^4*c+a*b^2*c^3-2*a*b^2*c*d^2-a*c^3*d^2+a*c*d^4-b^4*c^2+b^3*c^2*d-b^2*c^4+b^2*c^2*d^2+b*c^4*d-b*c^2*d^3=0,a^4*b*c-a^4*c*d+a^3*b^2*d-a^3*b*c^2-a^3*b*d^2+a^3*c^2*d-a^2*b^3*c-a^2*b*c^3+2*a^2*b*c*d^2+a^2*c^3*d-a^2*c*d^3-a*b^4*d+a*b^3*c^2+a*b^3*d^2-2*a*b^2*c^2*d+a*b^2*d^3+a*b*c^4-a*b*d^4-a*c^4*d+a*c^2*d^3+b^4*c*d-b^3*c*d^2+b^2*c^3*d-b^2*c*d^3-b*c^3*d^2+b*c*d^4!=0,
RGB from KSW:
[(a^4*b*c-a^4*c*d+a^3*b^2*d-a^3*b*c^2-a^3*b*d^2+a^3*c^2*d-a^2*b^3*c-a^2*b*c^3+2*a^2*b*c*d^2+a^2*c^3*d-a^2*c*d^3-a*b^4*d+a*b^3*c^2+a*b^3*d^2-2*a*b^2*c^2*d+a*b^2*d^3+a*b*c^4-a*b*d^4-a*c^4*d+a*c^2*d^3+b^4*c*d-b^3*c*d^2+b^2*c^3*d-b^2*c*d^3-b*c^3*d^2+b*c*d^4)  ,  0]
[(a^3*b^2*c^2+a^3*b^2*d^2-a^3*b*c^2*d-a^3*b*d^3-a^2*b^2*c^3-a^2*b^2*c*d^2+a^2*b*c^3*d+a^2*b*c*d^3-a*b^4*c^2-a*b^4*d^2+a*b^3*c^2*d+a*b^3*d^3-a*b^2*c^4+a*b^2*d^4+a*b*c^4*d-a*b*d^5+b^4*c^3+b^4*c*d^2-b^3*c^3*d-b^3*c*d^3+b^2*c^5-b^2*c*d^4-b*c^5*d+b*c*d^5)  ,  0]
[(2*a*d-2*b*c)*y(0)+(-a^2*c-2*a*b*d+a*c^2-a*d^2+b^2*c+2*b*c*d)  ,  0]
[(2*a^3*b*c-2*a^2*b*c^2-2*a*b*c^3-2*b^4*d+2*b^3*d^2+2*b^2*d^3+2*b*c^4-2*b*d^4)*y(0)+(-a^4*c^2-3*a^3*b*c*d+a^3*c^3+a^2*b^3*d-a^2*b^2*d^2+4*a^2*b*c^2*d+a^2*c^4-a^2*c^2*d^2-a*b^3*c*d+a*b^2*c^3+2*a*b^2*c*d^2+a*b*c^3*d-a*b*c*d^3-a*c^5+a*c^3*d^2+b^5*d-2*b^3*d^3-b^2*c^4-b^2*c^2*d^2-2*b*c^4*d+b*c^2*d^3+b*d^5)  ,  0]
[(2*a^2*b^2*c^2-2*a*b^2*c^3-2*b^4*d^2+2*b^3*d^3-2*b^2*c^4+2*b^2*d^4+2*b*c^4*d-2*b*d^5)*y(0)+(a^3*b^2*c*d-a^3*b*c^3-a^3*b*c*d^2+a^2*b^3*d^2-4*a^2*b^2*c^2*d-a^2*b^2*d^3+a^2*b*c^4+a^2*b*c^2*d^2+a*b^4*c*d-2*a*b^3*c*d^2+3*a*b^2*c^3*d+a*b^2*c*d^3+b^5*d^2-b^4*c^2*d+b^3*c^4+b^3*c^2*d^2-2*b^3*d^4-b*c^4*d^2+b*d^6)  ,  0]
[(2*a*b^3*c^3-2*b^4*d^3-2*b^3*c^4+2*b^3*d^4-2*b^2*c^4*d+2*b^2*d^5+2*b*c^4*d^2-2*b*d^6)*y(0)+(2*a^2*b^3*c^2*d+a^2*b^3*d^3-a^2*b^2*c^4-2*a^2*b^2*c^2*d^2-a^2*b^2*d^4+2*a*b^4*c*d^2-5*a*b^3*c^3*d-3*a*b^3*c*d^3+2*a*b^2*c^5+2*a*b^2*c^3*d^2-a*b*c^5*d+a*b*c*d^5+b^5*d^3-2*b^4*c^2*d^2+4*b^3*c^4*d+2*b^3*c^2*d^3-2*b^3*d^5-b^2*c^6+b^2*c^2*d^4+b*c^6*d-b*c^4*d^3-b*c^2*d^5+b*d^7)  ,  0]
[(2*b^4*c^4-2*b^4*d^4-2*b^3*c^4*d+2*b^3*d^5-2*b^2*c^4*d^2+2*b^2*d^6+2*b*c^4*d^3-2*b*d^7)*y(0)+(a^2*b^3*c^4+2*a^2*b^3*c^2*d^2+a^2*b^3*d^4-a^2*b^2*c^4*d-2*a^2*b^2*c^2*d^3-a^2*b^2*d^5+2*a*b^4*c^3*d+2*a*b^4*c*d^3-a*b^3*c^5-4*a*b^3*c^3*d^2-3*a*b^3*c*d^4+2*a*b^2*c^5*d+2*a*b^2*c^3*d^3-a*b*c^5*d^2+a*b*c*d^6-b^5*c^4+b^5*d^4-2*b^4*c^4*d-2*b^4*c^2*d^3+4*b^3*c^4*d^2+2*b^3*c^2*d^4-2*b^3*d^6-b^2*c^6*d+b^2*c^2*d^5+b*c^6*d^2-b*c^4*d^4-b*c^2*d^6+b*d^8)  ,  0]
[(2*c)*x(0)+(2*d)*y(0)+(-2*a*c-2*b*d-c^2-d^2)  ,  0]
[(2*a)*x(0)+(2*b)*y(0)+(-a^2-2*a*c-b^2-2*b*d)  ,  0]
[(a^2-2*a*c-b^2+2*b*d+c^2-d^2)*y+(-2*a^2*d+2*a*b*c+2*a*c*d-2*b*c^2)  ,  0]
[(a*b*d+a*c^2+b^2*c-3*b*c*d-c^3+c*d^2)*y+(-a^2*b*c+a^2*c*d-a*b^2*d-a*b*c^2-a*b*d^2-a*c^2*d+b^2*c*d+2*b*c^3+b*c*d^2)  ,  0]
[(a*b*c-a*c*d-b^2*d-b*c^2+2*b*d^2+c^2*d-d^3)*y+(a^2*b*d-a^2*d^2-a*b^2*c+a*c*d^2+b^2*c^2-b*c^2*d)  ,  0]
[(2*b^3*d+b^2*c^2-5*b^2*d^2-2*b*c^2*d+4*b*d^3+c^2*d^2-d^4)*y+(-a^3*b*c+a^3*c*d-2*a^2*b^2*d+3*a^2*b*d^2-a^2*d^3+a*b^3*c-a*b^2*c*d+a*b*c^3-a*b*c*d^2-a*c^3*d+a*c*d^3-b^3*c^2+3*b^2*c^2*d-2*b*c^2*d^2)  ,  0]
[(a*c^2*d+a*d^3-2*b^3*c+6*b^2*c*d-6*b*c*d^2-c^3*d+c*d^3)*y+(-a^3*b*d+a^3*d^2+2*a^2*b^2*c-3*a^2*b*c*d+a^2*c*d^2+a*b^3*d-a*b^2*d^2-2*a*b*d^3-2*a*c^2*d^2-b^3*c*d-2*b^2*c^3+b^2*c*d^2+4*b*c^3*d+2*b*c*d^3)  ,  0]
[(a*c^3+a*c*d^2+b^2*c^2+b^2*d^2-2*b*c^2*d-2*b*d^3-c^4+d^4)*y+(-a^2*b*c^2-a^2*b*d^2+a^2*c^2*d+a^2*d^3-a*b*c^3-a*b*c*d^2-a*c^3*d-a*c*d^3+2*b*c^4+2*b*c^2*d^2)  ,  0]
[(2*b^2*c^2*d+2*b^2*d^3+b*c^4-2*b*c^2*d^2-3*b*d^4-c^4*d+d^5)*y+(2*a^2*b*c^2-2*b^3*d^2-2*b*c^4+2*b*d^4)*y(0)+(a^3*b*c*d-a^3*c^3-a^3*c*d^2+a^2*b^2*d^2-4*a^2*b*c^2*d-2*a^2*b*d^3+a^2*c^2*d^2+a^2*d^4+a*b^3*c*d+a*c^5-a*c*d^4+b^4*d^2-b^3*c^2*d+b^3*d^3-b^2*c^2*d^2-b^2*d^4+3*b*c^4*d+2*b*c^2*d^3-b*d^5)  ,  0]
[(4*b^3*c^2+12*b^2*d^3+5*b*c^4-2*b*c^2*d^2-19*b*d^4-5*c^4*d-2*c^2*d^3+7*d^5)*y+(10*a^2*b*c^2-10*b^3*d^2-10*b*c^4+10*b*d^4)*y(0)+(7*a^3*b*c*d-5*a^3*c^3-7*a^3*c*d^2-4*a^2*b^2*c^2+5*a^2*b^2*d^2-16*a^2*b*c^2*d-12*a^2*b*d^3+5*a^2*c^2*d^2+7*a^2*d^4+3*a*b^3*c*d+2*a*b^2*c*d^2-2*a*b*c^3*d+2*a*b*c*d^3+5*a*c^5+2*a*c^3*d^2-7*a*c*d^4+5*b^4*d^2-3*b^3*c^2*d+5*b^3*d^3+4*b^2*c^4-7*b^2*c^2*d^2-5*b^2*d^4+11*b*c^4*d+10*b*c^2*d^3-5*b*d^5)  ,  0]
[(2*b^4*c+3*b^2*c^3-9*b^2*c*d^2-6*b*c^3*d+10*b*c*d^3+3*c^3*d^2-3*c*d^4)*y+(a^3*b^2*d-3*a^3*b*c^2-a^3*b*d^2+3*a^3*c^2*d-2*a^2*b^3*c-3*a^2*b^2*c*d+8*a^2*b*c*d^2-3*a^2*c*d^3-a*b^4*d+3*a*b^3*c^2+a*b^3*d^2-4*a*b^2*c^2*d+a*b^2*d^3+3*a*b*c^4-2*a*b*c^2*d^2-a*b*d^4-3*a*c^4*d+3*a*c^2*d^3+b^4*c*d-b^3*c^3-b^3*c*d^2+6*b^2*c^3*d-b^2*c*d^3-5*b*c^3*d^2+b*c*d^4)  ,  0]
[(b^2*c^4-b^2*d^4-2*b*c^4*d+2*b*d^5+c^4*d^2-d^6)*y+(-a^3*b*c^3-a^3*b*c*d^2+a^3*c^3*d+a^3*c*d^3+a^2*b*c^2*d^2+a^2*b*d^4-a^2*c^2*d^3-a^2*d^5+a*b^3*c^3+a*b^3*c*d^2-a*b^2*c^3*d-a*b^2*c*d^3+a*b*c^5-a*b*c*d^4-a*c^5*d+a*c*d^5-b^3*c^4-b^3*c^2*d^2+b^2*c^4*d+b^2*c^2*d^3)  ,  0]
[(b*c^6+b*c^4*d^2-b*c^2*d^4-b*d^6-c^6*d-c^4*d^3+c^2*d^5+d^7)*y+(2*a^2*b*c^4-2*b^3*c^4-2*b^3*c^2*d^2+2*b^3*d^4-2*b*c^6+2*b*c^4*d^2+2*b*c^2*d^4-2*b*d^6)*y(0)+(2*a^3*b*c^3*d+a^3*b*c*d^3-a^3*c^5-2*a^3*c^3*d^2-a^3*c*d^4-a^2*b^2*c^4-a^2*b^2*c^2*d^2-a^2*b^2*d^4-3*a^2*b*c^4*d-a^2*b*c^2*d^3+a^2*c^4*d^2+2*a^2*c^2*d^4+a^2*d^6-2*a*b^3*c^3*d-3*a*b^3*c*d^3+a*b^2*c^5+3*a*b^2*c^3*d^2+2*a*b^2*c*d^4-2*a*b*c^5*d+2*a*b*c*d^5+a*c^7+a*c^5*d^2-a*c^3*d^4-a*c*d^6+b^4*c^4+b^4*c^2*d^2-b^4*d^4+3*b^3*c^4*d+4*b^3*c^2*d^3-b^3*d^5-3*b^2*c^4*d^2-2*b^2*c^2*d^4+b^2*d^6+3*b*c^6*d-b*c^4*d^3-3*b*c^2*d^5+b*d^7)  ,  0]
[(b-d)*x+(-a+c)*y+(2*a*d-2*b*c)  ,  0]
[(a-c)*x+(-b+d)*y  ,  0]
[(4*a*d-4*b*c)*r(2)^2+(2*b^2*d-2*b*d^2)*x(0)+(-2*a^2*c+2*a*c^2-4*b^2*c+4*b*c*d)*y(0)+(-a^3*d+a^2*b*c+3*a^2*c*d-3*a*b^2*d-a*b*c^2+3*a*b*d^2-3*a*c^2*d-a*d^3+3*b^3*c-b^2*c*d+b*c^3-b*c*d^2)  ,  0]
[(4*a^2*b*c-4*b^3*c-4*b*c^3+4*b*c*d^2)*r(2)^2+(2*b^4*d-2*b^2*d^3)*x(0)+(-2*a^3*c^2+2*a^2*b^2*c+2*a*c^4+2*b^3*c*d-2*b^2*c^3-2*b*c*d^3)*y(0)+(-a^4*c*d+a^3*b^2*d-a^3*b*d^2+2*a^3*c^2*d-a^2*b^3*c-2*a^2*b^2*c*d-a^2*c*d^3-a*b^4*d-a*b^3*c^2+2*a*b^2*d^3-a*b*c^4-a*b*d^4-a*c^4*d+a*c^2*d^3+b^5*c-3*b^4*c*d+3*b^3*c^3-b^3*c*d^2+b^2*c^3*d+2*b^2*c*d^3+b*c^5+b*c*d^4)  ,  0]
[(4*a*b^2*c^2-4*b^3*c*d-4*b*c^3*d+4*b*c*d^3)*r(2)^2+(2*b^4*d^2-2*b^2*d^4)*x(0)+(-2*a^2*b*c^3+6*a*b^3*c^2+2*a*b*c^4+4*b^4*c*d-4*b^3*c^3-2*b^3*c*d^2-2*b^2*c^3*d-2*b^2*c*d^3)*y(0)+(-a^3*b*c^2*d+3*a^2*b^3*c*d-a^2*b^2*c^3-2*a^2*b^2*c*d^2+2*a^2*b*c^3*d-a^2*b*c*d^3-4*a*b^4*c^2-8*a*b^3*c^2*d-a*b^3*d^3+a*b^2*c^2*d^2+a*b^2*d^4-a*b*c^4*d+a*b*c^2*d^3-b^5*c*d+2*b^4*c^3-5*b^4*c*d^2+7*b^3*c^3*d+4*b^3*c*d^3+b^2*c^3*d^2+3*b^2*c*d^4+b*c^5*d-b*c*d^5)  ,  0]
[(4*b^3*c^3-4*b^3*c*d^2-4*b*c^3*d^2+4*b*c*d^4)*r(2)^2+(2*b^4*d^3-2*b^2*d^5)*x(0)+(-2*a*b^2*c^4+10*b^4*c^3+8*b^4*c*d^2-8*b^3*c^3*d-6*b^3*c*d^3+4*b^2*c^5-2*b^2*c^3*d^2-4*b^2*c*d^4-2*b*c^5*d+2*b*c*d^5)*y(0)+(2*a^2*b^3*c^3+2*a^2*b^3*c*d^2-2*a^2*b^2*c^3*d-a^2*b^2*c*d^3+a^2*b*c^5-a^2*b*c*d^4+2*a*b^4*c^2*d-a*b^3*c^4-4*a*b^3*c^2*d^2-a*b^3*d^4+4*a*b^2*c^4*d+a*b^2*c^2*d^3+a*b^2*d^5-a*b*c^6+a*b*c^2*d^4-6*b^5*c^3-4*b^5*c*d^2-3*b^4*c^3*d-4*b^4*c*d^3-3*b^3*c^5+8*b^3*c^3*d^2+7*b^3*c*d^4-2*b^2*c^5*d+b^2*c^3*d^3+3*b^2*c*d^5+2*b*c^5*d^2-2*b*c*d^6)  ,  0]
[(4*c^2+4*d^2)*y(0)^2+(-4*c^2)*r(2)^2+(-8*b*c^2-8*b*d^2-4*c^2*d-4*d^3)*y(0)+(4*b^2*c^2+4*b^2*d^2+4*b*c^2*d+4*b*d^3+c^4+2*c^2*d^2+d^4)  ,  0]
[(4*a*c+4*b*d)*y(0)^2+(-4*a*c)*r(2)^2+(-6*a*b*c-6*b^2*d-6*b*c^2-6*b*d^2)*y(0)+(a^3*c-4*a^2*c^2+3*a*b^2*c-2*a*b*c*d+4*a*c^3+2*b^3*d+3*b^2*c^2+5*b^2*d^2+6*b*c^2*d+2*b*d^3)  ,  0]
[(4*a^2+4*b^2)*y(0)^2+(-4*a^2)*r(2)^2+(-4*a^2*b-8*a*b*c-4*b^3-8*b^2*d)*y(0)+(a^4-4*a^3*c+2*a^2*b^2-4*a^2*b*d+4*a^2*c^2+4*a*b^2*c+8*a*b*c*d+b^4+4*b^3*d+4*b^2*d^2)  ,  0]
[(4*d)*x(0)*y(0)+(-4*c)*y(0)^2+(4*c)*r(2)^2+(-4*b*d-2*d^2)*x(0)+(4*b*c+2*c*d)*y(0)+(-2*a^2*c+2*a*c^2-2*b^2*c+2*b*c*d-c^3-c*d^2)  ,  0]
[(4*b)*x(0)*y(0)+(-4*a)*y(0)^2+(4*a)*r(2)^2+(-2*b^2-4*b*d)*x(0)+(2*a*b+4*b*c)*y(0)+(-a^3+4*a^2*c-a*b^2+6*a*b*d-4*a*c^2-2*b^2*c-4*b*c*d)  ,  0]
[x(0)^2+y(0)^2-r(2)^2+(-2*a*c-2*b*d)  ,  0]
[(2*a*c-2*b*d-2*c^2+2*d^2)*y*y(0)+(-2*a*c*d+2*b^2*d+b*c^2-b*d^2+c^2*d-d^3)*y+(-2*a^2*c^2-2*a*b*c*d+2*a*c^3+2*b*c^2*d)  ,  0]
[(2*b*c^2-2*b*d^2-2*c^2*d+2*d^3)*y*y(0)+(-b^2*c^2+3*b^2*d^2+b*c^2*d-3*b*d^3)*y+(a^2*b*c^2-a^2*b*d^2-a^2*c^2*d+a^2*d^3+2*a*b^2*c*d-a*b*c^3-a*b*c*d^2+a*c^3*d-a*c*d^3-2*b^2*c^2*d+2*b*c^2*d^2)  ,  0]
[(4*b^2*d-4*b*d^2)*y*y(0)+(b^2*c^2-7*b^2*d^2-3*b*c^2*d+9*b*d^3+2*c^2*d^2-2*d^4)*y+(-2*a*b^2*c-2*b^3*d+2*b*c^2*d+2*b*d^3)*y(0)+(-2*a^3*b*c+2*a^3*c*d-3*a^2*b^2*d+a^2*b*c^2+5*a^2*b*d^2-2*a^2*d^3+2*a*b^3*c+a*b*c^3-a*b*c*d^2-2*a*c^3*d+2*a*c*d^3+b^4*d-b^3*c^2+b^3*d^2+3*b^2*c^2*d-b^2*d^3-5*b*c^2*d^2-b*d^4)  ,  0]
[(4*b^2*c-4*b*c*d)*y*y(0)+(-2*b^3*c-2*b^2*c*d-b*c^3+5*b*c*d^2+c^3*d-c*d^3)*y+(-2*a^2*b*c-2*b^3*c+2*b*c^3+2*b*c*d^2)*y(0)+(a^3*c^2+a^2*b^2*c+3*a^2*b*c*d-a^2*c*d^2-a*b^2*c^2-a*c^4+a*c^2*d^2+b^4*c+b^3*c*d-b^2*c*d^2-3*b*c^3*d-b*c*d^3)  ,  0]
[(b-d)*y*x(0)+(a-c)*y*y(0)+(-a*b+c*d)*y+(-a^2*c-a*b*d+a*c^2+b*c*d)  ,  0]
[(b-d)*y^2+(-b^2+d^2)*y  ,  0]
[(a-c)*y^2+(-a*b-a*d+b*c+c*d)*y  ,  0]
[x^2-2*x*x(0)+y^2-2*y*y(0)+(2*a*c+2*b*d)  ,  0]
[(8*a*b^2*c-8*b^3*d-8*b*c^2*d+8*b*d^3)*y(0)*r(2)^2+(4*a*b^3*c+4*a*b*c^3+4*b^4*d-12*b^3*c^2+4*b^3*d^2-4*b^2*d^3-4*b*c^4+8*b*c^2*d^2-4*b*d^4)*r(2)^2+(-2*a^3*c^3+4*a*b^4*c-2*a*b^2*c^3+2*a*c^5+4*b^5*d-12*b^4*c^2-12*b^4*d^2+6*b^3*c^2*d+6*b^3*d^3-4*b^2*c^4+4*b^2*c^2*d^2+8*b^2*d^4+6*b*c^4*d-2*b*c^2*d^3-6*b*d^5)*y(0)+(-a^4*c^2*d-3*a^3*b*c^3-4*a^3*b*c*d^2+2*a^3*c^3*d+2*a^2*b^4*d+a^2*b^3*c^2+a^2*b^3*d^2-4*a^2*b^2*c^2*d-3*a^2*b^2*d^3+5*a^2*b*c^4+5*a^2*b*c^2*d^2-a^2*c^2*d^3-4*a*b^5*c-4*a*b^4*c*d-3*a*b^3*c^3-4*a*b^3*c*d^2+5*a*b^2*c^3*d+3*a*b^2*c*d^3-3*a*b*c^5-2*a*b*c^3*d^2-a*b*c*d^4-a*c^5*d+a*c^3*d^3-2*b^6*d+9*b^5*c^2+5*b^5*d^2+3*b^4*c^2*d+3*b^4*d^3+6*b^3*c^4-2*b^3*c^2*d^2-8*b^3*d^4-b^2*c^4*d-b^2*c^2*d^3-b^2*d^5+b*c^6-3*b*c^4*d^2+b*c^2*d^4+3*b*d^6)  ,  0]
[(4*b^3*c^2-4*b^3*d^2-4*b*c^2*d^2+4*b*d^4)*y(0)*r(2)^2+(6*b^4*c^2+2*b^4*d^2-10*b^3*c^2*d+2*b^3*d^3+4*b^2*c^4-2*b^2*c^2*d^2-2*b^2*d^4-4*b*c^4*d+6*b*c^2*d^3-2*b*d^5)*r(2)^2+(8*b^5*c^2+8*b^5*d^2-8*b^4*c^2*d-8*b^4*d^3+4*b^3*c^4-4*b^3*d^4-4*b^2*c^4*d+4*b^2*d^5)*y(0)+(-6*b^6*c^2-6*b^6*d^2+2*b^5*c^2*d+2*b^5*d^3-5*b^4*c^4+2*b^4*c^2*d^2+7*b^4*d^4+3*b^3*c^4*d+2*b^3*c^2*d^3-b^3*d^5-b^2*c^6+2*b^2*c^4*d^2+b^2*c^2*d^4-2*b^2*d^6+b*c^6*d-b*c^2*d^5)  ,  0]
[(2*a*c-2*b*d-2*c^2+2*d^2)*y*r(2)^2+(-2*a^2*c^2+2*a*b^2*c+2*a*c^3+2*b^3*d-4*b^2*c^2-2*b^2*d^2+2*b*c^2*d)*y(0)+(-a^3*c*d+a^2*b^2*d-a^2*b*d^2+3*a^2*c^2*d-2*a*b^3*c-3*a*b^2*c*d-a*b*c^3+a*b*c*d^2-2*a*c^3*d-b^4*d+3*b^3*c^2+2*b^2*c^2*d+b^2*d^3+b*c^4-b*c^2*d^2)  ,  0]
[(2*b*c^2-2*b*d^2-2*c^2*d+2*d^3)*y*r(2)^2+(2*a^2*b*c^2-2*a*b*c^3+4*b^3*c^2+2*b^3*d^2-4*b^2*c^2*d-2*b^2*d^3)*y(0)+(a^3*b*c*d-a^3*c^3-a^3*c*d^2+a^2*b^2*d^2-4*a^2*b*c^2*d-a^2*b*d^3+a^2*c^4+a^2*c^2*d^2+a*b^3*c*d-2*a*b^2*c*d^2+3*a*b*c^3*d+a*b*c*d^3-2*b^4*c^2-b^4*d^2-b^3*c^2*d+3*b^2*c^2*d^2+b^2*d^4)  ,  0]
[(4*b^2*d-4*b*d^2)*y*r(2)^2+(-4*a*b^2*c+4*b*c^2*d)*r(2)^2+(2*a^2*b*c^2-4*a*b^3*c-2*a*b*c^3-4*b^4*d+4*b^3*c^2+2*b^3*d^2+2*b^2*d^3)*y(0)+(a^3*b*c*d-2*a^2*b^3*d+a^2*b^2*c^2+2*a^2*b^2*d^2-3*a^2*b*c^2*d+4*a*b^4*c+5*a*b^3*c*d+a*b^2*c^3-a*b^2*c*d^2+a*b*c^3*d-a*b*c*d^3+2*b^5*d-3*b^4*c^2+2*b^4*d^2-4*b^3*c^2*d-3*b^3*d^3-b^2*c^4-b^2*d^4)  ,  0]
[(4*b^2*c-4*b*c*d)*y*r(2)^2+(-4*b^3*c+4*b*c*d^2)*r(2)^2+(2*b^4*d-2*b^2*d^3)*x(0)+(2*a^2*b^2*c-2*b^2*c^3)*y(0)+(a^3*b^2*d-a^3*b*c^2-a^3*b*d^2-a^2*b^3*c-2*a^2*b^2*c*d-a*b^4*d+2*a*b^2*d^3+a*b*c^4-a*b*d^4+b^5*c-2*b^4*c*d+2*b^3*c^3+b^2*c^3*d+b^2*c*d^3)  ,  0]
[(4*b-4*d)*y*y(0)^2+(-2*b+2*d)*y*r(2)^2+(-4*b^2+4*d^2)*y*y(0)+(2*b^3-2*b^2*d+2*b*d^2-2*d^3)*y+(-2*a*b*c-2*b^2*d+2*b*c^2+2*b*d^2)*y(0)+(a^2*b*d+a^2*c^2-a^2*d^2+2*a*b*c*d-a*c^3+a*c*d^2+b^3*d-3*b*c^2*d-b*d^3)  ,  0]
[(4*a-4*c)*y*y(0)^2+(-2*a+2*c)*y*r(2)^2+(-4*a*b+4*c*d)*y*y(0)+(2*a*b^2+2*a*c^2+2*b^2*c-4*b*c*d-2*c^3)*y+(-2*a^2*c+2*a*c^2-2*b^2*c+2*b*c*d)*y(0)+(a^3*d-5*a^2*b*c-a^2*c*d-5*a*b^2*d+2*a*b*c^2-4*a*b*d^2+b^3*c+5*b^2*c*d+3*b*c^3+3*b*c*d^2)  ,  0]
[(32*b^3*d-32*b*d^3)*y(0)^2*r(2)^2+(-16*a*b^2*c+16*b*c^2*d)*r(2)^4+(-8*a*b*c^3-64*b^4*d-32*b^3*d^2+72*b^2*d^3+8*b*c^4+24*b*d^4)*y(0)*r(2)^2+(4*a^3*c^3+24*a*b^4*c-4*a*c^5+24*b^5*d-36*b^4*c^2+36*b^4*d^2+28*b^3*c^2*d-24*b^3*d^3-24*b^2*c^4+16*b^2*c^2*d^2-32*b^2*d^4+24*b*c^4*d-32*b*c^2*d^3-4*b*d^5)*r(2)^2+(10*a^2*b*c^4+8*a*b^5*c-6*a*b*c^5+8*b^6*d-32*b^5*c^2-32*b^5*d^2+4*b^4*c^2*d+4*b^4*d^3-26*b^3*c^4+10*b^3*c^2*d^2+46*b^3*d^4+2*b^2*c^4*d+10*b^2*c^2*d^3+2*b^2*d^5-4*b*c^6+24*b*c^4*d^2-28*b*d^6)*y(0)+(a^5*c^3+a^5*c*d^2-a^4*c^4-a^4*c^2*d^2-5*a^3*b*c*d^3-a^3*c^5+a^3*c*d^4+4*a^2*b^5*d+10*a^2*b^3*c^2*d+10*a^2*b^3*d^3-10*a^2*b^2*c^4-19*a^2*b^2*c^2*d^2-14*a^2*b^2*d^4-3*a^2*b*c^4*d+10*a^2*b*c^2*d^3-a^2*c^6-2*a^2*c^4*d^2-a^2*c^2*d^4-8*a*b^6*c-8*a*b^5*c*d+7*a*b^4*c^3+7*a*b^4*c*d^2-22*a*b^3*c^3*d-27*a*b^3*c*d^3+19*a*b^2*c^5+23*a*b^2*c^3*d^2+10*a*b^2*c*d^4-8*a*b*c^5*d-5*a*b*c^3*d^3+9*a*b*c*d^5+2*a*c^7+2*a*c^5*d^2-4*b^7*d+24*b^6*c^2+16*b^6*d^2+6*b^5*c^2*d+6*b^5*d^3+17*b^4*c^4-6*b^4*c^2*d^2-28*b^4*d^4+9*b^3*c^4*d-b^3*c^2*d^3-17*b^3*d^5-2*b^2*c^6-13*b^2*c^4*d^2-4*b^2*c^2*d^4+13*b^2*d^6+4*b*c^6*d-12*b*c^4*d^3-2*b*c^2*d^5+14*b*d^7)  ,  0]
[(32*b^3*c-32*b*c*d^2)*y(0)^2*r(2)^2+(-16*b^3*c+16*b*c*d^2)*r(2)^4+(8*b^4*d-8*b^2*d^3)*x(0)*r(2)^2+(-24*b^4*c-64*b^3*c*d+16*b^2*c^3+40*b^2*c*d^2-16*b*c^3*d+48*b*c*d^3)*y(0)*r(2)^2+(16*b^5*c+8*b^4*c*d+16*b^3*c*d^2-8*b^2*c^3*d-16*b^2*c*d^3+8*b*c^3*d^2-24*b*c*d^4)*r(2)^2+(-4*b^6*d+4*b^5*d^2-2*b^4*d^3+2*b^2*d^5)*x(0)+(-4*a^2*b^4*c+4*a*b^4*c^2+2*a*b^2*c^4-10*b^4*c^3-8*b^4*c*d^2+8*b^3*c^3*d+6*b^3*c*d^3-8*b^2*c^5+2*b^2*c^3*d^2+8*b^2*c*d^4+6*b*c^5*d-6*b*c*d^5)*y(0)+(-2*a^3*b^4*d+2*a^3*b*c^2*d^2+2*a^3*b*d^4+2*a^2*b^5*c+6*a^2*b^4*c*d-a^2*b^2*c*d^3-a^2*b*c^5-2*a^2*b*c^3*d^2-a^2*b*c*d^4+2*a*b^6*d-2*a*b^5*c^2-2*a*b^5*d^2-4*a*b^4*c^2*d+2*a*b^4*d^3-a*b^3*c^4-2*a*b^3*c^2*d^2-3*a*b^3*d^4+3*a*b^2*c^2*d^3-a*b^2*d^5+a*b*c^6-2*a*b*c^4*d^2-a*b*c^2*d^4+2*a*b*d^6-2*b^7*c+6*b^6*c*d+2*b^5*c^3-4*b^5*c*d^2+5*b^4*c^3*d+6*b^4*c*d^3+3*b^3*c^5-6*b^3*c^3*d^2-5*b^3*c*d^4+2*b^2*c^5*d-b^2*c^3*d^3-3*b^2*c*d^5-2*b*c^5*d^2+2*b*c*d^6)  ,  0]

Module Groebner basis: 
[(a^4*b*c-a^4*c*d+a^3*b^2*d-a^3*b*c^2-a^3*b*d^2+a^3*c^2*d-a^2*b^3*c-a^2*b*c^3+2*a^2*b*c*d^2+a^2*c^3*d-a^2*c*d^3-a*b^4*d+a*b^3*c^2+a*b^3*d^2-2*a*b^2*c^2*d+a*b^2*d^3+a*b*c^4-a*b*d^4-a*c^4*d+a*c^2*d^3+b^4*c*d-b^3*c*d^2+b^2*c^3*d-b^2*c*d^3-b*c^3*d^2+b*c*d^4) , 0].

LPP Set of Module Groebner Basis under specialization:
[ 1 ]

Branch 3:
constraints: a^4*b*d-a^4*d^2-a^3*b^2*c+a^3*c*d^2-a^2*b^3*d+a^2*b^2*c^2+a^2*b^2*d^2-2*a^2*b*c^2*d+a^2*b*d^3+a^2*c^2*d^2-a^2*d^4+a*b^4*c+a*b^2*c^3-2*a*b^2*c*d^2-a*c^3*d^2+a*c*d^4-b^4*c^2+b^3*c^2*d-b^2*c^4+b^2*c^2*d^2+b*c^4*d-b*c^2*d^3=0,a^4*b*c-a^4*c*d+a^3*b^2*d-a^3*b*c^2-a^3*b*d^2+a^3*c^2*d-a^2*b^3*c-a^2*b*c^3+2*a^2*b*c*d^2+a^2*c^3*d-a^2*c*d^3-a*b^4*d+a*b^3*c^2+a*b^3*d^2-2*a*b^2*c^2*d+a*b^2*d^3+a*b*c^4-a*b*d^4-a*c^4*d+a*c^2*d^3+b^4*c*d-b^3*c*d^2+b^2*c^3*d-b^2*c*d^3-b*c^3*d^2+b*c*d^4=0,a^3*b^2*c^2+a^3*b^2*d^2-a^3*b*c^2*d-a^3*b*d^3-a^2*b^2*c^3-a^2*b^2*c*d^2+a^2*b*c^3*d+a^2*b*c*d^3-a*b^4*c^2-a*b^4*d^2+a*b^3*c^2*d+a*b^3*d^3-a*b^2*c^4+a*b^2*d^4+a*b*c^4*d-a*b*d^5+b^4*c^3+b^4*c*d^2-b^3*c^3*d-b^3*c*d^3+b^2*c^5-b^2*c*d^4-b*c^5*d+b*c*d^5=0,b-d!=0,b!=0,b+d!=0,c-d!=0,c+d!=0,c^2+d^2!=0,c!=0,-a-b+c+d!=0,-a+b+c-d!=0,
RGB from KSW:
[(2*a*d-2*b*c)*y(0)+(-a^2*c-2*a*b*d+a*c^2-a*d^2+b^2*c+2*b*c*d)  ,  0]
[(2*a^3*b*c-2*a^2*b*c^2-2*a*b*c^3-2*b^4*d+2*b^3*d^2+2*b^2*d^3+2*b*c^4-2*b*d^4)*y(0)+(-a^4*c^2-3*a^3*b*c*d+a^3*c^3+a^2*b^3*d-a^2*b^2*d^2+4*a^2*b*c^2*d+a^2*c^4-a^2*c^2*d^2-a*b^3*c*d+a*b^2*c^3+2*a*b^2*c*d^2+a*b*c^3*d-a*b*c*d^3-a*c^5+a*c^3*d^2+b^5*d-2*b^3*d^3-b^2*c^4-b^2*c^2*d^2-2*b*c^4*d+b*c^2*d^3+b*d^5)  ,  0]
[(2*a^2*b^2*c^2-2*a*b^2*c^3-2*b^4*d^2+2*b^3*d^3-2*b^2*c^4+2*b^2*d^4+2*b*c^4*d-2*b*d^5)*y(0)+(a^3*b^2*c*d-a^3*b*c^3-a^3*b*c*d^2+a^2*b^3*d^2-4*a^2*b^2*c^2*d-a^2*b^2*d^3+a^2*b*c^4+a^2*b*c^2*d^2+a*b^4*c*d-2*a*b^3*c*d^2+3*a*b^2*c^3*d+a*b^2*c*d^3+b^5*d^2-b^4*c^2*d+b^3*c^4+b^3*c^2*d^2-2*b^3*d^4-b*c^4*d^2+b*d^6)  ,  0]
[(2*a*b^3*c^3-2*b^4*d^3-2*b^3*c^4+2*b^3*d^4-2*b^2*c^4*d+2*b^2*d^5+2*b*c^4*d^2-2*b*d^6)*y(0)+(2*a^2*b^3*c^2*d+a^2*b^3*d^3-a^2*b^2*c^4-2*a^2*b^2*c^2*d^2-a^2*b^2*d^4+2*a*b^4*c*d^2-5*a*b^3*c^3*d-3*a*b^3*c*d^3+2*a*b^2*c^5+2*a*b^2*c^3*d^2-a*b*c^5*d+a*b*c*d^5+b^5*d^3-2*b^4*c^2*d^2+4*b^3*c^4*d+2*b^3*c^2*d^3-2*b^3*d^5-b^2*c^6+b^2*c^2*d^4+b*c^6*d-b*c^4*d^3-b*c^2*d^5+b*d^7)  ,  0]
[(2*b^4*c^4-2*b^4*d^4-2*b^3*c^4*d+2*b^3*d^5-2*b^2*c^4*d^2+2*b^2*d^6+2*b*c^4*d^3-2*b*d^7)*y(0)+(a^2*b^3*c^4+2*a^2*b^3*c^2*d^2+a^2*b^3*d^4-a^2*b^2*c^4*d-2*a^2*b^2*c^2*d^3-a^2*b^2*d^5+2*a*b^4*c^3*d+2*a*b^4*c*d^3-a*b^3*c^5-4*a*b^3*c^3*d^2-3*a*b^3*c*d^4+2*a*b^2*c^5*d+2*a*b^2*c^3*d^3-a*b*c^5*d^2+a*b*c*d^6-b^5*c^4+b^5*d^4-2*b^4*c^4*d-2*b^4*c^2*d^3+4*b^3*c^4*d^2+2*b^3*c^2*d^4-2*b^3*d^6-b^2*c^6*d+b^2*c^2*d^5+b*c^6*d^2-b*c^4*d^4-b*c^2*d^6+b*d^8)  ,  0]
[(2*c)*x(0)+(2*d)*y(0)+(-2*a*c-2*b*d-c^2-d^2)  ,  0]
[(2*a)*x(0)+(2*b)*y(0)+(-a^2-2*a*c-b^2-2*b*d)  ,  0]
[(a^2-2*a*c-b^2+2*b*d+c^2-d^2)*y+(-2*a^2*d+2*a*b*c+2*a*c*d-2*b*c^2)  ,  0]
[(a*b*d+a*c^2+b^2*c-3*b*c*d-c^3+c*d^2)*y+(-a^2*b*c+a^2*c*d-a*b^2*d-a*b*c^2-a*b*d^2-a*c^2*d+b^2*c*d+2*b*c^3+b*c*d^2)  ,  0]
[(a*b*c-a*c*d-b^2*d-b*c^2+2*b*d^2+c^2*d-d^3)*y+(a^2*b*d-a^2*d^2-a*b^2*c+a*c*d^2+b^2*c^2-b*c^2*d)  ,  0]
[(2*b^3*d+b^2*c^2-5*b^2*d^2-2*b*c^2*d+4*b*d^3+c^2*d^2-d^4)*y+(-a^3*b*c+a^3*c*d-2*a^2*b^2*d+3*a^2*b*d^2-a^2*d^3+a*b^3*c-a*b^2*c*d+a*b*c^3-a*b*c*d^2-a*c^3*d+a*c*d^3-b^3*c^2+3*b^2*c^2*d-2*b*c^2*d^2)  ,  0]
[(a*c^2*d+a*d^3-2*b^3*c+6*b^2*c*d-6*b*c*d^2-c^3*d+c*d^3)*y+(-a^3*b*d+a^3*d^2+2*a^2*b^2*c-3*a^2*b*c*d+a^2*c*d^2+a*b^3*d-a*b^2*d^2-2*a*b*d^3-2*a*c^2*d^2-b^3*c*d-2*b^2*c^3+b^2*c*d^2+4*b*c^3*d+2*b*c*d^3)  ,  0]
[(a*c^3+a*c*d^2+b^2*c^2+b^2*d^2-2*b*c^2*d-2*b*d^3-c^4+d^4)*y+(-a^2*b*c^2-a^2*b*d^2+a^2*c^2*d+a^2*d^3-a*b*c^3-a*b*c*d^2-a*c^3*d-a*c*d^3+2*b*c^4+2*b*c^2*d^2)  ,  0]
[(2*b^2*c^2*d+2*b^2*d^3+b*c^4-2*b*c^2*d^2-3*b*d^4-c^4*d+d^5)*y+(2*a^2*b*c^2-2*b^3*d^2-2*b*c^4+2*b*d^4)*y(0)+(a^3*b*c*d-a^3*c^3-a^3*c*d^2+a^2*b^2*d^2-4*a^2*b*c^2*d-2*a^2*b*d^3+a^2*c^2*d^2+a^2*d^4+a*b^3*c*d+a*c^5-a*c*d^4+b^4*d^2-b^3*c^2*d+b^3*d^3-b^2*c^2*d^2-b^2*d^4+3*b*c^4*d+2*b*c^2*d^3-b*d^5)  ,  0]
[(4*b^3*c^2+12*b^2*d^3+5*b*c^4-2*b*c^2*d^2-19*b*d^4-5*c^4*d-2*c^2*d^3+7*d^5)*y+(10*a^2*b*c^2-10*b^3*d^2-10*b*c^4+10*b*d^4)*y(0)+(7*a^3*b*c*d-5*a^3*c^3-7*a^3*c*d^2-4*a^2*b^2*c^2+5*a^2*b^2*d^2-16*a^2*b*c^2*d-12*a^2*b*d^3+5*a^2*c^2*d^2+7*a^2*d^4+3*a*b^3*c*d+2*a*b^2*c*d^2-2*a*b*c^3*d+2*a*b*c*d^3+5*a*c^5+2*a*c^3*d^2-7*a*c*d^4+5*b^4*d^2-3*b^3*c^2*d+5*b^3*d^3+4*b^2*c^4-7*b^2*c^2*d^2-5*b^2*d^4+11*b*c^4*d+10*b*c^2*d^3-5*b*d^5)  ,  0]
[(2*b^4*c+3*b^2*c^3-9*b^2*c*d^2-6*b*c^3*d+10*b*c*d^3+3*c^3*d^2-3*c*d^4)*y+(a^3*b^2*d-3*a^3*b*c^2-a^3*b*d^2+3*a^3*c^2*d-2*a^2*b^3*c-3*a^2*b^2*c*d+8*a^2*b*c*d^2-3*a^2*c*d^3-a*b^4*d+3*a*b^3*c^2+a*b^3*d^2-4*a*b^2*c^2*d+a*b^2*d^3+3*a*b*c^4-2*a*b*c^2*d^2-a*b*d^4-3*a*c^4*d+3*a*c^2*d^3+b^4*c*d-b^3*c^3-b^3*c*d^2+6*b^2*c^3*d-b^2*c*d^3-5*b*c^3*d^2+b*c*d^4)  ,  0]
[(b^2*c^4-b^2*d^4-2*b*c^4*d+2*b*d^5+c^4*d^2-d^6)*y+(-a^3*b*c^3-a^3*b*c*d^2+a^3*c^3*d+a^3*c*d^3+a^2*b*c^2*d^2+a^2*b*d^4-a^2*c^2*d^3-a^2*d^5+a*b^3*c^3+a*b^3*c*d^2-a*b^2*c^3*d-a*b^2*c*d^3+a*b*c^5-a*b*c*d^4-a*c^5*d+a*c*d^5-b^3*c^4-b^3*c^2*d^2+b^2*c^4*d+b^2*c^2*d^3)  ,  0]
[(b*c^6+b*c^4*d^2-b*c^2*d^4-b*d^6-c^6*d-c^4*d^3+c^2*d^5+d^7)*y+(2*a^2*b*c^4-2*b^3*c^4-2*b^3*c^2*d^2+2*b^3*d^4-2*b*c^6+2*b*c^4*d^2+2*b*c^2*d^4-2*b*d^6)*y(0)+(2*a^3*b*c^3*d+a^3*b*c*d^3-a^3*c^5-2*a^3*c^3*d^2-a^3*c*d^4-a^2*b^2*c^4-a^2*b^2*c^2*d^2-a^2*b^2*d^4-3*a^2*b*c^4*d-a^2*b*c^2*d^3+a^2*c^4*d^2+2*a^2*c^2*d^4+a^2*d^6-2*a*b^3*c^3*d-3*a*b^3*c*d^3+a*b^2*c^5+3*a*b^2*c^3*d^2+2*a*b^2*c*d^4-2*a*b*c^5*d+2*a*b*c*d^5+a*c^7+a*c^5*d^2-a*c^3*d^4-a*c*d^6+b^4*c^4+b^4*c^2*d^2-b^4*d^4+3*b^3*c^4*d+4*b^3*c^2*d^3-b^3*d^5-3*b^2*c^4*d^2-2*b^2*c^2*d^4+b^2*d^6+3*b*c^6*d-b*c^4*d^3-3*b*c^2*d^5+b*d^7)  ,  0]
[(b-d)*x+(-a+c)*y+(2*a*d-2*b*c)  ,  0]
[(a-c)*x+(-b+d)*y  ,  0]
[(4*a*d-4*b*c)*r(2)^2+(2*b^2*d-2*b*d^2)*x(0)+(-2*a^2*c+2*a*c^2-4*b^2*c+4*b*c*d)*y(0)+(-a^3*d+a^2*b*c+3*a^2*c*d-3*a*b^2*d-a*b*c^2+3*a*b*d^2-3*a*c^2*d-a*d^3+3*b^3*c-b^2*c*d+b*c^3-b*c*d^2)  ,  0]
[(4*a^2*b*c-4*b^3*c-4*b*c^3+4*b*c*d^2)*r(2)^2+(2*b^4*d-2*b^2*d^3)*x(0)+(-2*a^3*c^2+2*a^2*b^2*c+2*a*c^4+2*b^3*c*d-2*b^2*c^3-2*b*c*d^3)*y(0)+(-a^4*c*d+a^3*b^2*d-a^3*b*d^2+2*a^3*c^2*d-a^2*b^3*c-2*a^2*b^2*c*d-a^2*c*d^3-a*b^4*d-a*b^3*c^2+2*a*b^2*d^3-a*b*c^4-a*b*d^4-a*c^4*d+a*c^2*d^3+b^5*c-3*b^4*c*d+3*b^3*c^3-b^3*c*d^2+b^2*c^3*d+2*b^2*c*d^3+b*c^5+b*c*d^4)  ,  0]
[(4*a*b^2*c^2-4*b^3*c*d-4*b*c^3*d+4*b*c*d^3)*r(2)^2+(2*b^4*d^2-2*b^2*d^4)*x(0)+(-2*a^2*b*c^3+6*a*b^3*c^2+2*a*b*c^4+4*b^4*c*d-4*b^3*c^3-2*b^3*c*d^2-2*b^2*c^3*d-2*b^2*c*d^3)*y(0)+(-a^3*b*c^2*d+3*a^2*b^3*c*d-a^2*b^2*c^3-2*a^2*b^2*c*d^2+2*a^2*b*c^3*d-a^2*b*c*d^3-4*a*b^4*c^2-8*a*b^3*c^2*d-a*b^3*d^3+a*b^2*c^2*d^2+a*b^2*d^4-a*b*c^4*d+a*b*c^2*d^3-b^5*c*d+2*b^4*c^3-5*b^4*c*d^2+7*b^3*c^3*d+4*b^3*c*d^3+b^2*c^3*d^2+3*b^2*c*d^4+b*c^5*d-b*c*d^5)  ,  0]
[(4*b^3*c^3-4*b^3*c*d^2-4*b*c^3*d^2+4*b*c*d^4)*r(2)^2+(2*b^4*d^3-2*b^2*d^5)*x(0)+(-2*a*b^2*c^4+10*b^4*c^3+8*b^4*c*d^2-8*b^3*c^3*d-6*b^3*c*d^3+4*b^2*c^5-2*b^2*c^3*d^2-4*b^2*c*d^4-2*b*c^5*d+2*b*c*d^5)*y(0)+(2*a^2*b^3*c^3+2*a^2*b^3*c*d^2-2*a^2*b^2*c^3*d-a^2*b^2*c*d^3+a^2*b*c^5-a^2*b*c*d^4+2*a*b^4*c^2*d-a*b^3*c^4-4*a*b^3*c^2*d^2-a*b^3*d^4+4*a*b^2*c^4*d+a*b^2*c^2*d^3+a*b^2*d^5-a*b*c^6+a*b*c^2*d^4-6*b^5*c^3-4*b^5*c*d^2-3*b^4*c^3*d-4*b^4*c*d^3-3*b^3*c^5+8*b^3*c^3*d^2+7*b^3*c*d^4-2*b^2*c^5*d+b^2*c^3*d^3+3*b^2*c*d^5+2*b*c^5*d^2-2*b*c*d^6)  ,  0]
[(4*c^2+4*d^2)*y(0)^2+(-4*c^2)*r(2)^2+(-8*b*c^2-8*b*d^2-4*c^2*d-4*d^3)*y(0)+(4*b^2*c^2+4*b^2*d^2+4*b*c^2*d+4*b*d^3+c^4+2*c^2*d^2+d^4)  ,  0]
[(4*a*c+4*b*d)*y(0)^2+(-4*a*c)*r(2)^2+(-6*a*b*c-6*b^2*d-6*b*c^2-6*b*d^2)*y(0)+(a^3*c-4*a^2*c^2+3*a*b^2*c-2*a*b*c*d+4*a*c^3+2*b^3*d+3*b^2*c^2+5*b^2*d^2+6*b*c^2*d+2*b*d^3)  ,  0]
[(4*a^2+4*b^2)*y(0)^2+(-4*a^2)*r(2)^2+(-4*a^2*b-8*a*b*c-4*b^3-8*b^2*d)*y(0)+(a^4-4*a^3*c+2*a^2*b^2-4*a^2*b*d+4*a^2*c^2+4*a*b^2*c+8*a*b*c*d+b^4+4*b^3*d+4*b^2*d^2)  ,  0]
[(4*d)*x(0)*y(0)+(-4*c)*y(0)^2+(4*c)*r(2)^2+(-4*b*d-2*d^2)*x(0)+(4*b*c+2*c*d)*y(0)+(-2*a^2*c+2*a*c^2-2*b^2*c+2*b*c*d-c^3-c*d^2)  ,  0]
[(4*b)*x(0)*y(0)+(-4*a)*y(0)^2+(4*a)*r(2)^2+(-2*b^2-4*b*d)*x(0)+(2*a*b+4*b*c)*y(0)+(-a^3+4*a^2*c-a*b^2+6*a*b*d-4*a*c^2-2*b^2*c-4*b*c*d)  ,  0]
[x(0)^2+y(0)^2-r(2)^2+(-2*a*c-2*b*d)  ,  0]
[(2*a*c-2*b*d-2*c^2+2*d^2)*y*y(0)+(-2*a*c*d+2*b^2*d+b*c^2-b*d^2+c^2*d-d^3)*y+(-2*a^2*c^2-2*a*b*c*d+2*a*c^3+2*b*c^2*d)  ,  0]
[(2*b*c^2-2*b*d^2-2*c^2*d+2*d^3)*y*y(0)+(-b^2*c^2+3*b^2*d^2+b*c^2*d-3*b*d^3)*y+(a^2*b*c^2-a^2*b*d^2-a^2*c^2*d+a^2*d^3+2*a*b^2*c*d-a*b*c^3-a*b*c*d^2+a*c^3*d-a*c*d^3-2*b^2*c^2*d+2*b*c^2*d^2)  ,  0]
[(4*b^2*d-4*b*d^2)*y*y(0)+(b^2*c^2-7*b^2*d^2-3*b*c^2*d+9*b*d^3+2*c^2*d^2-2*d^4)*y+(-2*a*b^2*c-2*b^3*d+2*b*c^2*d+2*b*d^3)*y(0)+(-2*a^3*b*c+2*a^3*c*d-3*a^2*b^2*d+a^2*b*c^2+5*a^2*b*d^2-2*a^2*d^3+2*a*b^3*c+a*b*c^3-a*b*c*d^2-2*a*c^3*d+2*a*c*d^3+b^4*d-b^3*c^2+b^3*d^2+3*b^2*c^2*d-b^2*d^3-5*b*c^2*d^2-b*d^4)  ,  0]
[(4*b^2*c-4*b*c*d)*y*y(0)+(-2*b^3*c-2*b^2*c*d-b*c^3+5*b*c*d^2+c^3*d-c*d^3)*y+(-2*a^2*b*c-2*b^3*c+2*b*c^3+2*b*c*d^2)*y(0)+(a^3*c^2+a^2*b^2*c+3*a^2*b*c*d-a^2*c*d^2-a*b^2*c^2-a*c^4+a*c^2*d^2+b^4*c+b^3*c*d-b^2*c*d^2-3*b*c^3*d-b*c*d^3)  ,  0]
[(b-d)*y*x(0)+(a-c)*y*y(0)+(-a*b+c*d)*y+(-a^2*c-a*b*d+a*c^2+b*c*d)  ,  0]
[(b-d)*y^2+(-b^2+d^2)*y  ,  0]
[(a-c)*y^2+(-a*b-a*d+b*c+c*d)*y  ,  0]
[x^2-2*x*x(0)+y^2-2*y*y(0)+(2*a*c+2*b*d)  ,  0]
[(8*a*b^2*c-8*b^3*d-8*b*c^2*d+8*b*d^3)*y(0)*r(2)^2+(4*a*b^3*c+4*a*b*c^3+4*b^4*d-12*b^3*c^2+4*b^3*d^2-4*b^2*d^3-4*b*c^4+8*b*c^2*d^2-4*b*d^4)*r(2)^2+(-2*a^3*c^3+4*a*b^4*c-2*a*b^2*c^3+2*a*c^5+4*b^5*d-12*b^4*c^2-12*b^4*d^2+6*b^3*c^2*d+6*b^3*d^3-4*b^2*c^4+4*b^2*c^2*d^2+8*b^2*d^4+6*b*c^4*d-2*b*c^2*d^3-6*b*d^5)*y(0)+(-a^4*c^2*d-3*a^3*b*c^3-4*a^3*b*c*d^2+2*a^3*c^3*d+2*a^2*b^4*d+a^2*b^3*c^2+a^2*b^3*d^2-4*a^2*b^2*c^2*d-3*a^2*b^2*d^3+5*a^2*b*c^4+5*a^2*b*c^2*d^2-a^2*c^2*d^3-4*a*b^5*c-4*a*b^4*c*d-3*a*b^3*c^3-4*a*b^3*c*d^2+5*a*b^2*c^3*d+3*a*b^2*c*d^3-3*a*b*c^5-2*a*b*c^3*d^2-a*b*c*d^4-a*c^5*d+a*c^3*d^3-2*b^6*d+9*b^5*c^2+5*b^5*d^2+3*b^4*c^2*d+3*b^4*d^3+6*b^3*c^4-2*b^3*c^2*d^2-8*b^3*d^4-b^2*c^4*d-b^2*c^2*d^3-b^2*d^5+b*c^6-3*b*c^4*d^2+b*c^2*d^4+3*b*d^6)  ,  0]
[(4*b^3*c^2-4*b^3*d^2-4*b*c^2*d^2+4*b*d^4)*y(0)*r(2)^2+(6*b^4*c^2+2*b^4*d^2-10*b^3*c^2*d+2*b^3*d^3+4*b^2*c^4-2*b^2*c^2*d^2-2*b^2*d^4-4*b*c^4*d+6*b*c^2*d^3-2*b*d^5)*r(2)^2+(8*b^5*c^2+8*b^5*d^2-8*b^4*c^2*d-8*b^4*d^3+4*b^3*c^4-4*b^3*d^4-4*b^2*c^4*d+4*b^2*d^5)*y(0)+(-6*b^6*c^2-6*b^6*d^2+2*b^5*c^2*d+2*b^5*d^3-5*b^4*c^4+2*b^4*c^2*d^2+7*b^4*d^4+3*b^3*c^4*d+2*b^3*c^2*d^3-b^3*d^5-b^2*c^6+2*b^2*c^4*d^2+b^2*c^2*d^4-2*b^2*d^6+b*c^6*d-b*c^2*d^5)  ,  0]
[(2*a*c-2*b*d-2*c^2+2*d^2)*y*r(2)^2+(-2*a^2*c^2+2*a*b^2*c+2*a*c^3+2*b^3*d-4*b^2*c^2-2*b^2*d^2+2*b*c^2*d)*y(0)+(-a^3*c*d+a^2*b^2*d-a^2*b*d^2+3*a^2*c^2*d-2*a*b^3*c-3*a*b^2*c*d-a*b*c^3+a*b*c*d^2-2*a*c^3*d-b^4*d+3*b^3*c^2+2*b^2*c^2*d+b^2*d^3+b*c^4-b*c^2*d^2)  ,  0]
[(2*b*c^2-2*b*d^2-2*c^2*d+2*d^3)*y*r(2)^2+(2*a^2*b*c^2-2*a*b*c^3+4*b^3*c^2+2*b^3*d^2-4*b^2*c^2*d-2*b^2*d^3)*y(0)+(a^3*b*c*d-a^3*c^3-a^3*c*d^2+a^2*b^2*d^2-4*a^2*b*c^2*d-a^2*b*d^3+a^2*c^4+a^2*c^2*d^2+a*b^3*c*d-2*a*b^2*c*d^2+3*a*b*c^3*d+a*b*c*d^3-2*b^4*c^2-b^4*d^2-b^3*c^2*d+3*b^2*c^2*d^2+b^2*d^4)  ,  0]
[(4*b^2*d-4*b*d^2)*y*r(2)^2+(-4*a*b^2*c+4*b*c^2*d)*r(2)^2+(2*a^2*b*c^2-4*a*b^3*c-2*a*b*c^3-4*b^4*d+4*b^3*c^2+2*b^3*d^2+2*b^2*d^3)*y(0)+(a^3*b*c*d-2*a^2*b^3*d+a^2*b^2*c^2+2*a^2*b^2*d^2-3*a^2*b*c^2*d+4*a*b^4*c+5*a*b^3*c*d+a*b^2*c^3-a*b^2*c*d^2+a*b*c^3*d-a*b*c*d^3+2*b^5*d-3*b^4*c^2+2*b^4*d^2-4*b^3*c^2*d-3*b^3*d^3-b^2*c^4-b^2*d^4)  ,  0]
[(4*b^2*c-4*b*c*d)*y*r(2)^2+(-4*b^3*c+4*b*c*d^2)*r(2)^2+(2*b^4*d-2*b^2*d^3)*x(0)+(2*a^2*b^2*c-2*b^2*c^3)*y(0)+(a^3*b^2*d-a^3*b*c^2-a^3*b*d^2-a^2*b^3*c-2*a^2*b^2*c*d-a*b^4*d+2*a*b^2*d^3+a*b*c^4-a*b*d^4+b^5*c-2*b^4*c*d+2*b^3*c^3+b^2*c^3*d+b^2*c*d^3)  ,  0]
[(4*b-4*d)*y*y(0)^2+(-2*b+2*d)*y*r(2)^2+(-4*b^2+4*d^2)*y*y(0)+(2*b^3-2*b^2*d+2*b*d^2-2*d^3)*y+(-2*a*b*c-2*b^2*d+2*b*c^2+2*b*d^2)*y(0)+(a^2*b*d+a^2*c^2-a^2*d^2+2*a*b*c*d-a*c^3+a*c*d^2+b^3*d-3*b*c^2*d-b*d^3)  ,  0]
[(4*a-4*c)*y*y(0)^2+(-2*a+2*c)*y*r(2)^2+(-4*a*b+4*c*d)*y*y(0)+(2*a*b^2+2*a*c^2+2*b^2*c-4*b*c*d-2*c^3)*y+(-2*a^2*c+2*a*c^2-2*b^2*c+2*b*c*d)*y(0)+(a^3*d-5*a^2*b*c-a^2*c*d-5*a*b^2*d+2*a*b*c^2-4*a*b*d^2+b^3*c+5*b^2*c*d+3*b*c^3+3*b*c*d^2)  ,  0]
[(32*b^3*d-32*b*d^3)*y(0)^2*r(2)^2+(-16*a*b^2*c+16*b*c^2*d)*r(2)^4+(-8*a*b*c^3-64*b^4*d-32*b^3*d^2+72*b^2*d^3+8*b*c^4+24*b*d^4)*y(0)*r(2)^2+(4*a^3*c^3+24*a*b^4*c-4*a*c^5+24*b^5*d-36*b^4*c^2+36*b^4*d^2+28*b^3*c^2*d-24*b^3*d^3-24*b^2*c^4+16*b^2*c^2*d^2-32*b^2*d^4+24*b*c^4*d-32*b*c^2*d^3-4*b*d^5)*r(2)^2+(10*a^2*b*c^4+8*a*b^5*c-6*a*b*c^5+8*b^6*d-32*b^5*c^2-32*b^5*d^2+4*b^4*c^2*d+4*b^4*d^3-26*b^3*c^4+10*b^3*c^2*d^2+46*b^3*d^4+2*b^2*c^4*d+10*b^2*c^2*d^3+2*b^2*d^5-4*b*c^6+24*b*c^4*d^2-28*b*d^6)*y(0)+(a^5*c^3+a^5*c*d^2-a^4*c^4-a^4*c^2*d^2-5*a^3*b*c*d^3-a^3*c^5+a^3*c*d^4+4*a^2*b^5*d+10*a^2*b^3*c^2*d+10*a^2*b^3*d^3-10*a^2*b^2*c^4-19*a^2*b^2*c^2*d^2-14*a^2*b^2*d^4-3*a^2*b*c^4*d+10*a^2*b*c^2*d^3-a^2*c^6-2*a^2*c^4*d^2-a^2*c^2*d^4-8*a*b^6*c-8*a*b^5*c*d+7*a*b^4*c^3+7*a*b^4*c*d^2-22*a*b^3*c^3*d-27*a*b^3*c*d^3+19*a*b^2*c^5+23*a*b^2*c^3*d^2+10*a*b^2*c*d^4-8*a*b*c^5*d-5*a*b*c^3*d^3+9*a*b*c*d^5+2*a*c^7+2*a*c^5*d^2-4*b^7*d+24*b^6*c^2+16*b^6*d^2+6*b^5*c^2*d+6*b^5*d^3+17*b^4*c^4-6*b^4*c^2*d^2-28*b^4*d^4+9*b^3*c^4*d-b^3*c^2*d^3-17*b^3*d^5-2*b^2*c^6-13*b^2*c^4*d^2-4*b^2*c^2*d^4+13*b^2*d^6+4*b*c^6*d-12*b*c^4*d^3-2*b*c^2*d^5+14*b*d^7)  ,  0]
[(32*b^3*c-32*b*c*d^2)*y(0)^2*r(2)^2+(-16*b^3*c+16*b*c*d^2)*r(2)^4+(8*b^4*d-8*b^2*d^3)*x(0)*r(2)^2+(-24*b^4*c-64*b^3*c*d+16*b^2*c^3+40*b^2*c*d^2-16*b*c^3*d+48*b*c*d^3)*y(0)*r(2)^2+(16*b^5*c+8*b^4*c*d+16*b^3*c*d^2-8*b^2*c^3*d-16*b^2*c*d^3+8*b*c^3*d^2-24*b*c*d^4)*r(2)^2+(-4*b^6*d+4*b^5*d^2-2*b^4*d^3+2*b^2*d^5)*x(0)+(-4*a^2*b^4*c+4*a*b^4*c^2+2*a*b^2*c^4-10*b^4*c^3-8*b^4*c*d^2+8*b^3*c^3*d+6*b^3*c*d^3-8*b^2*c^5+2*b^2*c^3*d^2+8*b^2*c*d^4+6*b*c^5*d-6*b*c*d^5)*y(0)+(-2*a^3*b^4*d+2*a^3*b*c^2*d^2+2*a^3*b*d^4+2*a^2*b^5*c+6*a^2*b^4*c*d-a^2*b^2*c*d^3-a^2*b*c^5-2*a^2*b*c^3*d^2-a^2*b*c*d^4+2*a*b^6*d-2*a*b^5*c^2-2*a*b^5*d^2-4*a*b^4*c^2*d+2*a*b^4*d^3-a*b^3*c^4-2*a*b^3*c^2*d^2-3*a*b^3*d^4+3*a*b^2*c^2*d^3-a*b^2*d^5+a*b*c^6-2*a*b*c^4*d^2-a*b*c^2*d^4+2*a*b*d^6-2*b^7*c+6*b^6*c*d+2*b^5*c^3-4*b^5*c*d^2+5*b^4*c^3*d+6*b^4*c*d^3+3*b^3*c^5-6*b^3*c^3*d^2-5*b^3*c*d^4+2*b^2*c^5*d-b^2*c^3*d^3-3*b^2*c*d^5-2*b*c^5*d^2+2*b*c*d^6)  ,  0]

Module Groebner basis: 
[(2*b^4*c^4-2*b^4*d^4-2*b^3*c^4*d+2*b^3*d^5-2*b^2*c^4*d^2+2*b^2*d^6+2*b*c^4*d^3-2*b*d^7)*y(0)+(a^2*b^3*c^4+2*a^2*b^3*c^2*d^2+a^2*b^3*d^4-a^2*b^2*c^4*d-2*a^2*b^2*c^2*d^3-a^2*b^2*d^5+2*a*b^4*c^3*d+2*a*b^4*c*d^3-a*b^3*c^5-4*a*b^3*c^3*d^2-3*a*b^3*c*d^4+2*a*b^2*c^5*d+2*a*b^2*c^3*d^3-a*b*c^5*d^2+a*b*c*d^6-b^5*c^4+b^5*d^4-2*b^4*c^4*d-2*b^4*c^2*d^3+4*b^3*c^4*d^2+2*b^3*c^2*d^4-2*b^3*d^6-b^2*c^6*d+b^2*c^2*d^5+b*c^6*d^2-b*c^4*d^4-b*c^2*d^6+b*d^8), 0], 
[(2*c)*x(0)+(2*d)*y(0)+(-2*a*c-2*b*d-c^2-d^2), 0], 
[(a^2-2*a*c-b^2+2*b*d+c^2-d^2)*y+(-2*a^2*d+2*a*b*c+2*a*c*d-2*b*c^2), 0], 
[(b-d)*x+(-a+c)*y+(2*a*d-2*b*c), 0], 
[(4*b^3*c^3-4*b^3*c*d^2-4*b*c^3*d^2+4*b*c*d^4)*r(2)^2+(2*b^4*d^3-2*b^2*d^5)*x(0)+(-2*a*b^2*c^4+10*b^4*c^3+8*b^4*c*d^2-8*b^3*c^3*d-6*b^3*c*d^3+4*b^2*c^5-2*b^2*c^3*d^2-4*b^2*c*d^4-2*b*c^5*d+2*b*c*d^5)*y(0)+(2*a^2*b^3*c^3+2*a^2*b^3*c*d^2-2*a^2*b^2*c^3*d-a^2*b^2*c*d^3+a^2*b*c^5-a^2*b*c*d^4+2*a*b^4*c^2*d-a*b^3*c^4-4*a*b^3*c^2*d^2-a*b^3*d^4+4*a*b^2*c^4*d+a*b^2*c^2*d^3+a*b^2*d^5-a*b*c^6+a*b*c^2*d^4-6*b^5*c^3-4*b^5*c*d^2-3*b^4*c^3*d-4*b^4*c*d^3-3*b^3*c^5+8*b^3*c^3*d^2+7*b^3*c*d^4-2*b^2*c^5*d+b^2*c^3*d^3+3*b^2*c*d^5+2*b*c^5*d^2-2*b*c*d^6) , 0].

LPP Set of Module Groebner Basis under specialization:
[ y(0) ]
[ x(0) ]
[ y ]
[ x ]
[ r(2)^2 ]

Branch 4:
constraints: c=0,a^3*b*d-a^3*d^2-a*b^3*d+a*b^2*d^2+a*b*d^3-a*d^4=0,a^2*b^2*d^2-a^2*b*d^3-b^4*d^2+b^3*d^3+b^2*d^4-b*d^5!=0,
RGB from KSW:
[(a^2*b^2*d^2-a^2*b*d^3-b^4*d^2+b^3*d^3+b^2*d^4-b*d^5)  ,  (-2*a^3*b*d+2*a^3*d^2+2*a*b^3*d-2*a*b^2*d^2-2*a*b*d^3+2*a*d^4)*x(0)+(2*a^3*b*c-2*a^2*b*c^2-2*a*b^3*c-2*a*b*c^3+2*b^3*c^2+2*b*c^4)*y(0)+(-a^4*c^2+a^3*c^3-3*a^3*c*d^2+a^2*b^2*c^2+5*a^2*b*c^2*d+a^2*c^4-2*a^2*c^2*d^2-a*b^2*c^3+5*a*b^2*c*d^2+a*b*c^3*d+a*b*c*d^3-a*c^5+2*a*c^3*d^2-3*a*c*d^4-3*b^3*c^2*d-2*b^2*c^2*d^2-3*b*c^4*d+2*b*c^2*d^3)]
[(a^2*b^3*d-a^2*b*d^3-b^5*d+2*b^3*d^3-b*d^5)  ,  (-2*a^3*b*d+2*a^3*d^2+2*a*b^3*d-2*a*b^2*d^2-2*a*b*d^3+2*a*d^4+2*b^4*c-2*b^3*c*d-2*b^2*c*d^2+2*b*c*d^3)*x(0)+(4*a^3*b*c-4*a^2*b*c^2-2*a*b^3*c-4*a*b*c^3+2*b^3*c^2+4*b*c^4)*y(0)+(-2*a^4*c^2-3*a^3*b*c*d+2*a^3*c^3-3*a^3*c*d^2+a^2*b^2*c^2+9*a^2*b*c^2*d+2*a^2*c^4-3*a^2*c^2*d^2-2*a*b^4*c+a*b^3*c*d+9*a*b^2*c*d^2+2*a*b*c^3*d-2*a*b*c*d^3-2*a*c^5+3*a*c^3*d^2-3*a*c*d^4-b^4*c^2-2*b^3*c^2*d-b^2*c^4-2*b^2*c^2*d^2-5*b*c^4*d+2*b*c^2*d^3)]
[(2*d)*y(0)+(-2*b*d-d^2)  ,  (2*c)*x(0)+(-2*a*c-c^2)]
[(2*a)*x(0)+(2*b)*y(0)+(-a^2-b^2-2*b*d)  ,  (-2*a*c)]
[(2*b^4*d-2*b^2*d^3)*x(0)+(-a*b^3*d^2+a*b^2*d^3)  ,  (4*a^2*b*c-4*b^3*c-4*b*c^3+4*b*c*d^2)*r(2)^2+(-2*a^3*c^2+2*a^2*b^2*c+2*a*c^4+2*b^3*c*d-2*b^2*c^3-2*b*c*d^3)*y(0)+(-a^4*c*d+a^3*b^2*d-a^3*b*d^2+2*a^3*c^2*d-a^2*b^3*c-2*a^2*b^2*c*d-a^2*c*d^3-a*b^4*d-a*b^3*c^2+a*b^3*d^2+a*b^2*d^3-a*b*c^4-a*b*d^4-a*c^4*d+a*c^2*d^3+b^5*c-3*b^4*c*d+3*b^3*c^3-b^3*c*d^2+b^2*c^3*d+2*b^2*c*d^3+b*c^5+b*c*d^4)]
[(2*b^3*d^3-2*b*d^5)*x(0)+(-a*b^2*d^4+a*b*d^5)  ,  (-4*a^3*b*d+4*a^3*d^2+4*a*b^3*d+4*a*b^2*c^2-4*a*b^2*d^2-4*a*b*d^3+4*a*d^4-4*b^3*c*d+4*b^2*c^3-8*b*c^3*d+4*b*c*d^3)*r(2)^2+(4*a*b^3*c^2-2*a*b*c^4+4*b^4*c*d+2*b^3*c^3-8*b^2*c^3*d-6*b^2*c*d^3+2*b*c^5+2*b*c^3*d^2+2*b*c*d^4)*y(0)+(a^3*b*c^2*d+a^3*b*d^3-a^3*c^4-2*a^3*c^2*d^2-a^3*d^4+2*a^2*b^3*c*d-a^2*b^2*c^3-a^2*b^2*c*d^2-2*a^2*b*c^3*d-a^2*b*c*d^3+2*a^2*c^5+2*a^2*c^3*d^2-4*a*b^4*c^2-3*a*b^3*c^2*d-a*b^3*d^3-2*a*b^2*c^2*d^2+a*b^2*d^4+5*a*b*c^4*d+3*a*b*c^2*d^3+a*b*d^5-a*c^6-a*c^4*d^2-a*c^2*d^4-a*d^6-2*b^5*c*d-b^4*c^3-3*b^4*c*d^2+5*b^3*c^3*d+4*b^3*c*d^3-b^2*c^5+4*b^2*c^3*d^2+b^2*c*d^4-b*c^5*d-b*c^3*d^3)]
[(a^2-b^2+2*b*d-d^2)*y+(-2*a^2*d)  ,  (-2*a*c+c^2)*y+(2*a*b*c+2*a*c*d-2*b*c^2)]
[(b^2*d-2*b*d^2+d^3)*y+(-a^2*b*d+a^2*d^2)  ,  (-a*b*c+a*c*d+b*c^2-c^2*d)*y+(a*b^2*c-a*c*d^2-b^2*c^2+b*c^2*d)]
[(a*b*d)*y+(-a*b^2*d-a*b*d^2)  ,  (a*c^2+b^2*c-3*b*c*d-c^3+c*d^2)*y+(-a^2*b*c+a^2*c*d-a*b*c^2-a*c^2*d+b^2*c*d+2*b*c^3+b*c*d^2)]
[(b*d^3-d^4)*y+(a^2*b^2*d-a^2*d^3-b^4*d+b^2*d^3)  ,  (4*a*b*c-4*b*c^2)*y*y(0)+(3*a*c^3-a*c*d^2+4*b^2*c^2-7*b*c^2*d-3*c^4+4*c^2*d^2)*y+(2*b^3*c-2*b*c*d^2)*x(0)+(-2*a*b^2*c+2*b*c^2*d)*y(0)+(-6*a^2*b*c^2+3*a^2*c^2*d-2*a*b^3*c-6*a*b^2*c*d-3*a*c^3*d+a*c*d^3+5*b^2*c^2*d+6*b*c^4+2*b*c^2*d^2)]
[(a*d^3)*y+(-a*b*d^3-a*d^4)  ,  (a*c^2*d-2*b^3*c+6*b^2*c*d-6*b*c*d^2-c^3*d+c*d^3)*y+(-a^3*b*d+a^3*d^2+2*a^2*b^2*c-3*a^2*b*c*d+a^2*c*d^2+a*b^3*d-a*b^2*d^2-a*b*d^3-2*a*c^2*d^2+a*d^4-b^3*c*d-2*b^2*c^3+b^2*c*d^2+4*b*c^3*d+2*b*c*d^3)]
[(b-d)*x+(-a)*y+(2*a*d)  ,  (c)*y+(-2*b*c)]
[(a)*x+(-b+d)*y  ,  (-c)*x]
[(4*a*d)*r(2)^2+(2*b^2*d-2*b*d^2)*x(0)+(-a^3*d-3*a*b^2*d+3*a*b*d^2-a*d^3)  ,  (-4*b*c)*r(2)^2+(-2*a^2*c+2*a*c^2-4*b^2*c+4*b*c*d)*y(0)+(a^2*b*c+3*a^2*c*d-a*b*c^2-3*a*c^2*d+3*b^3*c-b^2*c*d+b*c^3-b*c*d^2)]
[(4*b^4*d-4*b^2*d^3)*r(2)^2+(-4*b^6*d+4*b^5*d^2+2*b^4*d^3-2*b^3*d^4)  ,  (-8*b^3*c+8*b*c*d^2)*x(0)*r(2)^2+(-8*a*b^2*c+8*b*c^2*d)*y(0)*r(2)^2+(4*a*b^3*c-4*a*b*c^3+16*b^3*c^2-8*b^2*c^2*d+4*b*c^4-12*b*c^2*d^2)*r(2)^2+(8*b^5*c-10*b^4*c*d+2*b^2*c*d^3)*x(0)+(4*a^3*b^2*c+2*a^3*c^3+2*a^2*b^2*c^2-4*a*b^4*c-12*a*b^2*c^3-2*a*c^5+12*b^4*c^2-14*b^3*c^2*d+6*b^2*c^4+4*b^2*c^2*d^2+2*b*c^2*d^3)*y(0)+(-a^4*c^2*d-a^3*b^2*c*d-2*a^3*b*c^3-3*a^3*b*c*d^2-3*a^2*b^3*c^2-2*a^2*b^2*c^2*d+2*a^2*b*c^4+4*a^2*b*c^2*d^2+2*a^2*c^4*d-a^2*c^2*d^3-4*a*b^5*c+13*a*b^4*c*d+9*a*b^3*c^3+2*a*b^3*c*d^2+8*a*b^2*c^3*d+a*b*c^5-3*a*b*c*d^4-a*c^5*d+a*c^3*d^3-13*b^5*c^2+7*b^4*c^2*d-7*b^3*c^4+b^3*c^2*d^2-3*b^2*c^4*d-4*b^2*c^2*d^3-b*c^6-2*b*c^4*d^2+b*c^2*d^4)]
[(4*b^3*d^3-4*b*d^5)*r(2)^2+(-4*b^5*d^3+4*b^4*d^4+2*b^3*d^5-2*b^2*d^6)  ,  (-8*a^3*b*d+8*a^3*d^2+8*a*b^3*d-8*a*b^2*d^2-8*a*b*d^3+8*a*d^4-8*b^3*c*d+8*b*c*d^3)*x(0)*r(2)^2+(-8*b^3*c^2-8*b^2*c^2*d+16*b*c^2*d^2)*y(0)*r(2)^2+(28*b^3*c^2*d-4*b^2*c^4-4*b^2*c^2*d^2+4*b*c^4*d-24*b*c^2*d^3)*r(2)^2+(2*b^5*c*d-2*b^4*c*d^2+2*b^2*c*d^4-2*b*c*d^5)*x(0)+(2*a^2*b^3*c^2+2*a^2*b*c^4-10*a*b^3*c^3-4*a*b*c^5-8*b^4*c^2*d-2*b^3*c^2*d^2+2*b^2*c^4*d+4*b^2*c^2*d^3+2*b*c^6+6*b*c^4*d^2+6*b*c^2*d^4)*y(0)+(a^3*b^3*c*d+3*a^3*b*c^3*d+2*a^3*b*c*d^3-a^3*c^5-4*a^3*c^3*d^2-3*a^3*c*d^4-a^2*b^4*c^2-7*a^2*b^3*c^2*d-a^2*b^2*c^4+a^2*b*c^4*d+5*a^2*b*c^2*d^3+2*a^2*c^6+2*a^2*c^4*d^2-a*b^5*c*d+3*a*b^4*c^3-5*a*b^4*c*d^2+16*a*b^3*c^3*d+5*a*b^3*c*d^3+a*b^2*c^3*d^2+3*a*b^2*c*d^4+3*a*b*c^5*d-2*a*b*c^3*d^3+a*b*c*d^5-a*c^7-a*c^5*d^2-3*a*c^3*d^4-3*a*c*d^6+b^6*c^2-3*b^5*c^2*d+4*b^4*c^4+19*b^4*c^2*d^2-10*b^3*c^4*d-6*b^3*c^2*d^3+2*b^2*c^6-3*b^2*c^4*d^2-13*b^2*c^2*d^4-5*b*c^6*d-3*b*c^4*d^3+2*b*c^2*d^5)]
[(4*a^2+4*b^2)*y(0)^2+(-4*a^2)*r(2)^2+(-4*a^2*b-4*b^3)*y(0)+(a^4+2*a^2*b^2-4*a^2*b*d+b^4-4*b^3*d)  ,  (8*b^2*c)*x(0)+(-8*a*b*c)*y(0)+(-4*a^3*c+4*a^2*c^2-4*a*b^2*c+8*a*b*c*d-4*b^2*c^2)]
[(4*b)*x(0)*y(0)+(-4*a)*y(0)^2+(4*a)*r(2)^2+(-2*b^2-4*b*d)*x(0)+(2*a*b)*y(0)+(-a^3-a*b^2+6*a*b*d)  ,  (4*b*c)*y(0)+(4*a^2*c-4*a*c^2-2*b^2*c-4*b*c*d)]
[x(0)^2+y(0)^2-r(2)^2+(-2*b*d)  ,  (-2*a*c)]
[(b-d)*y*x(0)+(a)*y*y(0)+(-a*b)*y+(-a*b*d)  ,  (-c)*y*y(0)+(c*d)*y+(-a^2*c+a*c^2+b*c*d)]
[(b-d)*y^2+(-b^2+d^2)*y  ,  0]
[(a)*y^2+(-a*b-a*d)*y  ,  (-c)*y^2+(b*c+c*d)*y]
[x^2-2*x*x(0)+y^2-2*y*y(0)+(2*b*d)  ,  (2*a*c)]
[(2*b*d-2*d^2)*y*r(2)^2+(-a^2*b^2*d+a^2*b*d^2-b^4*d+b^3*d^2)  ,  (-2*a*c+2*c^2)*y*r(2)^2+(2*b^3*c-2*b^2*c*d)*x(0)+(2*a^2*c^2-2*a*b^2*c-2*a*c^3+4*b^2*c^2-2*b*c^2*d)*y(0)+(a^3*c*d-3*a^2*c^2*d+5*a*b^2*c*d+a*b*c^3-a*b*c*d^2+2*a*c^3*d-4*b^3*c^2-b^2*c^2*d-b*c^4+b*c^2*d^2)]
[(4*b)*y*y(0)^2+(-2*b+2*d)*y*r(2)^2+(-4*b^2)*y*y(0)+(2*b^3-10*b*d^2+5*d^3)*y+(-5*a^2*b*d+5*a^2*d^2-b^3*d+b^2*d^2)  ,  (4*c)*y*x(0)*y(0)+(2*c*d)*y*x(0)+(-8*a*c+2*c^2)*y*y(0)+(-6*a*b*c+8*a*c*d+4*b*c^2-9*c^2*d)*y+(2*b^2*c-2*b*c*d)*x(0)+(-2*a*b*c+2*b*c^2)*y(0)+(5*a^2*c^2+4*a*b^2*c+8*a*b*c*d-5*a*c^3-5*a*c*d^2-7*b^2*c^2)]
[(4*a)*y*y(0)^2+(-2*a)*y*r(2)^2+(-4*a*b)*y*y(0)+(2*a*b^2)*y+(a^3*d-5*a*b^2*d-4*a*b*d^2)  ,  (-4*c)*y*y(0)^2+(2*c)*y*r(2)^2+(4*c*d)*y*y(0)+(2*a*c^2+2*b^2*c-4*b*c*d-2*c^3)*y+(-2*a^2*c+2*a*c^2-2*b^2*c+2*b*c*d)*y(0)+(-5*a^2*b*c-a^2*c*d+2*a*b*c^2+b^3*c+5*b^2*c*d+3*b*c^3+3*b*c*d^2)]

Module Groebner basis: 
[(a^2*b^2*d^2-a^2*b*d^3-b^4*d^2+b^3*d^3+b^2*d^4-b*d^5) , (-2*a^3*b*d+2*a^3*d^2+2*a*b^3*d-2*a*b^2*d^2-2*a*b*d^3+2*a*d^4)*x(0)+(2*a^3*b*c-2*a^2*b*c^2-2*a*b^3*c-2*a*b*c^3+2*b^3*c^2+2*b*c^4)*y(0)+(-a^4*c^2+a^3*c^3-3*a^3*c*d^2+a^2*b^2*c^2+5*a^2*b*c^2*d+a^2*c^4-2*a^2*c^2*d^2-a*b^2*c^3+5*a*b^2*c*d^2+a*b*c^3*d+a*b*c*d^3-a*c^5+2*a*c^3*d^2-3*a*c*d^4-3*b^3*c^2*d-2*b^2*c^2*d^2-3*b*c^4*d+2*b*c^2*d^3)].

LPP Set of Module Groebner Basis under specialization:
[ 1 ]

Branch 5:
constraints: c=0,a^3*b*d-a^3*d^2-a*b^3*d+a*b^2*d^2+a*b*d^3-a*d^4=0,a^2*b^2*d^2-a^2*b*d^3-b^4*d^2+b^3*d^3+b^2*d^4-b*d^5=0,a^2*b^3*d-a^2*b*d^3-b^5*d+2*b^3*d^3-b*d^5=0,d!=0,-b+d!=0,b+d!=0,b!=0,b-d!=0,
RGB from KSW:
[(2*d)*y(0)+(-2*b*d-d^2)  ,  (2*c)*x(0)+(-2*a*c-c^2)]
[(2*a)*x(0)+(2*b)*y(0)+(-a^2-b^2-2*b*d)  ,  (-2*a*c)]
[(2*b^4*d-2*b^2*d^3)*x(0)+(-a*b^3*d^2+a*b^2*d^3)  ,  (4*a^2*b*c-4*b^3*c-4*b*c^3+4*b*c*d^2)*r(2)^2+(-2*a^3*c^2+2*a^2*b^2*c+2*a*c^4+2*b^3*c*d-2*b^2*c^3-2*b*c*d^3)*y(0)+(-a^4*c*d+a^3*b^2*d-a^3*b*d^2+2*a^3*c^2*d-a^2*b^3*c-2*a^2*b^2*c*d-a^2*c*d^3-a*b^4*d-a*b^3*c^2+a*b^3*d^2+a*b^2*d^3-a*b*c^4-a*b*d^4-a*c^4*d+a*c^2*d^3+b^5*c-3*b^4*c*d+3*b^3*c^3-b^3*c*d^2+b^2*c^3*d+2*b^2*c*d^3+b*c^5+b*c*d^4)]
[(2*b^3*d^3-2*b*d^5)*x(0)+(-a*b^2*d^4+a*b*d^5)  ,  (4*a*b^2*c^2-4*b^3*c*d-4*b*c^3*d+4*b*c*d^3)*r(2)^2+(-2*a^2*b^2*d^2+2*a^2*b*d^3+2*b^4*d^2-2*b^3*d^3-2*b^2*d^4+2*b*d^5)*x(0)+(-2*a^2*b*c^3+6*a*b^3*c^2+2*a*b*c^4+2*b^4*c*d-4*b^3*c^3-2*b^2*c^3*d-2*b^2*c*d^3)*y(0)+(a^3*b^2*d^2-a^3*b*c^2*d-a^3*b*d^3+2*a^2*b^3*c*d-a^2*b^2*c^3+a^2*b^2*c*d^2+2*a^2*b*c^3*d-3*a^2*b*c*d^3-4*a*b^4*c^2-a*b^4*d^2-7*a*b^3*c^2*d+a*b^3*d^3+a*b^2*d^4-a*b*c^4*d+a*b*c^2*d^3-a*b*d^5+2*b^4*c^3-4*b^4*c*d^2+7*b^3*c^3*d+2*b^3*c*d^3+b^2*c^3*d^2+3*b^2*c*d^4+b*c^5*d-b*c*d^5)]
[(a^2-b^2+2*b*d-d^2)*y+(-2*a^2*d)  ,  (-2*a*c+c^2)*y+(2*a*b*c+2*a*c*d-2*b*c^2)]
[(b^2*d-2*b*d^2+d^3)*y+(-a^2*b*d+a^2*d^2)  ,  (-a*b*c+a*c*d+b*c^2-c^2*d)*y+(a*b^2*c-a*c*d^2-b^2*c^2+b*c^2*d)]
[(a*b*d)*y+(-a*b^2*d-a*b*d^2)  ,  (a*c^2+b^2*c-3*b*c*d-c^3+c*d^2)*y+(-a^2*b*c+a^2*c*d-a*b*c^2-a*c^2*d+b^2*c*d+2*b*c^3+b*c*d^2)]
[(b*d^3-d^4)*y+(a^2*b^2*d-a^2*d^3-b^4*d+b^2*d^3)  ,  (4*a*b*c-4*b*c^2)*y*y(0)+(3*a*c^3-a*c*d^2+4*b^2*c^2-7*b*c^2*d-3*c^4+4*c^2*d^2)*y+(2*b^3*c-2*b*c*d^2)*x(0)+(-2*a*b^2*c+2*b*c^2*d)*y(0)+(-6*a^2*b*c^2+3*a^2*c^2*d-2*a*b^3*c-6*a*b^2*c*d-3*a*c^3*d+a*c*d^3+5*b^2*c^2*d+6*b*c^4+2*b*c^2*d^2)]
[(a*d^3)*y+(-a*b*d^3-a*d^4)  ,  (a*c^2*d-2*b^3*c+6*b^2*c*d-6*b*c*d^2-c^3*d+c*d^3)*y+(-a^3*b*d+a^3*d^2+2*a^2*b^2*c-3*a^2*b*c*d+a^2*c*d^2+a*b^3*d-a*b^2*d^2-a*b*d^3-2*a*c^2*d^2+a*d^4-b^3*c*d-2*b^2*c^3+b^2*c*d^2+4*b*c^3*d+2*b*c*d^3)]
[(b-d)*x+(-a)*y+(2*a*d)  ,  (c)*y+(-2*b*c)]
[(a)*x+(-b+d)*y  ,  (-c)*x]
[(4*a*d)*r(2)^2+(2*b^2*d-2*b*d^2)*x(0)+(-a^3*d-3*a*b^2*d+3*a*b*d^2-a*d^3)  ,  (-4*b*c)*r(2)^2+(-2*a^2*c+2*a*c^2-4*b^2*c+4*b*c*d)*y(0)+(a^2*b*c+3*a^2*c*d-a*b*c^2-3*a*c^2*d+3*b^3*c-b^2*c*d+b*c^3-b*c*d^2)]
[(4*b^4*d-4*b^2*d^3)*r(2)^2+(-4*b^6*d+4*b^5*d^2+2*b^4*d^3-2*b^3*d^4)  ,  (-8*b^3*c+8*b*c*d^2)*x(0)*r(2)^2+(-8*a*b^2*c+8*b*c^2*d)*y(0)*r(2)^2+(4*a*b^3*c-4*a*b*c^3+16*b^3*c^2-8*b^2*c^2*d+4*b*c^4-12*b*c^2*d^2)*r(2)^2+(6*b^3*c*d^2-8*b^2*c*d^3+2*b*c*d^4)*x(0)+(2*a^3*c^3+4*a^2*b^3*d-12*a^2*b^2*d^2+8*a^2*b*d^3-8*a*b^4*c-2*a*b^2*c^3-2*a*c^5-4*b^5*d+24*b^4*c^2+12*b^4*d^2-22*b^3*c^2*d-4*b^3*d^3+8*b^2*c^4+4*b^2*c^2*d^2-12*b^2*d^4-6*b*c^4*d+2*b*c^2*d^3+8*b*d^5)*y(0)+(a^4*c^2*d-2*a^3*b^3*c+6*a^3*b^2*c*d+a^3*b*c^3-2*a^3*b*c*d^2-2*a^3*c^3*d-6*a^2*b^4*d+7*a^2*b^3*c^2+9*a^2*b^3*d^2-8*a^2*b^2*c^2*d+a^2*b^2*d^3-a^2*b*c^4+3*a^2*b*c^2*d^2-4*a^2*b*d^4+a^2*c^2*d^3+6*a*b^5*c+14*a*b^4*c*d-a*b^3*c^3-14*a*b^3*c*d^2+5*a*b^2*c^3*d+11*a*b^2*c*d^3+a*b*c^5-2*a*b*c^3*d^2-3*a*b*c*d^4+a*c^5*d-a*c^3*d^3+6*b^6*d-15*b^5*c^2-9*b^5*d^2-5*b^4*c^2*d-7*b^4*d^3-8*b^3*c^4+7*b^3*c^2*d^2+13*b^3*d^4-b^2*c^4*d+b^2*c^2*d^3+b^2*d^5-b*c^6+3*b*c^4*d^2-2*b*c^2*d^4-4*b*d^6)]
[(4*b^3*d^3-4*b*d^5)*r(2)^2+(-4*b^5*d^3+4*b^4*d^4+2*b^3*d^5-2*b^2*d^6)  ,  (-8*b^3*c*d+8*b*c*d^3)*x(0)*r(2)^2+(-8*b^3*c^2+8*b*c^2*d^2)*y(0)*r(2)^2+(-4*a^2*b^2*d^2+4*a^2*b*d^3+4*b^4*d^2+20*b^3*c^2*d-4*b^3*d^3-8*b^2*c^4-4*b^2*c^2*d^2-4*b^2*d^4+8*b*c^4*d-16*b*c^2*d^3+4*b*d^5)*r(2)^2+(4*b^3*c*d^3-4*b*c*d^5)*x(0)+(-8*a*b^3*c^3-8*b^4*c^2*d+4*b^3*c^4+8*b^2*c^4*d+8*b^2*c^2*d^3-4*b*c^4*d^2)*y(0)+(-a^2*b^4*c^2-a^2*b^4*d^2-7*a^2*b^3*c^2*d-3*a^2*b^3*d^3+3*a^2*b^2*c^4+7*a^2*b^2*c^2*d^2+4*a^2*b^2*d^4+a^2*b*c^4*d+a^2*b*c^2*d^3+4*a*b^4*c^3-4*a*b^4*c*d^2+16*a*b^3*c^3*d+4*a*b^3*c*d^3-4*a*b^2*c^5-4*a*b^2*c^3*d^2-4*a*b*c^3*d^3+b^6*c^2+b^6*d^2+3*b^5*c^2*d+3*b^5*d^3+2*b^4*c^4+13*b^4*c^2*d^2-5*b^4*d^4-14*b^3*c^4*d-15*b^3*c^2*d^3-3*b^3*d^5+3*b^2*c^6-2*b^2*c^4*d^2-7*b^2*c^2*d^4+4*b^2*d^6-3*b*c^6*d+2*b*c^4*d^3+5*b*c^2*d^5)]
[(4*a^2+4*b^2)*y(0)^2+(-4*a^2)*r(2)^2+(-4*a^2*b-4*b^3)*y(0)+(a^4+2*a^2*b^2-4*a^2*b*d+b^4-4*b^3*d)  ,  (8*b^2*c)*x(0)+(-8*a*b*c)*y(0)+(-4*a^3*c+4*a^2*c^2-4*a*b^2*c+8*a*b*c*d-4*b^2*c^2)]
[(4*b)*x(0)*y(0)+(-4*a)*y(0)^2+(4*a)*r(2)^2+(-2*b^2-4*b*d)*x(0)+(2*a*b)*y(0)+(-a^3-a*b^2+6*a*b*d)  ,  (4*b*c)*y(0)+(4*a^2*c-4*a*c^2-2*b^2*c-4*b*c*d)]
[x(0)^2+y(0)^2-r(2)^2+(-2*b*d)  ,  (-2*a*c)]
[(b-d)*y*x(0)+(a)*y*y(0)+(-a*b)*y+(-a*b*d)  ,  (-c)*y*y(0)+(c*d)*y+(-a^2*c+a*c^2+b*c*d)]
[(b-d)*y^2+(-b^2+d^2)*y  ,  0]
[(a)*y^2+(-a*b-a*d)*y  ,  (-c)*y^2+(b*c+c*d)*y]
[x^2-2*x*x(0)+y^2-2*y*y(0)+(2*b*d)  ,  (2*a*c)]
[(2*b*d-2*d^2)*y*r(2)^2+(-a^2*b^2*d+a^2*b*d^2-b^4*d+b^3*d^2)  ,  (-2*a*c+2*c^2)*y*r(2)^2+(2*b^3*c-2*b^2*c*d)*x(0)+(2*a^2*c^2-2*a*b^2*c-2*a*c^3+4*b^2*c^2-2*b*c^2*d)*y(0)+(a^3*c*d-3*a^2*c^2*d+5*a*b^2*c*d+a*b*c^3-a*b*c*d^2+2*a*c^3*d-4*b^3*c^2-b^2*c^2*d-b*c^4+b*c^2*d^2)]
[(4*b)*y*y(0)^2+(-2*b+2*d)*y*r(2)^2+(-4*b^2)*y*y(0)+(2*b^3-10*b*d^2+5*d^3)*y+(-5*a^2*b*d+5*a^2*d^2-b^3*d+b^2*d^2)  ,  (4*c)*y*x(0)*y(0)+(2*c*d)*y*x(0)+(-8*a*c+2*c^2)*y*y(0)+(-6*a*b*c+8*a*c*d+4*b*c^2-9*c^2*d)*y+(2*b^2*c-2*b*c*d)*x(0)+(-2*a*b*c+2*b*c^2)*y(0)+(5*a^2*c^2+4*a*b^2*c+8*a*b*c*d-5*a*c^3-5*a*c*d^2-7*b^2*c^2)]
[(4*a)*y*y(0)^2+(-2*a)*y*r(2)^2+(-4*a*b)*y*y(0)+(2*a*b^2)*y+(a^3*d-5*a*b^2*d-4*a*b*d^2)  ,  (-4*c)*y*y(0)^2+(2*c)*y*r(2)^2+(4*c*d)*y*y(0)+(2*a*c^2+2*b^2*c-4*b*c*d-2*c^3)*y+(-2*a^2*c+2*a*c^2-2*b^2*c+2*b*c*d)*y(0)+(-5*a^2*b*c-a^2*c*d+2*a*b*c^2+b^3*c+5*b^2*c*d+3*b*c^3+3*b*c*d^2)]

Module Groebner basis: 
[(2*d)*y(0)+(-2*b*d-d^2), (2*c)*x(0)+(-2*a*c-c^2)], 
[(2*b^4*d-2*b^2*d^3)*x(0)+(-a*b^3*d^2+a*b^2*d^3), (4*a^2*b*c-4*b^3*c-4*b*c^3+4*b*c*d^2)*r(2)^2+(-2*a^3*c^2+2*a^2*b^2*c+2*a*c^4+2*b^3*c*d-2*b^2*c^3-2*b*c*d^3)*y(0)+(-a^4*c*d+a^3*b^2*d-a^3*b*d^2+2*a^3*c^2*d-a^2*b^3*c-2*a^2*b^2*c*d-a^2*c*d^3-a*b^4*d-a*b^3*c^2+a*b^3*d^2+a*b^2*d^3-a*b*c^4-a*b*d^4-a*c^4*d+a*c^2*d^3+b^5*c-3*b^4*c*d+3*b^3*c^3-b^3*c*d^2+b^2*c^3*d+2*b^2*c*d^3+b*c^5+b*c*d^4)], 
[(b^2*d-2*b*d^2+d^3)*y+(-a^2*b*d+a^2*d^2), (-a*b*c+a*c*d+b*c^2-c^2*d)*y+(a*b^2*c-a*c*d^2-b^2*c^2+b*c^2*d)], 
[(b-d)*x+(-a)*y+(2*a*d), (c)*y+(-2*b*c)], 
[(4*b^4*d-4*b^2*d^3)*r(2)^2+(-4*b^6*d+4*b^5*d^2+2*b^4*d^3-2*b^3*d^4) , (-8*b^3*c+8*b*c*d^2)*x(0)*r(2)^2+(-8*a*b^2*c+8*b*c^2*d)*y(0)*r(2)^2+(4*a*b^3*c-4*a*b*c^3+16*b^3*c^2-8*b^2*c^2*d+4*b*c^4-12*b*c^2*d^2)*r(2)^2+(6*b^3*c*d^2-8*b^2*c*d^3+2*b*c*d^4)*x(0)+(2*a^3*c^3+4*a^2*b^3*d-12*a^2*b^2*d^2+8*a^2*b*d^3-8*a*b^4*c-2*a*b^2*c^3-2*a*c^5-4*b^5*d+24*b^4*c^2+12*b^4*d^2-22*b^3*c^2*d-4*b^3*d^3+8*b^2*c^4+4*b^2*c^2*d^2-12*b^2*d^4-6*b*c^4*d+2*b*c^2*d^3+8*b*d^5)*y(0)+(a^4*c^2*d-2*a^3*b^3*c+6*a^3*b^2*c*d+a^3*b*c^3-2*a^3*b*c*d^2-2*a^3*c^3*d-6*a^2*b^4*d+7*a^2*b^3*c^2+9*a^2*b^3*d^2-8*a^2*b^2*c^2*d+a^2*b^2*d^3-a^2*b*c^4+3*a^2*b*c^2*d^2-4*a^2*b*d^4+a^2*c^2*d^3+6*a*b^5*c+14*a*b^4*c*d-a*b^3*c^3-14*a*b^3*c*d^2+5*a*b^2*c^3*d+11*a*b^2*c*d^3+a*b*c^5-2*a*b*c^3*d^2-3*a*b*c*d^4+a*c^5*d-a*c^3*d^3+6*b^6*d-15*b^5*c^2-9*b^5*d^2-5*b^4*c^2*d-7*b^4*d^3-8*b^3*c^4+7*b^3*c^2*d^2+13*b^3*d^4-b^2*c^4*d+b^2*c^2*d^3+b^2*d^5-b*c^6+3*b*c^4*d^2-2*b*c^2*d^4-4*b*d^6)].

LPP Set of Module Groebner Basis under specialization:
[ y(0) ]
[ x(0) ]
[ y ]
[ x ]
[ r(2)^2 ]

Branch 6:
constraints: c=0,b-d=0,d!=0,a!=0,
RGB from KSW:
[(2*d)*y(0)+(-3*d^2)  ,  (2*c)*x(0)+(-2*a*c-2*b*d-c^2+2*d^2)]
[(2*a)*x(0)+(-a^2)  ,  (-2*c)*x(0)+(2*b-2*d)*y(0)+(-b^2+c^2+d^2)]
[(a)*y+(-2*a*d)  ,  (-b+d)*x+(-c)*y+(2*b*c)]
[(a)*x  ,  (-c)*x+(-b+d)*y]
[(4*a*d)*r(2)^2+(-a^3*d-a*d^3)  ,  (-4*b*c)*r(2)^2+(2*b^2*d-2*b*d^2)*x(0)+(-2*a^2*c+2*a*c^2-4*b^2*c+4*b*c*d)*y(0)+(a^2*b*c+3*a^2*c*d-3*a*b^2*d-a*b*c^2+3*a*b*d^2-3*a*c^2*d+3*b^3*c-b^2*c*d+b*c^3-b*c*d^2)]
[(4*a)*y(0)^2+(-4*a)*r(2)^2+(a^3-8*a*d^2)  ,  (-4*b+4*d)*x(0)*y(0)+(-4*c)*y(0)^2+(4*c)*r(2)^2+(2*b^2-2*d^2)*x(0)+(-2*a*b+2*a*d-2*b*c+2*c*d)*y(0)+(-7*a^2*c+a*b^2-8*a*b*d+7*a*c^2+7*a*d^2+b^2*c+8*b*c*d-c^3-c*d^2)]
[x(0)^2+y(0)^2-r(2)^2+(-2*d^2)  ,  (-2*a*c-2*b*d+2*d^2)]
[x^2-2*x*x(0)+y^2-2*y*y(0)+(2*d^2)  ,  (2*a*c+2*b*d-2*d^2)]

Module Groebner basis: 
[(2*d)*y(0)+(-3*d^2), (2*c)*x(0)+(-2*a*c-2*b*d-c^2+2*d^2)], 
[(2*a)*x(0)+(-a^2), (-2*c)*x(0)+(2*b-2*d)*y(0)+(-b^2+c^2+d^2)], 
[(a)*y+(-2*a*d), (-b+d)*x+(-c)*y+(2*b*c)], 
[(a)*x, (-c)*x+(-b+d)*y], 
[(4*a*d)*r(2)^2+(-a^3*d-a*d^3) , (-4*b*c)*r(2)^2+(2*b^2*d-2*b*d^2)*x(0)+(-2*a^2*c+2*a*c^2-4*b^2*c+4*b*c*d)*y(0)+(a^2*b*c+3*a^2*c*d-3*a*b^2*d-a*b*c^2+3*a*b*d^2-3*a*c^2*d+3*b^3*c-b^2*c*d+b*c^3-b*c*d^2)].

LPP Set of Module Groebner Basis under specialization:
[ y(0) ]
[ x(0) ]
[ y ]
[ x ]
[ r(2)^2 ]

Branch 7:
constraints: c=0,b-d=0,a=0,d!=0,
RGB from KSW:
[(2*d)*y(0)+(-3*d^2)  ,  (2*c)*x(0)+(-2*a*c-2*b*d-c^2+2*d^2)]
[x(0)^2+y(0)^2-r(2)^2+(-2*d^2)  ,  (-2*a*c-2*b*d+2*d^2)]
[x^2-2*x*x(0)+y^2-2*y*y(0)+(2*d^2)  ,  (2*a*c+2*b*d-2*d^2)]

Module Groebner basis: 
[(2*d)*y(0)+(-3*d^2), (2*c)*x(0)+(-2*a*c-2*b*d-c^2+2*d^2)], 
[x(0)^2+y(0)^2-r(2)^2+(-2*d^2), (-2*a*c-2*b*d+2*d^2)], 
[x^2-2*x*x(0)+y^2-2*y*y(0)+(2*d^2) , (2*a*c+2*b*d-2*d^2)].

LPP Set of Module Groebner Basis under specialization:
[ y(0) ]
[ x(0)^2 ]
[ x^2 ]

Branch 8:
constraints: d=0,c=0,b=0,a=0,
RGB from KSW:
[x(0)^2+y(0)^2-r(2)^2  ,  (-2*a*c-2*b*d)]
[x^2-2*x*x(0)+y^2-2*y*y(0)  ,  (2*a*c+2*b*d)]

Module Groebner basis: 
[x(0)^2+y(0)^2-r(2)^2, (-2*a*c-2*b*d)], 
[x^2-2*x*x(0)+y^2-2*y*y(0) , (2*a*c+2*b*d)].

LPP Set of Module Groebner Basis under specialization:
[ x(0)^2 ]
[ x^2 ]

Branch 9:
constraints: d=0,c=0,b=0,a!=0,a!=0,
RGB from KSW:
[(2*a)*x(0)+(-a^2)  ,  (2*b)*y(0)+(-2*a*c-b^2-2*b*d)]
[(a)*y  ,  (-b+d)*x+(-c)*y+(-2*a*d+2*b*c)]
[(a)*x  ,  (-c)*x+(-b+d)*y]
[(4*a)*y(0)^2+(-4*a)*r(2)^2+(a^3)  ,  (-4*b)*x(0)*y(0)+(2*b^2+4*b*d)*x(0)+(-2*a*b-4*b*c)*y(0)+(-4*a^2*c+a*b^2-6*a*b*d+4*a*c^2+2*b^2*c+4*b*c*d)]
[x(0)^2+y(0)^2-r(2)^2  ,  (-2*a*c-2*b*d)]
[x^2-2*x*x(0)+y^2-2*y*y(0)  ,  (2*a*c+2*b*d)]

Module Groebner basis: 
[(2*a)*x(0)+(-a^2), (2*b)*y(0)+(-2*a*c-b^2-2*b*d)], 
[(a)*y, (-b+d)*x+(-c)*y+(-2*a*d+2*b*c)], 
[(a)*x, (-c)*x+(-b+d)*y], 
[(4*a)*y(0)^2+(-4*a)*r(2)^2+(a^3) , (-4*b)*x(0)*y(0)+(2*b^2+4*b*d)*x(0)+(-2*a*b-4*b*c)*y(0)+(-4*a^2*c+a*b^2-6*a*b*d+4*a*c^2+2*b^2*c+4*b*c*d)].

LPP Set of Module Groebner Basis under specialization:
[ x(0) ]
[ y ]
[ x ]
[ y(0)^2 ]

Branch 10:
constraints: d=0,c=0,b!=0,a!=0,a-b!=0,a+b!=0,b!=0,a^2+b^2!=0,
RGB from KSW:
[(2*a)*x(0)+(2*b)*y(0)+(-a^2-b^2)  ,  (-2*a*c-2*b*d)]
[(a^2-b^2)*y  ,  (-2*a*c+2*b*d+c^2-d^2)*y+(-2*a^2*d+2*a*b*c+2*a*c*d-2*b*c^2)]
[(b)*x+(-a)*y  ,  (-d)*x+(c)*y+(2*a*d-2*b*c)]
[(a)*x+(-b)*y  ,  (-c)*x+(d)*y]
[(4*a^2+4*b^2)*y(0)^2+(-4*a^2)*r(2)^2+(-4*a^2*b-4*b^3)*y(0)+(a^4+2*a^2*b^2+b^4)  ,  (-8*a*b*c-8*b^2*d)*y(0)+(-4*a^3*c-4*a^2*b*d+4*a^2*c^2+4*a*b^2*c+8*a*b*c*d+4*b^3*d+4*b^2*d^2)]
[(4*b)*x(0)*y(0)+(-4*a)*y(0)^2+(4*a)*r(2)^2+(-2*b^2)*x(0)+(2*a*b)*y(0)+(-a^3-a*b^2)  ,  (-4*b*d)*x(0)+(4*b*c)*y(0)+(4*a^2*c+6*a*b*d-4*a*c^2-2*b^2*c-4*b*c*d)]
[x(0)^2+y(0)^2-r(2)^2  ,  (-2*a*c-2*b*d)]
[(b)*y*x(0)+(a)*y*y(0)+(-a*b)*y  ,  (-d)*y*x(0)+(-c)*y*y(0)+(c*d)*y+(-a^2*c-a*b*d+a*c^2+b*c*d)]
[(b)*y^2+(-b^2)*y  ,  (-d)*y^2+(d^2)*y]
[(a)*y^2+(-a*b)*y  ,  (-c)*y^2+(-a*d+b*c+c*d)*y]
[x^2-2*x*x(0)+y^2-2*y*y(0)  ,  (2*a*c+2*b*d)]
[(4*b)*y*y(0)^2+(-2*b)*y*r(2)^2+(-4*b^2)*y*y(0)+(2*b^3)*y  ,  (-4*d)*y*y(0)^2+(2*d)*y*r(2)^2+(4*d^2)*y*y(0)+(-2*b^2*d+2*b*d^2-2*d^3)*y+(-2*a*b*c-2*b^2*d+2*b*c^2+2*b*d^2)*y(0)+(a^2*b*d+a^2*c^2-a^2*d^2+2*a*b*c*d-a*c^3+a*c*d^2+b^3*d-3*b*c^2*d-b*d^3)]
[(4*a)*y*y(0)^2+(-2*a)*y*r(2)^2+(-4*a*b)*y*y(0)+(2*a*b^2)*y  ,  (-4*c)*y*y(0)^2+(2*c)*y*r(2)^2+(4*c*d)*y*y(0)+(2*a*c^2+2*b^2*c-4*b*c*d-2*c^3)*y+(-2*a^2*c+2*a*c^2-2*b^2*c+2*b*c*d)*y(0)+(a^3*d-5*a^2*b*c-a^2*c*d-5*a*b^2*d+2*a*b*c^2-4*a*b*d^2+b^3*c+5*b^2*c*d+3*b*c^3+3*b*c*d^2)]

Module Groebner basis: 
[(2*a)*x(0)+(2*b)*y(0)+(-a^2-b^2), (-2*a*c-2*b*d)], 
[(a^2-b^2)*y, (-2*a*c+2*b*d+c^2-d^2)*y+(-2*a^2*d+2*a*b*c+2*a*c*d-2*b*c^2)], 
[(b)*x+(-a)*y, (-d)*x+(c)*y+(2*a*d-2*b*c)], 
[(4*a^2+4*b^2)*y(0)^2+(-4*a^2)*r(2)^2+(-4*a^2*b-4*b^3)*y(0)+(a^4+2*a^2*b^2+b^4) , (-8*a*b*c-8*b^2*d)*y(0)+(-4*a^3*c-4*a^2*b*d+4*a^2*c^2+4*a*b^2*c+8*a*b*c*d+4*b^3*d+4*b^2*d^2)].

LPP Set of Module Groebner Basis under specialization:
[ x(0) ]
[ y ]
[ x ]
[ y(0)^2 ]

Branch 11:
constraints: d=0,c=0,a^2+b^2=0,b!=0,b!=0,
RGB from KSW:
[(2*a)*x(0)+(2*b)*y(0)  ,  (-a^2-2*a*c-b^2-2*b*d)]
[(2*b^2)*x(0)+(-2*a*b)*y(0)  ,  (-2*a^2-2*b^2)*x(0)+(a^3+2*a^2*c+a*b^2+2*a*b*d)]
[(2*b^2)*y  ,  (-a^2+2*a*c-b^2-2*b*d-c^2+d^2)*y+(2*a^2*d-2*a*b*c-2*a*c*d+2*b*c^2)]
[(2*a*b)*y  ,  (-a^2-b^2+c^2+d^2)*x+(-2*c*d)*y+(-2*a*b*d-2*a*d^2+2*b^2*c+2*b*c*d)]
[(b)*x+(-a)*y  ,  (-d)*x+(c)*y+(2*a*d-2*b*c)]
[(a)*x+(-b)*y  ,  (-c)*x+(d)*y]
[(4*b^2)*r(2)^2  ,  (4*a^2+4*b^2)*y(0)^2+(-4*a^2-4*b^2)*r(2)^2+(-4*a^2*b-8*a*b*c-4*b^3-8*b^2*d)*y(0)+(a^4-4*a^3*c+2*a^2*b^2-4*a^2*b*d+4*a^2*c^2+4*a*b^2*c+8*a*b*c*d+b^4+4*b^3*d+4*b^2*d^2)]
[(2*a*b)*r(2)^2  ,  (2*a^2+2*b^2)*x(0)*y(0)+(-a^2*b-b^3-2*b^2*d)*x(0)+(-a^3-2*a^2*c-a*b^2)*y(0)+(2*a^2*b*c+2*a*b^2*d-a*b*c^2-a*b*d^2)]
[(2*b)*x(0)*y(0)+(-2*a)*y(0)^2+(2*a)*r(2)^2  ,  (-a^2-b^2-2*b*d)*x(0)+(2*b*c)*y(0)+(3*a^2*c+4*a*b*d-2*a*c^2-b^2*c-2*b*c*d)]
[x(0)^2+y(0)^2-r(2)^2  ,  (-2*a*c-2*b*d)]
[(2*b)*y*x(0)+(2*a)*y*y(0)  ,  (-2*d)*y*x(0)+(-2*c)*y*y(0)+(-a^2-b^2+c^2+d^2)*x+(-2*a^2*c-4*a*b*d+2*a*c^2-2*a*d^2+2*b^2*c+4*b*c*d)]
[(2*b)*y^2  ,  (-2*d)*y^2+(-a^2+2*a*c-b^2-2*b*d-c^2+3*d^2)*y+(2*a^2*d-2*a*b*c-2*a*c*d+2*b*c^2)]
[(2*a)*y^2  ,  (-2*c)*y^2+(-a^2-b^2+c^2+d^2)*x+(-2*a*d+2*b*c)*y+(-2*a*b*d-2*a*d^2+2*b^2*c+2*b*c*d)]
[x^2-2*x*x(0)+y^2-2*y*y(0)  ,  (2*a*c+2*b*d)]
[(4*b)*y*y(0)^2+(-2*b)*y*r(2)^2  ,  (-4*d)*y*y(0)^2+(2*d)*y*r(2)^2+(-2*a^2-2*b^2+2*c^2+2*d^2)*y*y(0)+(a^2*b+2*a*c*d+b^3-6*b^2*d-3*b*c^2+7*b*d^2-2*d^3)*y+(-2*a*b*c-2*b^2*d+2*b*c^2+2*b*d^2)*y(0)+(2*a^3*c+5*a^2*b*d+a^2*c^2-a^2*d^2-2*a*b^2*c-3*a*c^3+a*c*d^2+b^3*d+2*b^2*c^2-5*b*c^2*d-b*d^3)]
[(4*a)*y*y(0)^2+(-2*a)*y*r(2)^2  ,  (-4*c)*y*y(0)^2+(2*c)*y*r(2)^2+(2*a^2+2*b^2-2*d^2)*y*x(0)+(2*c*d)*y*y(0)+(-a^3-a*b^2+a*c^2+a*d^2+2*b^2*c-8*b*c*d-3*c^3+3*c*d^2)*y+(-2*a^2*c+2*a*c^2-2*b^2*c+2*b*c*d)*y(0)+(a^3*d-9*a^2*b*c-3*a^2*c*d-9*a*b^2*d+4*a*b*c^2-8*a*b*d^2+2*a*c^2*d+b^3*c+9*b^2*c*d+5*b*c^3+7*b*c*d^2)]

Module Groebner basis: 
[(2*b^2)*x(0)+(-2*a*b)*y(0), (-2*a^2-2*b^2)*x(0)+(a^3+2*a^2*c+a*b^2+2*a*b*d)], 
[(2*b^2)*y, (-a^2+2*a*c-b^2-2*b*d-c^2+d^2)*y+(2*a^2*d-2*a*b*c-2*a*c*d+2*b*c^2)], 
[(b)*x+(-a)*y, (-d)*x+(c)*y+(2*a*d-2*b*c)], 
[(4*b^2)*r(2)^2 , (4*a^2+4*b^2)*y(0)^2+(-4*a^2-4*b^2)*r(2)^2+(-4*a^2*b-8*a*b*c-4*b^3-8*b^2*d)*y(0)+(a^4-4*a^3*c+2*a^2*b^2-4*a^2*b*d+4*a^2*c^2+4*a*b^2*c+8*a*b*c*d+b^4+4*b^3*d+4*b^2*d^2)].

LPP Set of Module Groebner Basis under specialization:
[ x(0) ]
[ y ]
[ x ]
[ r(2)^2 ]

Branch 12:
constraints: d=0,c=0,a=0,b!=0,b^2!=0,b!=0,
RGB from KSW:
[(2*b)*y(0)+(-b^2)  ,  (2*a)*x(0)+(-a^2-2*a*c-2*b*d)]
[(b)*y  ,  (-a+c)*x+(-d)*y]
[(b)*x  ,  (-d)*x+(-a+c)*y+(2*a*d-2*b*c)]
[x(0)^2+y(0)^2-r(2)^2  ,  (-2*a*c-2*b*d)]
[x^2-2*x*x(0)+y^2-2*y*y(0)  ,  (2*a*c+2*b*d)]

Module Groebner basis: 
[(2*b)*y(0)+(-b^2), (2*a)*x(0)+(-a^2-2*a*c-2*b*d)], 
[(b)*y, (-a+c)*x+(-d)*y], 
[(b)*x, (-d)*x+(-a+c)*y+(2*a*d-2*b*c)], 
[x(0)^2+y(0)^2-r(2)^2 , (-2*a*c-2*b*d)].

LPP Set of Module Groebner Basis under specialization:
[ y(0) ]
[ y ]
[ x ]
[ x(0)^2 ]

Branch 13:
constraints: d=0,c=0,a+b=0,b!=0,2*b^2!=0,-b!=0,b!=0,
RGB from KSW:
[(2*b)*x(0)+(-2*b)*y(0)+(2*b^2)  ,  (-2*a-2*b)*x(0)+(a^2+2*a*c-b^2+2*b*d)]
[(b)*x+(b)*y  ,  (-d)*x+(-a-b+c)*y+(2*a*d-2*b*c)]
[(8*b)*y(0)^2+(-4*b)*r(2)^2+(-8*b^2)*y(0)+(4*b^3)  ,  (4*a+4*b)*x(0)*y(0)+(-4*a-4*b)*y(0)^2+(4*a+4*b)*r(2)^2+(-2*a*b-2*b^2-4*b*d)*x(0)+(-2*a^2+2*a*b-4*a*c+4*b^2+4*b*c-4*b*d)*y(0)+(-a^3+a^2*b+4*a^2*c-a*b^2+2*a*b*c+6*a*b*d-4*a*c^2-3*b^3-2*b^2*c+2*b^2*d-4*b*c*d)]
[x(0)^2+y(0)^2-r(2)^2  ,  (-2*a*c-2*b*d)]
[(b)*y^2+(-b^2)*y  ,  (-d)*y^2+(d^2)*y]
[x^2-2*x*x(0)+y^2-2*y*y(0)  ,  (2*a*c+2*b*d)]

Module Groebner basis: 
[(2*b)*x(0)+(-2*b)*y(0)+(2*b^2), (-2*a-2*b)*x(0)+(a^2+2*a*c-b^2+2*b*d)], 
[(b)*x+(b)*y, (-d)*x+(-a-b+c)*y+(2*a*d-2*b*c)], 
[(8*b)*y(0)^2+(-4*b)*r(2)^2+(-8*b^2)*y(0)+(4*b^3), (4*a+4*b)*x(0)*y(0)+(-4*a-4*b)*y(0)^2+(4*a+4*b)*r(2)^2+(-2*a*b-2*b^2-4*b*d)*x(0)+(-2*a^2+2*a*b-4*a*c+4*b^2+4*b*c-4*b*d)*y(0)+(-a^3+a^2*b+4*a^2*c-a*b^2+2*a*b*c+6*a*b*d-4*a*c^2-3*b^3-2*b^2*c+2*b^2*d-4*b*c*d)], 
[(b)*y^2+(-b^2)*y , (-d)*y^2+(d^2)*y].

LPP Set of Module Groebner Basis under specialization:
[ x(0) ]
[ x ]
[ y(0)^2 ]
[ y^2 ]

Branch 14:
constraints: d=0,c=0,a-b=0,b!=0,2*b^2!=0,2*b!=0,b!=0,
RGB from KSW:
[(2*b)*x(0)+(2*b)*y(0)+(-2*b^2)  ,  (2*a-2*b)*x(0)+(-a^2-2*a*c+b^2-2*b*d)]
[(b)*x+(-b)*y  ,  (-d)*x+(-a+b+c)*y+(2*a*d-2*b*c)]
[(8*b)*y(0)^2+(-4*b)*r(2)^2+(-8*b^2)*y(0)+(4*b^3)  ,  (4*a-4*b)*x(0)*y(0)+(4*a-4*b)*y(0)^2+(-4*a+4*b)*r(2)^2+(-2*a*b+2*b^2+4*b*d)*x(0)+(-2*a^2-2*a*b-4*a*c+4*b^2-4*b*c-4*b*d)*y(0)+(a^3+a^2*b-4*a^2*c+a*b^2+2*a*b*c-6*a*b*d+4*a*c^2-3*b^3+2*b^2*c+2*b^2*d+4*b*c*d)]
[x(0)^2+y(0)^2-r(2)^2  ,  (-2*a*c-2*b*d)]
[(b)*y^2+(-b^2)*y  ,  (-d)*y^2+(d^2)*y]
[x^2-2*x*x(0)+y^2-2*y*y(0)  ,  (2*a*c+2*b*d)]

Module Groebner basis: 
[(2*b)*x(0)+(2*b)*y(0)+(-2*b^2), (2*a-2*b)*x(0)+(-a^2-2*a*c+b^2-2*b*d)], 
[(b)*x+(-b)*y, (-d)*x+(-a+b+c)*y+(2*a*d-2*b*c)], 
[(8*b)*y(0)^2+(-4*b)*r(2)^2+(-8*b^2)*y(0)+(4*b^3), (4*a-4*b)*x(0)*y(0)+(4*a-4*b)*y(0)^2+(-4*a+4*b)*r(2)^2+(-2*a*b+2*b^2+4*b*d)*x(0)+(-2*a^2-2*a*b-4*a*c+4*b^2-4*b*c-4*b*d)*y(0)+(a^3+a^2*b-4*a^2*c+a*b^2+2*a*b*c-6*a*b*d+4*a*c^2-3*b^3+2*b^2*c+2*b^2*d+4*b*c*d)], 
[(b)*y^2+(-b^2)*y , (-d)*y^2+(d^2)*y].

LPP Set of Module Groebner Basis under specialization:
[ x(0) ]
[ x ]
[ y(0)^2 ]
[ y^2 ]

Branch 15:
constraints: c=0,b=0,a^3+a*d^2=0,-d!=0,d!=0,d!=0,a!=0,
RGB from KSW:
[(2*d)*y(0)+(-d^2)  ,  (2*c)*x(0)+(-2*a*c-2*b*d-c^2)]
[(2*a)*x(0)+(-a^2)  ,  (2*b)*y(0)+(-2*a*c-b^2-2*b*d)]
[(a^2-d^2)*y+(-2*a^2*d)  ,  (-2*a*c-b^2+2*b*d+c^2)*y+(2*a*b*c+2*a*c*d-2*b*c^2)]
[(d^3)*y+(a^2*d^2)  ,  (-a*b*c+a*c*d+b^2*d+b*c^2-2*b*d^2-c^2*d)*y+(-a^2*b*d+a*b^2*c-a*c*d^2-b^2*c^2+b*c^2*d)]
[(2*a*d^2)*y+(-2*a*d^3)  ,  (-a^3+a*b^2+5*a*c^2-a*d^2+4*b^2*c-10*b*c*d-4*c^3+4*c*d^2)*y+(2*a^3*d-4*a^2*b*c+4*a^2*c*d-2*a*b^2*d-4*a*b*c^2-2*a*b*d^2-6*a*c^2*d+2*a*d^3+2*b^2*c*d+8*b*c^3+2*b*c*d^2)]
[(d)*x+(a)*y+(-2*a*d)  ,  (-b)*x+(-c)*y+(2*b*c)]
[(a)*x+(d)*y  ,  (-c)*x+(-b)*y]
[(4*a*d)*r(2)^2  ,  (-4*b*c)*r(2)^2+(2*b^2*d-2*b*d^2)*x(0)+(-2*a^2*c+2*a*c^2-4*b^2*c+4*b*c*d)*y(0)+(-a^3*d+a^2*b*c+3*a^2*c*d-3*a*b^2*d-a*b*c^2+3*a*b*d^2-3*a*c^2*d-a*d^3+3*b^3*c-b^2*c*d+b*c^3-b*c*d^2)]
[(4*a)*y(0)^2+(-4*a)*r(2)^2+(-a*d^2)  ,  (-4*b)*x(0)*y(0)+(2*b^2+4*b*d)*x(0)+(-2*a*b-4*b*c)*y(0)+(a^3-4*a^2*c+a*b^2-6*a*b*d+4*a*c^2+a*d^2+2*b^2*c+4*b*c*d)]
[x(0)^2+y(0)^2-r(2)^2  ,  (-2*a*c-2*b*d)]
[(2*a)*y*y(0)+(-a*d)*y  ,  (-2*c)*x*x(0)+(-2*b)*x*y(0)+(-2*c)*y*y(0)+(3*b*d+3*c^2)*x+(2*b*c-c*d)*y+(-2*a^2*c-4*a*b*d+2*a*c^2+2*b^2*c+2*b*c*d)]
[(2*d)*y*x(0)+(-a*d)*y  ,  (-2*c)*x*x(0)+(-2*b)*x*y(0)+(-2*b)*y*x(0)+(3*b*d+3*c^2)*x+(2*a*b+2*b*c-3*c*d)*y+(-2*a*b*d+2*b^2*c)]
[(d)*y^2+(-d^2)*y  ,  (-b)*y^2+(b^2)*y]
[(a)*y^2+(-a*d)*y  ,  (-c)*y^2+(-a*b+b*c+c*d)*y]
[x^2-2*x*x(0)+y^2-2*y*y(0)  ,  (2*a*c+2*b*d)]
[(2*d)*y*r(2)^2  ,  (4*c)*y*x(0)*y(0)+(4*b)*y*y(0)^2+(-2*b)*y*r(2)^2+(-6*a*c-4*b^2-2*b*d)*y*y(0)+(-a*b*c+3*a*c*d+2*b^3-3*b^2*d+b*d^2-2*c^2*d)*y+(-2*a*b*c-2*b^2*d+2*b*c^2+2*b*d^2)*y(0)+(3*a^2*c^2+a*b^2*c+4*a*b*c*d-3*a*c^3+b^3*d-b^2*c^2-4*b*c^2*d-b*d^3)]
[(4*a)*y*r(2)^2  ,  (8*b)*y*x(0)*y(0)+(-8*c)*y*y(0)^2+(4*c)*y*r(2)^2+(-12*b*d)*y*x(0)+(4*b*c+8*c*d)*y*y(0)+(-a^3-3*a*b^2-5*a*c^2-a*d^2-8*b^2*c+18*b*c*d+4*c^3-8*c*d^2)*y+(-4*a^2*c+4*a*c^2-4*b^2*c+4*b*c*d)*y(0)+(2*a^2*b*c-2*a^2*c*d+8*a*b*c^2+6*a*b*d^2+2*a*c^2*d+2*b^3*c-10*b*c^3-8*b*c*d^2)]

Module Groebner basis: 
[(2*d)*y(0)+(-d^2), (2*c)*x(0)+(-2*a*c-2*b*d-c^2)], 
[(2*a)*x(0)+(-a^2), (2*b)*y(0)+(-2*a*c-b^2-2*b*d)], 
[(d^3)*y+(a^2*d^2), (-a*b*c+a*c*d+b^2*d+b*c^2-2*b*d^2-c^2*d)*y+(-a^2*b*d+a*b^2*c-a*c*d^2-b^2*c^2+b*c^2*d)], 
[(d)*x+(a)*y+(-2*a*d), (-b)*x+(-c)*y+(2*b*c)], 
[(4*a*d)*r(2)^2 , (-4*b*c)*r(2)^2+(2*b^2*d-2*b*d^2)*x(0)+(-2*a^2*c+2*a*c^2-4*b^2*c+4*b*c*d)*y(0)+(-a^3*d+a^2*b*c+3*a^2*c*d-3*a*b^2*d-a*b*c^2+3*a*b*d^2-3*a*c^2*d-a*d^3+3*b^3*c-b^2*c*d+b*c^3-b*c*d^2)].

LPP Set of Module Groebner Basis under specialization:
[ y(0) ]
[ x(0) ]
[ y ]
[ x ]
[ r(2)^2 ]

Branch 16:
constraints: c=0,b=0,a=0,d!=0,d!=0,
RGB from KSW:
[(2*d)*y(0)+(-d^2)  ,  (2*c)*x(0)+(-2*a*c-2*b*d-c^2)]
[(d)*y  ,  (a-c)*x+(-b)*y]
[(d)*x  ,  (-b)*x+(a-c)*y+(-2*a*d+2*b*c)]
[x(0)^2+y(0)^2-r(2)^2  ,  (-2*a*c-2*b*d)]
[x^2-2*x*x(0)+y^2-2*y*y(0)  ,  (2*a*c+2*b*d)]

Module Groebner basis: 
[(2*d)*y(0)+(-d^2), (2*c)*x(0)+(-2*a*c-2*b*d-c^2)], 
[(d)*y, (a-c)*x+(-b)*y], 
[(d)*x, (-b)*x+(a-c)*y+(-2*a*d+2*b*c)], 
[x(0)^2+y(0)^2-r(2)^2 , (-2*a*c-2*b*d)].

LPP Set of Module Groebner Basis under specialization:
[ y(0) ]
[ y ]
[ x ]
[ x(0)^2 ]

Branch 17:
constraints: c=0,b+d=0,a=0,-2*d!=0,d!=0,-d!=0,2*d^2!=0,
RGB from KSW:
[(2*d^2)  ,  (2*a+2*c)*x(0)+(2*b+2*d)*y(0)+(-a^2-4*a*c-b^2-4*b*d-c^2-3*d^2)]
[(4*d)*y(0)  ,  (-2*a+2*c)*x(0)+(-2*b-2*d)*y(0)+(a^2+b^2-c^2-d^2)]
[(2*d)*y  ,  (a-c)*x+(-b-d)*y]
[(2*d)*x  ,  (-b-d)*x+(a-c)*y+(-2*a*d+2*b*c)]
[x(0)^2+y(0)^2-r(2)^2  ,  (-2*a-2*c)*x(0)+(-2*b-2*d)*y(0)+(a^2+2*a*c+b^2+2*b*d+c^2+d^2)]
[x^2-2*x*x(0)+y^2-2*y*y(0)  ,  (2*a+2*c)*x(0)+(2*b+2*d)*y(0)+(-a^2-2*a*c-b^2-2*b*d-c^2-d^2)]

Module Groebner basis: 
[(2*d^2) , (2*a+2*c)*x(0)+(2*b+2*d)*y(0)+(-a^2-4*a*c-b^2-4*b*d-c^2-3*d^2)].

LPP Set of Module Groebner Basis under specialization:
[ 1 ]

Branch 18:
constraints: b=0,a^4*d-a^3*c*d-a^2*c^2*d+a^2*d^3+a*c^3*d-a*c*d^3=0,c!=0,a^4*c^2-a^3*c^3-a^2*c^4+a^2*c^2*d^2+a*c^5-a*c^3*d^2!=0,
RGB from KSW:
[(a^4*c^2-a^3*c^3-a^2*c^4+a^2*c^2*d^2+a*c^5-a*c^3*d^2)  ,  (-2*a^3*b*c+2*a^2*b*c^2+2*a*b*c^3+2*b^4*d-2*b^3*d^2-2*b^2*d^3-2*b*c^4+2*b*d^4)*y(0)+(3*a^3*b*c*d-a^2*b^3*d+a^2*b^2*d^2-4*a^2*b*c^2*d+a*b^3*c*d-a*b^2*c^3-2*a*b^2*c*d^2-a*b*c^3*d+a*b*c*d^3-b^5*d+2*b^3*d^3+b^2*c^4+b^2*c^2*d^2+2*b*c^4*d-b*c^2*d^3-b*d^5)]
[(a^5*c-2*a^3*c^3+a^3*c*d^2+a*c^5-a*c^3*d^2)  ,  (-2*a^4*d-2*a^3*b*c+2*a^3*c*d+2*a^2*b*c^2+2*a^2*c^2*d-2*a^2*d^3+2*a*b*c^3-2*a*c^3*d+2*a*c*d^3+4*b^4*d-4*b^3*d^2+2*b^2*c^2*d-4*b^2*d^3-2*b*c^4-2*b*c^2*d^2+4*b*d^4)*y(0)+(3*a^4*d^2+a^3*b^2*c+2*a^3*b*c*d-3*a^3*c*d^2-a^2*b^2*c^2-3*a^2*b*c^2*d-3*a^2*c^2*d^2+3*a^2*d^4-2*a*b^4*c+2*a*b^3*c*d-3*a*b^2*c^3+a*b^2*c*d^2+a*b*c^3*d-a*b*c*d^3+3*a*c^3*d^2-3*a*c*d^4-2*b^5*d+2*b^4*c^2-3*b^3*c^2*d+4*b^3*d^3+3*b^2*c^4-b^2*c^2*d^2+2*b*c^2*d^3-2*b*d^5)]
[(2*a*d)*y(0)+(-a^2*c+a*c^2-a*d^2)  ,  (-2*b*c)*y(0)+(-2*a*b*d+b^2*c+2*b*c*d)]
[(2*a^3*c^2-2*a*c^4)*y(0)+(-a^3*c^2*d+a^2*c^3*d)  ,  (-4*a^2*b*c+4*b^3*c+4*b*c^3-4*b*c*d^2)*r(2)^2+(-2*b^4*d+2*b^2*d^3)*x(0)+(-2*a^2*b^2*c-2*b^3*c*d+2*b^2*c^3+2*b*c*d^3)*y(0)+(a^4*c*d-a^3*b^2*d+a^3*b*d^2-a^3*c^2*d+a^2*b^3*c+2*a^2*b^2*c*d-a^2*c^3*d+a^2*c*d^3+a*b^4*d+a*b^3*c^2-2*a*b^2*d^3+a*b*c^4+a*b*d^4+a*c^4*d-a*c^2*d^3-b^5*c+3*b^4*c*d-3*b^3*c^3+b^3*c*d^2-b^2*c^3*d-2*b^2*c*d^3-b*c^5-b*c*d^4)]
[(2*c)*x(0)+(2*d)*y(0)+(-2*a*c-c^2-d^2)  ,  (-2*b*d)]
[(2*a)*x(0)+(-a^2-2*a*c)  ,  (2*b)*y(0)+(-b^2-2*b*d)]
[(a^2-2*a*c+c^2-d^2)*y+(-2*a^2*d+2*a*c*d)  ,  (-b^2+2*b*d)*y+(2*a*b*c-2*b*c^2)]
[(a*c*d-c^2*d+d^3)*y+(a^2*d^2-a*c*d^2)  ,  (-a*b*c+b^2*d+b*c^2-2*b*d^2)*y+(-a^2*b*d+a*b^2*c-b^2*c^2+b*c^2*d)]
[(a*c^2-c^3+c*d^2)*y+(a^2*c*d-a*c^2*d)  ,  (a*b*d+b^2*c-3*b*c*d)*y+(-a^2*b*c-a*b^2*d-a*b*c^2-a*b*d^2+b^2*c*d+2*b*c^3+b*c*d^2)]
[(c^2*d^2-d^4)*y+(a^3*c*d-a^2*d^3-a*c^3*d+a*c*d^3)  ,  (2*b^3*d+b^2*c^2-5*b^2*d^2-2*b*c^2*d+4*b*d^3)*y+(-a^3*b*c-2*a^2*b^2*d+3*a^2*b*d^2+a*b^3*c-a*b^2*c*d+a*b*c^3-a*b*c*d^2-b^3*c^2+3*b^2*c^2*d-2*b*c^2*d^2)]
[(c^3*d-c*d^3)*y+(a^3*c^2-a^2*c*d^2-a*c^4+a*c^2*d^2)  ,  (4*b^2*c-4*b*c*d)*y*y(0)+(-2*b^3*c-2*b^2*c*d-b*c^3+5*b*c*d^2)*y+(-2*a^2*b*c-2*b^3*c+2*b*c^3+2*b*c*d^2)*y(0)+(a^2*b^2*c+3*a^2*b*c*d-a*b^2*c^2+b^4*c+b^3*c*d-b^2*c*d^2-3*b*c^3*d-b*c*d^3)]
[(a*d^3)*y+(a^3*d^2-a*c^2*d^2)  ,  (-a*b*d^2-2*b^3*c+5*b^2*c*d-3*b*c*d^2)*y+(-a^3*b*d+2*a^2*b^2*c-2*a^2*b*c*d+a*b^3*d+a*b*c^2*d-a*b*d^3-b^3*c*d-2*b^2*c^3+2*b*c^3*d+b*c*d^3)]
[(d)*x+(a-c)*y+(-2*a*d)  ,  (-b)*x+(2*b*c)]
[(a-c)*x+(d)*y  ,  (-b)*y]
[(4*a*d)*r(2)^2+(-2*a^2*c+2*a*c^2)*y(0)+(-a^3*d+3*a^2*c*d-3*a*c^2*d-a*d^3)  ,  (-4*b*c)*r(2)^2+(2*b^2*d-2*b*d^2)*x(0)+(-4*b^2*c+4*b*c*d)*y(0)+(a^2*b*c-3*a*b^2*d-a*b*c^2+3*a*b*d^2+3*b^3*c-b^2*c*d+b*c^3-b*c*d^2)]
[(4*a^3*c^2-4*a*c^4)*r(2)^2+(-2*a^2*c^5-2*a^2*c^3*d^2+2*a*c^6+2*a*c^4*d^2)  ,  (-8*a^2*b*c+8*b^3*c+8*b*c^3-8*b*c*d^2)*y(0)*r(2)^2+(-4*b^3*c*d+4*b*c*d^3)*r(2)^2+(-2*b^5*d+2*b^3*d^3)*x(0)+(6*a^3*b*c^2-2*a^2*b^3*c+4*a*b^3*c^2-2*a*b*c^4-2*b^4*c*d-2*b^3*c^3-4*b^3*c*d^2+4*b^2*c^3*d+6*b^2*c*d^3-4*b*c^5-4*b*c^3*d^2)*y(0)+(3*a^4*c*d^2-a^3*b^3*d-5*a^3*b*c^2*d+a^3*b*d^3-3*a^3*c^2*d^2+a^2*b^4*c+7*a^2*b^3*c*d-4*a^2*b^2*c^3-4*a^2*b^2*c*d^2+7*a^2*b*c^3*d-a^2*b*c*d^3-3*a^2*c^3*d^2+3*a^2*c*d^4+a*b^5*d-3*a*b^4*c^2+a*b^4*d^2-5*a*b^3*c^2*d-3*a*b^3*d^3+a*b^2*c^4+8*a*b^2*c^2*d^2-2*a*b*c^4*d-3*a*b*c^2*d^3+a*b*d^5+3*a*c^4*d^2-3*a*c^2*d^4-b^6*c+3*b^5*c*d+b^4*c^3+2*b^4*c*d^2-3*b^3*c^3*d-b^3*c*d^3+3*b^2*c^5-3*b^2*c^3*d^2-2*b^2*c*d^4+5*b*c^3*d^3-b*c*d^5)]
[(4*a)*y(0)^2+(-4*a)*r(2)^2+(a^3-4*a^2*c+4*a*c^2)  ,  (-4*b)*x(0)*y(0)+(2*b^2+4*b*d)*x(0)+(-2*a*b-4*b*c)*y(0)+(a*b^2-6*a*b*d+2*b^2*c+4*b*c*d)]
[(4*c^2+4*d^2)*y(0)^2+(-4*c^2)*r(2)^2+(-4*c^2*d-4*d^3)*y(0)+(c^4+2*c^2*d^2+d^4)  ,  (-8*b*c^2-8*b*d^2)*y(0)+(4*b^2*c^2+4*b^2*d^2+4*b*c^2*d+4*b*d^3)]
[(4*d)*x(0)*y(0)+(-4*c)*y(0)^2+(4*c)*r(2)^2+(-2*d^2)*x(0)+(2*c*d)*y(0)+(-2*a^2*c+2*a*c^2-c^3-c*d^2)  ,  (-4*b*d)*x(0)+(4*b*c)*y(0)+(-2*b^2*c+2*b*c*d)]
[x(0)^2+y(0)^2-r(2)^2+(-2*a*c)  ,  (-2*b*d)]
[(2*a*c-2*c^2+2*d^2)*y*y(0)+(-c^2*d+d^3)*y+(-2*a^2*c^2+2*a^2*d^2+2*a*c^3-2*a*c*d^2)  ,  (-2*b*d)*y*y(0)+(-2*a*b*c+4*b^2*d+3*b*c^2-5*b*d^2)*y+(-2*a^2*b*d+2*a*b^2*c-2*a*b*c*d-2*b^2*c^2+4*b*c^2*d)]
[(2*c^2*d-2*d^3)*y*y(0)+(a^2*c^2*d-a^2*d^3-a*c^3*d+a*c*d^3)  ,  (-2*b*c^2+2*b*d^2)*y*y(0)+(b^2*c^2-3*b^2*d^2-b*c^2*d+3*b*d^3)*y+(-a^2*b*c^2+a^2*b*d^2-2*a*b^2*c*d+a*b*c^3+a*b*c*d^2+2*b^2*c^2*d-2*b*c^2*d^2)]
[(d)*y*x(0)+(-a+c)*y*y(0)+(-c*d)*y+(a^2*c-a*c^2)  ,  (-b)*y*x(0)+(a*b)*y+(a*b*d-b*c*d)]
[(d)*y^2+(-d^2)*y  ,  (-b)*y^2+(b^2)*y]
[(a-c)*y^2+(-a*d+c*d)*y  ,  (-a*b+b*c)*y]
[x^2-2*x*x(0)+y^2-2*y*y(0)+(2*a*c)  ,  (2*b*d)]
[(2*a*c-2*c^2+2*d^2)*y*r(2)^2+(-2*a^2*c^2+2*a*c^3)*y(0)+(-a^3*c*d+3*a^2*c^2*d-2*a*c^3*d)  ,  (-2*b*d)*y*r(2)^2+(2*a*b^2*c+2*b^3*d-4*b^2*c^2-2*b^2*d^2+2*b*c^2*d)*y(0)+(a^2*b^2*d-a^2*b*d^2-2*a*b^3*c-3*a*b^2*c*d-a*b*c^3+a*b*c*d^2-b^4*d+3*b^3*c^2+2*b^2*c^2*d+b^2*d^3+b*c^4-b*c^2*d^2)]
[(2*c^2*d-2*d^3)*y*r(2)^2+(a^3*c^3+a^3*c*d^2-a^2*c^4-a^2*c^2*d^2)  ,  (-2*b*c^2+2*b*d^2)*y*r(2)^2+(-2*a^2*b*c^2+2*a*b*c^3-4*b^3*c^2-2*b^3*d^2+4*b^2*c^2*d+2*b^2*d^3)*y(0)+(-a^3*b*c*d-a^2*b^2*d^2+4*a^2*b*c^2*d+a^2*b*d^3-a*b^3*c*d+2*a*b^2*c*d^2-3*a*b*c^3*d-a*b*c*d^3+2*b^4*c^2+b^4*d^2+b^3*c^2*d-3*b^2*c^2*d^2-b^2*d^4)]
[(4*d)*y*y(0)^2+(-2*d)*y*r(2)^2+(-4*d^2)*y*y(0)+(2*d^3)*y+(-a^2*c^2+a^2*d^2+a*c^3-a*c*d^2)  ,  (-4*b)*y*y(0)^2+(2*b)*y*r(2)^2+(4*b^2)*y*y(0)+(-2*b^3+2*b^2*d-2*b*d^2)*y+(2*a*b*c+2*b^2*d-2*b*c^2-2*b*d^2)*y(0)+(-a^2*b*d-2*a*b*c*d-b^3*d+3*b*c^2*d+b*d^3)]
[(4*c)*y*y(0)^2+(-2*a-2*c)*y*r(2)^2+(-4*c*d)*y*y(0)+(a*d^2+c^3+c*d^2)*y+(2*a^2*c-2*a*c^2)*y(0)+(a^3*d-2*a^2*c*d+a*c^2*d)  ,  (-4*b)*y*x(0)*y(0)+(6*b*d)*y*x(0)+(-2*b*c)*y*y(0)+(2*a*b^2-5*a*b*d+b^2*c+b*c*d)*y+(2*b^2*c-2*b*c*d)*y(0)+(2*a^2*b*c+4*a*b^2*d-a*b*c^2+a*b*d^2-b^3*c-4*b^2*c*d-b*c^3)]
[(4*c)*x*y(0)^2+(-4*c)*x*r(2)^2+(2*d)*y*r(2)^2+(-4*d^2)*y*y(0)+(c^3)*x+(c^2*d)*y+(-a^2*c^2-2*a^2*d^2+a*c^3+2*a*c*d^2)  ,  (-4*b)*x*x(0)*y(0)+(-2*b)*y*r(2)^2+(6*b*d)*x*x(0)+(-6*b*c)*x*y(0)+(4*b*d)*y*y(0)+(b*c*d)*x+(5*a*b*c+2*b^3-11*b^2*d-6*b*c^2+9*b*d^2)*y+(2*a*b*c+2*b^2*d-2*b*c^2-2*b*d^2)*y(0)+(2*a^2*b*d-a*b^2*c-14*a*b*c*d+b^3*d+13*b^2*c^2-2*b^2*d^2+b*d^3)]

Module Groebner basis: 
[(a^4*c^2-a^3*c^3-a^2*c^4+a^2*c^2*d^2+a*c^5-a*c^3*d^2) , (-2*a^3*b*c+2*a^2*b*c^2+2*a*b*c^3+2*b^4*d-2*b^3*d^2-2*b^2*d^3-2*b*c^4+2*b*d^4)*y(0)+(3*a^3*b*c*d-a^2*b^3*d+a^2*b^2*d^2-4*a^2*b*c^2*d+a*b^3*c*d-a*b^2*c^3-2*a*b^2*c*d^2-a*b*c^3*d+a*b*c*d^3-b^5*d+2*b^3*d^3+b^2*c^4+b^2*c^2*d^2+2*b*c^4*d-b*c^2*d^3-b*d^5)].

LPP Set of Module Groebner Basis under specialization:
[ 1 ]

Branch 19:
constraints: b=0,a^4*d-a^3*c*d-a^2*c^2*d+a^2*d^3+a*c^3*d-a*c*d^3=0,a^4*c^2-a^3*c^3-a^2*c^4+a^2*c^2*d^2+a*c^5-a*c^3*d^2=0,a^5*c-2*a^3*c^3+a^3*c*d^2+a*c^5-a*c^3*d^2=0,c!=0,a!=0,d!=0,c!=0,c-d!=0,c+d!=0,
RGB from KSW:
[(2*a*d)*y(0)+(-a^2*c+a*c^2-a*d^2)  ,  (-2*b*c)*y(0)+(-2*a*b*d+b^2*c+2*b*c*d)]
[(2*a^3*c^2-2*a*c^4)*y(0)+(-a^3*c^2*d+a^2*c^3*d)  ,  (-4*a^2*b*c+4*b^3*c+4*b*c^3-4*b*c*d^2)*r(2)^2+(-2*b^4*d+2*b^2*d^3)*x(0)+(-2*a^2*b^2*c-2*b^3*c*d+2*b^2*c^3+2*b*c*d^3)*y(0)+(a^4*c*d-a^3*b^2*d+a^3*b*d^2-a^3*c^2*d+a^2*b^3*c+2*a^2*b^2*c*d-a^2*c^3*d+a^2*c*d^3+a*b^4*d+a*b^3*c^2-2*a*b^2*d^3+a*b*c^4+a*b*d^4+a*c^4*d-a*c^2*d^3-b^5*c+3*b^4*c*d-3*b^3*c^3+b^3*c*d^2-b^2*c^3*d-2*b^2*c*d^3-b*c^5-b*c*d^4)]
[(2*c)*x(0)+(2*d)*y(0)+(-2*a*c-c^2-d^2)  ,  (-2*b*d)]
[(2*a)*x(0)+(-a^2-2*a*c)  ,  (2*b)*y(0)+(-b^2-2*b*d)]
[(a^2-2*a*c+c^2-d^2)*y+(-2*a^2*d+2*a*c*d)  ,  (-b^2+2*b*d)*y+(2*a*b*c-2*b*c^2)]
[(a*c*d-c^2*d+d^3)*y+(a^2*d^2-a*c*d^2)  ,  (-a*b*c+b^2*d+b*c^2-2*b*d^2)*y+(-a^2*b*d+a*b^2*c-b^2*c^2+b*c^2*d)]
[(a*c^2-c^3+c*d^2)*y+(a^2*c*d-a*c^2*d)  ,  (a*b*d+b^2*c-3*b*c*d)*y+(-a^2*b*c-a*b^2*d-a*b*c^2-a*b*d^2+b^2*c*d+2*b*c^3+b*c*d^2)]
[(c^2*d^2-d^4)*y+(a^3*c*d-a^2*d^3-a*c^3*d+a*c*d^3)  ,  (2*b^3*d+b^2*c^2-5*b^2*d^2-2*b*c^2*d+4*b*d^3)*y+(-a^3*b*c-2*a^2*b^2*d+3*a^2*b*d^2+a*b^3*c-a*b^2*c*d+a*b*c^3-a*b*c*d^2-b^3*c^2+3*b^2*c^2*d-2*b*c^2*d^2)]
[(c^3*d-c*d^3)*y+(a^3*c^2-a^2*c*d^2-a*c^4+a*c^2*d^2)  ,  (4*b^2*c-4*b*c*d)*y*y(0)+(-2*b^3*c-2*b^2*c*d-b*c^3+5*b*c*d^2)*y+(-2*a^2*b*c-2*b^3*c+2*b*c^3+2*b*c*d^2)*y(0)+(a^2*b^2*c+3*a^2*b*c*d-a*b^2*c^2+b^4*c+b^3*c*d-b^2*c*d^2-3*b*c^3*d-b*c*d^3)]
[(a*d^3)*y+(a^3*d^2-a*c^2*d^2)  ,  (-a*b*d^2-2*b^3*c+5*b^2*c*d-3*b*c*d^2)*y+(-a^3*b*d+2*a^2*b^2*c-2*a^2*b*c*d+a*b^3*d+a*b*c^2*d-a*b*d^3-b^3*c*d-2*b^2*c^3+2*b*c^3*d+b*c*d^3)]
[(d)*x+(a-c)*y+(-2*a*d)  ,  (-b)*x+(2*b*c)]
[(a-c)*x+(d)*y  ,  (-b)*y]
[(4*a*d)*r(2)^2+(-2*a^2*c+2*a*c^2)*y(0)+(-a^3*d+3*a^2*c*d-3*a*c^2*d-a*d^3)  ,  (-4*b*c)*r(2)^2+(2*b^2*d-2*b*d^2)*x(0)+(-4*b^2*c+4*b*c*d)*y(0)+(a^2*b*c-3*a*b^2*d-a*b*c^2+3*a*b*d^2+3*b^3*c-b^2*c*d+b*c^3-b*c*d^2)]
[(4*a^3*c^2-4*a*c^4)*r(2)^2+(-2*a^2*c^5-2*a^2*c^3*d^2+2*a*c^6+2*a*c^4*d^2)  ,  (-8*a^2*b*c+8*b^3*c+8*b*c^3-8*b*c*d^2)*y(0)*r(2)^2+(-4*b^3*c*d+4*b*c*d^3)*r(2)^2+(-2*b^5*d+2*b^3*d^3)*x(0)+(-2*a^2*b^3*c+6*a^2*b*c^3+4*a*b^3*c^2+4*a*b*c^4+4*b^4*c*d-2*b^3*c^3-10*b^3*c*d^2+4*b^2*c^3*d-10*b*c^5-4*b*c^3*d^2+6*b*c*d^4)*y(0)+(3*a^4*c^3+3*a^4*c*d^2-a^3*b^3*d+4*a^3*b*c^2*d+a^3*b*d^3-3*a^3*c^4-3*a^3*c^2*d^2+a^2*b^4*c+4*a^2*b^3*c*d-4*a^2*b^2*c^3-a^2*b^2*c*d^2-5*a^2*b*c^3*d-a^2*b*c*d^3-3*a^2*c^5+3*a^2*c*d^4+a*b^5*d-3*a*b^4*c^2+a*b^4*d^2-2*a*b^3*c^2*d-3*a*b^3*d^3-2*a*b^2*c^4+2*a*b^2*c^2*d^2-5*a*b*c^4*d+a*b*d^5+3*a*c^6-3*a*c^2*d^4-b^6*c+b^4*c^3+2*b^4*c*d^2-3*b^3*c^3*d+5*b^3*c*d^3+6*b^2*c^5-2*b^2*c*d^4+6*b*c^5*d+2*b*c^3*d^3-4*b*c*d^5)]
[(4*a)*y(0)^2+(-4*a)*r(2)^2+(a^3-4*a^2*c+4*a*c^2)  ,  (-4*b)*x(0)*y(0)+(2*b^2+4*b*d)*x(0)+(-2*a*b-4*b*c)*y(0)+(a*b^2-6*a*b*d+2*b^2*c+4*b*c*d)]
[(4*c^2+4*d^2)*y(0)^2+(-4*c^2)*r(2)^2+(-4*c^2*d-4*d^3)*y(0)+(c^4+2*c^2*d^2+d^4)  ,  (-8*b*c^2-8*b*d^2)*y(0)+(4*b^2*c^2+4*b^2*d^2+4*b*c^2*d+4*b*d^3)]
[(4*d)*x(0)*y(0)+(-4*c)*y(0)^2+(4*c)*r(2)^2+(-2*d^2)*x(0)+(2*c*d)*y(0)+(-2*a^2*c+2*a*c^2-c^3-c*d^2)  ,  (-4*b*d)*x(0)+(4*b*c)*y(0)+(-2*b^2*c+2*b*c*d)]
[x(0)^2+y(0)^2-r(2)^2+(-2*a*c)  ,  (-2*b*d)]
[(2*a*c-2*c^2+2*d^2)*y*y(0)+(-c^2*d+d^3)*y+(-2*a^2*c^2+2*a^2*d^2+2*a*c^3-2*a*c*d^2)  ,  (-2*b*d)*y*y(0)+(-2*a*b*c+4*b^2*d+3*b*c^2-5*b*d^2)*y+(-2*a^2*b*d+2*a*b^2*c-2*a*b*c*d-2*b^2*c^2+4*b*c^2*d)]
[(2*c^2*d-2*d^3)*y*y(0)+(a^2*c^2*d-a^2*d^3-a*c^3*d+a*c*d^3)  ,  (-2*b*c^2+2*b*d^2)*y*y(0)+(b^2*c^2-3*b^2*d^2-b*c^2*d+3*b*d^3)*y+(-a^2*b*c^2+a^2*b*d^2-2*a*b^2*c*d+a*b*c^3+a*b*c*d^2+2*b^2*c^2*d-2*b*c^2*d^2)]
[(d)*y*x(0)+(-a+c)*y*y(0)+(-c*d)*y+(a^2*c-a*c^2)  ,  (-b)*y*x(0)+(a*b)*y+(a*b*d-b*c*d)]
[(d)*y^2+(-d^2)*y  ,  (-b)*y^2+(b^2)*y]
[(a-c)*y^2+(-a*d+c*d)*y  ,  (-a*b+b*c)*y]
[x^2-2*x*x(0)+y^2-2*y*y(0)+(2*a*c)  ,  (2*b*d)]
[(2*a*c-2*c^2+2*d^2)*y*r(2)^2+(-2*a^2*c^2+2*a*c^3)*y(0)+(-a^3*c*d+3*a^2*c^2*d-2*a*c^3*d)  ,  (-2*b*d)*y*r(2)^2+(2*a*b^2*c+2*b^3*d-4*b^2*c^2-2*b^2*d^2+2*b*c^2*d)*y(0)+(a^2*b^2*d-a^2*b*d^2-2*a*b^3*c-3*a*b^2*c*d-a*b*c^3+a*b*c*d^2-b^4*d+3*b^3*c^2+2*b^2*c^2*d+b^2*d^3+b*c^4-b*c^2*d^2)]
[(2*c^2*d-2*d^3)*y*r(2)^2+(a^3*c^3+a^3*c*d^2-a^2*c^4-a^2*c^2*d^2)  ,  (-2*b*c^2+2*b*d^2)*y*r(2)^2+(-2*a^2*b*c^2+2*a*b*c^3-4*b^3*c^2-2*b^3*d^2+4*b^2*c^2*d+2*b^2*d^3)*y(0)+(-a^3*b*c*d-a^2*b^2*d^2+4*a^2*b*c^2*d+a^2*b*d^3-a*b^3*c*d+2*a*b^2*c*d^2-3*a*b*c^3*d-a*b*c*d^3+2*b^4*c^2+b^4*d^2+b^3*c^2*d-3*b^2*c^2*d^2-b^2*d^4)]
[(4*d)*y*y(0)^2+(-2*d)*y*r(2)^2+(-4*d^2)*y*y(0)+(2*d^3)*y+(-a^2*c^2+a^2*d^2+a*c^3-a*c*d^2)  ,  (-4*b)*y*y(0)^2+(2*b)*y*r(2)^2+(4*b^2)*y*y(0)+(-2*b^3+2*b^2*d-2*b*d^2)*y+(2*a*b*c+2*b^2*d-2*b*c^2-2*b*d^2)*y(0)+(-a^2*b*d-2*a*b*c*d-b^3*d+3*b*c^2*d+b*d^3)]
[(4*c)*y*y(0)^2+(-2*a-2*c)*y*r(2)^2+(-4*c*d)*y*y(0)+(a*d^2+c^3+c*d^2)*y+(2*a^2*c-2*a*c^2)*y(0)+(a^3*d-2*a^2*c*d+a*c^2*d)  ,  (-4*b)*y*x(0)*y(0)+(6*b*d)*y*x(0)+(-2*b*c)*y*y(0)+(2*a*b^2-5*a*b*d+b^2*c+b*c*d)*y+(2*b^2*c-2*b*c*d)*y(0)+(2*a^2*b*c+4*a*b^2*d-a*b*c^2+a*b*d^2-b^3*c-4*b^2*c*d-b*c^3)]
[(4*c)*x*y(0)^2+(-4*c)*x*r(2)^2+(2*d)*y*r(2)^2+(-4*d^2)*y*y(0)+(c^3)*x+(c^2*d)*y+(-a^2*c^2-2*a^2*d^2+a*c^3+2*a*c*d^2)  ,  (-4*b)*x*x(0)*y(0)+(-2*b)*y*r(2)^2+(6*b*d)*x*x(0)+(-6*b*c)*x*y(0)+(4*b*d)*y*y(0)+(b*c*d)*x+(5*a*b*c+2*b^3-11*b^2*d-6*b*c^2+9*b*d^2)*y+(2*a*b*c+2*b^2*d-2*b*c^2-2*b*d^2)*y(0)+(2*a^2*b*d-a*b^2*c-14*a*b*c*d+b^3*d+13*b^2*c^2-2*b^2*d^2+b*d^3)]

Module Groebner basis: 
[(2*a*d)*y(0)+(-a^2*c+a*c^2-a*d^2), (-2*b*c)*y(0)+(-2*a*b*d+b^2*c+2*b*c*d)], 
[(2*c)*x(0)+(2*d)*y(0)+(-2*a*c-c^2-d^2), (-2*b*d)], 
[(c^2*d^2-d^4)*y+(a^3*c*d-a^2*d^3-a*c^3*d+a*c*d^3), (2*b^3*d+b^2*c^2-5*b^2*d^2-2*b*c^2*d+4*b*d^3)*y+(-a^3*b*c-2*a^2*b^2*d+3*a^2*b*d^2+a*b^3*c-a*b^2*c*d+a*b*c^3-a*b*c*d^2-b^3*c^2+3*b^2*c^2*d-2*b*c^2*d^2)], 
[(d)*x+(a-c)*y+(-2*a*d), (-b)*x+(2*b*c)], 
[(4*a*d)*r(2)^2+(-2*a^2*c+2*a*c^2)*y(0)+(-a^3*d+3*a^2*c*d-3*a*c^2*d-a*d^3) , (-4*b*c)*r(2)^2+(2*b^2*d-2*b*d^2)*x(0)+(-4*b^2*c+4*b*c*d)*y(0)+(a^2*b*c-3*a*b^2*d-a*b*c^2+3*a*b*d^2+3*b^3*c-b^2*c*d+b*c^3-b*c*d^2)].

LPP Set of Module Groebner Basis under specialization:
[ y(0) ]
[ x(0) ]
[ y ]
[ x ]
[ r(2)^2 ]

Branch 20:
constraints: c+d=0,b=0,a^2+a*d=0,-d!=0,a!=0,d!=0,
RGB from KSW:
[(2*a*d)*y(0)+(-a*d^2)  ,  (-2*b*c)*y(0)+(-a^2*c-2*a*b*d+a*c^2+b^2*c+2*b*c*d)]
[(2*d)*x(0)+(-2*d)*y(0)+(-2*a*d+2*d^2)  ,  (-2*c-2*d)*x(0)+(2*a*c+2*a*d+2*b*d+c^2-d^2)]
[(2*a)*x(0)+(3*a*d)  ,  (2*b)*y(0)+(-a^2-2*a*c-3*a*d-b^2-2*b*d)]
[(a*d)*y  ,  (a^2-2*a*c-a*d-b^2+2*b*d+c^2-d^2)*y+(-2*a^2*d+2*a*b*c+2*a*c*d-2*b*c^2)]
[(d)*x+(a+d)*y+(-2*a*d)  ,  (-b)*x+(-c-d)*y+(2*b*c)]
[(a)*x+(-a)*y+(2*a*d)  ,  (b-c-d)*x+(-b+c+d)*y+(-2*b*c)]
[(4*a*d)*r(2)^2+(-2*a*d^3)  ,  (-4*b*c)*r(2)^2+(2*b^2*d-2*b*d^2)*x(0)+(-2*a^2*c+2*a*c^2-4*b^2*c+4*b*c*d)*y(0)+(-a^3*d+a^2*b*c+3*a^2*c*d-3*a*b^2*d-a*b*c^2+3*a*b*d^2-3*a*c^2*d+a*d^3+3*b^3*c-b^2*c*d+b*c^3-b*c*d^2)]
[(8*d)*y(0)^2+(-4*d)*r(2)^2+(-8*d^2)*y(0)+(4*d^3)  ,  (4*c+4*d)*x(0)*y(0)+(-4*c-4*d)*y(0)^2+(4*c+4*d)*r(2)^2+(-4*b*d-2*c*d-2*d^2)*x(0)+(-4*a*c-4*a*d+8*b*c-4*b*d-2*c^2+2*c*d+4*d^2)*y(0)+(4*a*b*d+2*a*c*d+2*a*d^2-4*b^2*c-2*b*c*d+2*b*d^2-c^3+c^2*d-c*d^2-3*d^3)]
[(4*a)*y(0)^2+(-4*a)*r(2)^2+(a*d^2)  ,  (-4*b)*x(0)*y(0)+(2*b^2+4*b*d)*x(0)+(-2*a*b-4*b*c)*y(0)+(a^3-4*a^2*c+a*b^2-6*a*b*d+4*a*c^2-a*d^2+2*b^2*c+4*b*c*d)]
[x(0)^2+y(0)^2-r(2)^2+(2*a*d)  ,  (-2*a*c-2*a*d-2*b*d)]
[(2*a)*y*y(0)  ,  (2*b-2*c-2*d)*y*x(0)+(-2*c-2*d)*y*y(0)+(2*a^2-2*a*b-2*a*c-2*b^2+6*b*d+3*c^2+2*c*d-d^2)*y+(-2*a^2*c-4*a^2*d+4*a*b*c-2*a*b*d+2*a*c^2+4*a*c*d-4*b*c^2+2*b*c*d)]
[(d)*y^2+(-d^2)*y  ,  (-b)*y^2+(b^2)*y]
[(a)*y^2  ,  (b-c-d)*y^2+(a^2-a*b-2*a*c-a*d-2*b^2+b*c+2*b*d+c^2+c*d)*y+(-2*a^2*d+2*a*b*c+2*a*c*d-2*b*c^2)]
[x^2-2*x*x(0)+y^2-2*y*y(0)+(-2*a*d)  ,  (2*a*c+2*a*d+2*b*d)]
[(2*a)*y*r(2)^2  ,  (4*b)*y*x(0)*y(0)+(4*b-4*c-4*d)*y*y(0)^2+(-2*b+2*c+2*d)*y*r(2)^2+(-6*c*d-6*d^2)*y*x(0)+(-4*b^2+8*b*c-2*c*d-2*d^2)*y*y(0)+(-2*a*b^2+6*a*b*d+4*a*c^2+6*a*c*d+2*a*d^2+2*b^3-2*b^2*d-16*b*c*d+8*b*d^2-5*c^3+3*c^2*d+9*c*d^2+d^3)*y+(-2*a^2*c-2*a*b*c+2*a*c^2-2*b^2*c-2*b^2*d+2*b*c^2+2*b*c*d+2*b*d^2)*y(0)+(-a^3*d-3*a^2*b*c+a^2*b*d+a^2*c^2+3*a^2*c*d-a^2*d^2-5*a*b^2*d-6*a*b*c^2+2*a*b*c*d-8*a*b*d^2-a*c^3-2*a*c^2*d+a*c*d^2+b^3*c+b^3*d+5*b^2*c*d+9*b*c^3-3*b*c^2*d+7*b*c*d^2-b*d^3)]

Module Groebner basis: 
[(2*a*d)*y(0)+(-a*d^2), (-2*b*c)*y(0)+(-a^2*c-2*a*b*d+a*c^2+b^2*c+2*b*c*d)], 
[(2*d)*x(0)+(-2*d)*y(0)+(-2*a*d+2*d^2), (-2*c-2*d)*x(0)+(2*a*c+2*a*d+2*b*d+c^2-d^2)], 
[(a*d)*y, (a^2-2*a*c-a*d-b^2+2*b*d+c^2-d^2)*y+(-2*a^2*d+2*a*b*c+2*a*c*d-2*b*c^2)], 
[(d)*x+(a+d)*y+(-2*a*d), (-b)*x+(-c-d)*y+(2*b*c)], 
[(4*a*d)*r(2)^2+(-2*a*d^3) , (-4*b*c)*r(2)^2+(2*b^2*d-2*b*d^2)*x(0)+(-2*a^2*c+2*a*c^2-4*b^2*c+4*b*c*d)*y(0)+(-a^3*d+a^2*b*c+3*a^2*c*d-3*a*b^2*d-a*b*c^2+3*a*b*d^2-3*a*c^2*d+a*d^3+3*b^3*c-b^2*c*d+b*c^3-b*c*d^2)].

LPP Set of Module Groebner Basis under specialization:
[ y(0) ]
[ x(0) ]
[ y ]
[ x ]
[ r(2)^2 ]

Branch 21:
constraints: c+d=0,b=0,a=0,d!=0,d!=0,
RGB from KSW:
[(2*d)*x(0)+(-2*d)*y(0)+(2*d^2)  ,  (-2*c-2*d)*x(0)+(2*a*c+2*b*d+c^2-d^2)]
[(d)*x+(d)*y  ,  (-b)*x+(a-c-d)*y+(-2*a*d+2*b*c)]
[(8*d)*y(0)^2+(-4*d)*r(2)^2+(-8*d^2)*y(0)+(4*d^3)  ,  (4*c+4*d)*x(0)*y(0)+(-4*c-4*d)*y(0)^2+(4*c+4*d)*r(2)^2+(-4*b*d-2*c*d-2*d^2)*x(0)+(-4*a*c+4*b*c-4*b*d-2*c^2+2*c*d+4*d^2)*y(0)+(-2*a^2*c+2*a*c^2+2*a*c*d-2*b^2*c+2*b*c*d+2*b*d^2-c^3+c^2*d-c*d^2-3*d^3)]
[x(0)^2+y(0)^2-r(2)^2  ,  (-2*a*c-2*b*d)]
[(d)*y^2+(-d^2)*y  ,  (-b)*y^2+(b^2)*y]
[x^2-2*x*x(0)+y^2-2*y*y(0)  ,  (2*a*c+2*b*d)]

Module Groebner basis: 
[(2*d)*x(0)+(-2*d)*y(0)+(2*d^2), (-2*c-2*d)*x(0)+(2*a*c+2*b*d+c^2-d^2)], 
[(d)*x+(d)*y, (-b)*x+(a-c-d)*y+(-2*a*d+2*b*c)], 
[(8*d)*y(0)^2+(-4*d)*r(2)^2+(-8*d^2)*y(0)+(4*d^3), (4*c+4*d)*x(0)*y(0)+(-4*c-4*d)*y(0)^2+(4*c+4*d)*r(2)^2+(-4*b*d-2*c*d-2*d^2)*x(0)+(-4*a*c+4*b*c-4*b*d-2*c^2+2*c*d+4*d^2)*y(0)+(-2*a^2*c+2*a*c^2+2*a*c*d-2*b^2*c+2*b*c*d+2*b*d^2-c^3+c^2*d-c*d^2-3*d^3)], 
[(d)*y^2+(-d^2)*y , (-b)*y^2+(b^2)*y].

LPP Set of Module Groebner Basis under specialization:
[ x(0) ]
[ x ]
[ y(0)^2 ]
[ y^2 ]

Branch 22:
constraints: b=0,a=0,c!=0,c+d!=0,c!=0,c-d!=0,c+d!=0,d!=0,c^2+d^2!=0,
RGB from KSW:
[(2*c)*x(0)+(2*d)*y(0)+(-c^2-d^2)  ,  (-2*a*c-2*b*d)]
[(c^2-d^2)*y  ,  (a^2-2*a*c-b^2+2*b*d)*y+(-2*a^2*d+2*a*b*c+2*a*c*d-2*b*c^2)]
[(d)*x+(-c)*y  ,  (-b)*x+(a)*y+(-2*a*d+2*b*c)]
[(c)*x+(-d)*y  ,  (-a)*x+(b)*y]
[(4*c^2+4*d^2)*y(0)^2+(-4*c^2)*r(2)^2+(-4*c^2*d-4*d^3)*y(0)+(c^4+2*c^2*d^2+d^4)  ,  (-8*b*c^2-8*b*d^2)*y(0)+(4*b^2*c^2+4*b^2*d^2+4*b*c^2*d+4*b*d^3)]
[(4*d)*x(0)*y(0)+(-4*c)*y(0)^2+(4*c)*r(2)^2+(-2*d^2)*x(0)+(2*c*d)*y(0)+(-c^3-c*d^2)  ,  (-4*b*d)*x(0)+(4*b*c)*y(0)+(-2*a^2*c+2*a*c^2-2*b^2*c+2*b*c*d)]
[x(0)^2+y(0)^2-r(2)^2  ,  (-2*a*c-2*b*d)]
[(d)*y*x(0)+(c)*y*y(0)+(-c*d)*y  ,  (-b)*y*x(0)+(-a)*y*y(0)+(a*b)*y+(a^2*c+a*b*d-a*c^2-b*c*d)]
[(d)*y^2+(-d^2)*y  ,  (-b)*y^2+(b^2)*y]
[(c)*y^2+(-c*d)*y  ,  (-a)*y^2+(a*b+a*d-b*c)*y]
[x^2-2*x*x(0)+y^2-2*y*y(0)  ,  (2*a*c+2*b*d)]
[(4*d)*y*y(0)^2+(-2*d)*y*r(2)^2+(-4*d^2)*y*y(0)+(2*d^3)*y  ,  (-4*b)*y*y(0)^2+(2*b)*y*r(2)^2+(4*b^2)*y*y(0)+(-2*b^3+2*b^2*d-2*b*d^2)*y+(2*a*b*c+2*b^2*d-2*b*c^2-2*b*d^2)*y(0)+(-a^2*b*d-a^2*c^2+a^2*d^2-2*a*b*c*d+a*c^3-a*c*d^2-b^3*d+3*b*c^2*d+b*d^3)]
[(4*c)*y*y(0)^2+(-2*c)*y*r(2)^2+(-4*c*d)*y*y(0)+(2*c*d^2)*y  ,  (-4*a)*y*y(0)^2+(2*a)*y*r(2)^2+(4*a*b)*y*y(0)+(-2*a*b^2+2*a*b*d-2*b*c*d)*y+(2*a^2*c-2*a*c^2+2*b^2*c-2*b*c*d)*y(0)+(-a^3*d+3*a^2*b*c+3*a^2*c*d+3*a*b^2*d-4*a*b*c^2+2*a*b*d^2-2*a*c^2*d-b^3*c-3*b^2*c*d+b*c^3-b*c*d^2)]

Module Groebner basis: 
[(2*c)*x(0)+(2*d)*y(0)+(-c^2-d^2), (-2*a*c-2*b*d)], 
[(c^2-d^2)*y, (a^2-2*a*c-b^2+2*b*d)*y+(-2*a^2*d+2*a*b*c+2*a*c*d-2*b*c^2)], 
[(d)*x+(-c)*y, (-b)*x+(a)*y+(-2*a*d+2*b*c)], 
[(4*c^2+4*d^2)*y(0)^2+(-4*c^2)*r(2)^2+(-4*c^2*d-4*d^3)*y(0)+(c^4+2*c^2*d^2+d^4) , (-8*b*c^2-8*b*d^2)*y(0)+(4*b^2*c^2+4*b^2*d^2+4*b*c^2*d+4*b*d^3)].

LPP Set of Module Groebner Basis under specialization:
[ x(0) ]
[ y ]
[ x ]
[ y(0)^2 ]

Branch 23:
constraints: c-d=0,b=0,a=0,d!=0,2*d!=0,d!=0,
RGB from KSW:
[(2*d)*x(0)+(2*d)*y(0)+(-2*d^2)  ,  (2*c-2*d)*x(0)+(-2*a*c-2*b*d-c^2+d^2)]
[(d)*x+(-d)*y  ,  (-b)*x+(a-c+d)*y+(-2*a*d+2*b*c)]
[(8*d)*y(0)^2+(-4*d)*r(2)^2+(-8*d^2)*y(0)+(4*d^3)  ,  (4*c-4*d)*x(0)*y(0)+(4*c-4*d)*y(0)^2+(-4*c+4*d)*r(2)^2+(4*b*d-2*c*d+2*d^2)*x(0)+(-4*a*c-4*b*c-4*b*d-2*c^2-2*c*d+4*d^2)*y(0)+(2*a^2*c-2*a*c^2+2*a*c*d+2*b^2*c-2*b*c*d+2*b*d^2+c^3+c^2*d+c*d^2-3*d^3)]
[x(0)^2+y(0)^2-r(2)^2  ,  (-2*a*c-2*b*d)]
[(d)*y^2+(-d^2)*y  ,  (-b)*y^2+(b^2)*y]
[x^2-2*x*x(0)+y^2-2*y*y(0)  ,  (2*a*c+2*b*d)]

Module Groebner basis: 
[(2*d)*x(0)+(2*d)*y(0)+(-2*d^2), (2*c-2*d)*x(0)+(-2*a*c-2*b*d-c^2+d^2)], 
[(d)*x+(-d)*y, (-b)*x+(a-c+d)*y+(-2*a*d+2*b*c)], 
[(8*d)*y(0)^2+(-4*d)*r(2)^2+(-8*d^2)*y(0)+(4*d^3), (4*c-4*d)*x(0)*y(0)+(4*c-4*d)*y(0)^2+(-4*c+4*d)*r(2)^2+(4*b*d-2*c*d+2*d^2)*x(0)+(-4*a*c-4*b*c-4*b*d-2*c^2-2*c*d+4*d^2)*y(0)+(2*a^2*c-2*a*c^2+2*a*c*d+2*b^2*c-2*b*c*d+2*b*d^2+c^3+c^2*d+c*d^2-3*d^3)], 
[(d)*y^2+(-d^2)*y , (-b)*y^2+(b^2)*y].

LPP Set of Module Groebner Basis under specialization:
[ x(0) ]
[ x ]
[ y(0)^2 ]
[ y^2 ]

Branch 24:
constraints: b=0,a=0,c^2+d^2=0,c!=0,c+d!=0,c-d!=0,d!=0,
RGB from KSW:
[(2*c)*x(0)+(2*d)*y(0)  ,  (-2*a*c-2*b*d-c^2-d^2)]
[(2*d^2)*x(0)+(-2*c*d)*y(0)  ,  (-2*c^2-2*d^2)*x(0)+(2*a*c^2+2*b*c*d+c^3+c*d^2)]
[(2*d^2)*y  ,  (-a^2+2*a*c+b^2-2*b*d-c^2-d^2)*y+(2*a^2*d-2*a*b*c-2*a*c*d+2*b*c^2)]
[(2*c*d)*y  ,  (a*c+b*d-c^2-d^2)*x+(-a*d-b*c)*y+(2*a*d^2-2*b*c*d)]
[(d)*x+(-c)*y  ,  (-b)*x+(a)*y+(-2*a*d+2*b*c)]
[(c)*x+(-d)*y  ,  (-a)*x+(b)*y]
[(4*d^2)*r(2)^2  ,  (4*c^2+4*d^2)*y(0)^2+(-4*c^2-4*d^2)*r(2)^2+(-8*b*c^2-8*b*d^2-4*c^2*d-4*d^3)*y(0)+(4*b^2*c^2+4*b^2*d^2+4*b*c^2*d+4*b*d^3+c^4+2*c^2*d^2+d^4)]
[(2*c*d)*r(2)^2  ,  (2*c^2+2*d^2)*x(0)*y(0)+(-2*b*d^2-c^2*d-d^3)*x(0)+(-2*a*c^2-c^3-c*d^2)*y(0)+(-a^2*c*d+2*a*c^2*d-b^2*c*d+2*b*c*d^2)]
[(2*d)*x(0)*y(0)+(-2*c)*y(0)^2+(2*c)*r(2)^2  ,  (-2*b*d-c^2-d^2)*x(0)+(2*b*c)*y(0)+(-a^2*c+2*a*c^2-b^2*c+2*b*c*d)]
[x(0)^2+y(0)^2-r(2)^2  ,  (-2*a*c-2*b*d)]
[(2*d)*y*x(0)+(2*c)*y*y(0)  ,  (-2*b)*y*x(0)+(-2*a)*y*y(0)+(a*c+b*d-c^2-d^2)*x+(2*a*b-a*d-b*c)*y+(2*a^2*c+2*a*b*d-2*a*c^2+2*a*d^2-4*b*c*d)]
[(2*d)*y^2  ,  (-2*b)*y^2+(-a^2+2*a*c+3*b^2-2*b*d-c^2-d^2)*y+(2*a^2*d-2*a*b*c-2*a*c*d+2*b*c^2)]
[(2*c)*y^2  ,  (-2*a)*y^2+(a*c+b*d-c^2-d^2)*x+(2*a*b+a*d-3*b*c)*y+(2*a*d^2-2*b*c*d)]
[x^2-2*x*x(0)+y^2-2*y*y(0)  ,  (2*a*c+2*b*d)]
[(4*d)*y*y(0)^2+(-2*d)*y*r(2)^2  ,  (-4*b)*y*y(0)^2+(2*b)*y*r(2)^2+(2*a*c+4*b^2-2*b*d-2*c^2-2*d^2)*y*y(0)+(-2*a*c*d-2*b^3+4*b^2*d+b*c^2-3*b*d^2+c^2*d+d^3)*y+(2*a*b*c+2*b^2*d-2*b*c^2-2*b*d^2)*y(0)+(-a^2*b*d-3*a^2*c^2+a^2*d^2-4*a*b*c*d+3*a*c^3-a*c*d^2-b^3*d+5*b*c^2*d+b*d^3)]
[(4*c)*y*y(0)^2+(-2*c)*y*r(2)^2  ,  (-4*a)*y*y(0)^2+(2*a)*y*r(2)^2+(-2*b*d+2*c^2+2*d^2)*y*x(0)+(4*a*b-2*b*c)*y*y(0)+(-2*a*b^2+3*a*b*d-2*a*c^2-a*d^2+b^2*c-3*b*c*d-c^3-c*d^2)*y+(2*a^2*c-2*a*c^2+2*b^2*c-2*b*c*d)*y(0)+(-a^3*d+2*a^2*b*c+4*a^2*c*d+2*a*b^2*d-3*a*b*c^2+3*a*b*d^2-3*a*c^2*d-b^3*c-2*b^2*c*d+b*c^3-2*b*c*d^2)]

Module Groebner basis: 
[(2*d^2)*x(0)+(-2*c*d)*y(0), (-2*c^2-2*d^2)*x(0)+(2*a*c^2+2*b*c*d+c^3+c*d^2)], 
[(2*d^2)*y, (-a^2+2*a*c+b^2-2*b*d-c^2-d^2)*y+(2*a^2*d-2*a*b*c-2*a*c*d+2*b*c^2)], 
[(d)*x+(-c)*y, (-b)*x+(a)*y+(-2*a*d+2*b*c)], 
[(4*d^2)*r(2)^2 , (4*c^2+4*d^2)*y(0)^2+(-4*c^2-4*d^2)*r(2)^2+(-8*b*c^2-8*b*d^2-4*c^2*d-4*d^3)*y(0)+(4*b^2*c^2+4*b^2*d^2+4*b*c^2*d+4*b*d^3+c^4+2*c^2*d^2+d^4)].

LPP Set of Module Groebner Basis under specialization:
[ x(0) ]
[ y ]
[ x ]
[ r(2)^2 ]

Branch 25:
constraints: d=0,b=0,a=0,c!=0,c^2!=0,c!=0,
RGB from KSW:
[(2*c)*x(0)+(-c^2)  ,  (2*d)*y(0)+(-2*a*c-2*b*d-d^2)]
[(c)*y  ,  (b-d)*x+(-a)*y+(2*a*d-2*b*c)]
[(c)*x  ,  (-a)*x+(b-d)*y]
[(4*c)*y(0)^2+(-4*c)*r(2)^2+(c^3)  ,  (-4*d)*x(0)*y(0)+(4*b*d+2*d^2)*x(0)+(-4*b*c-2*c*d)*y(0)+(2*a^2*c-2*a*c^2+2*b^2*c-2*b*c*d+c*d^2)]
[x(0)^2+y(0)^2-r(2)^2  ,  (-2*a*c-2*b*d)]
[x^2-2*x*x(0)+y^2-2*y*y(0)  ,  (2*a*c+2*b*d)]

Module Groebner basis: 
[(2*c)*x(0)+(-c^2), (2*d)*y(0)+(-2*a*c-2*b*d-d^2)], 
[(c)*y, (b-d)*x+(-a)*y+(2*a*d-2*b*c)], 
[(c)*x, (-a)*x+(b-d)*y], 
[(4*c)*y(0)^2+(-4*c)*r(2)^2+(c^3) , (-4*d)*x(0)*y(0)+(4*b*d+2*d^2)*x(0)+(-4*b*c-2*c*d)*y(0)+(2*a^2*c-2*a*c^2+2*b^2*c-2*b*c*d+c*d^2)].

LPP Set of Module Groebner Basis under specialization:
[ x(0) ]
[ y ]
[ x ]
[ y(0)^2 ]

Branch 26:
constraints: d=0,b=0,a^2-c^2=0,c!=0,a!=0,a*c^2-c^3!=0,
RGB from KSW:
[(a*c^2-c^3)  ,  (2*a*d-2*b*c)*y(0)+(-a^2*c-2*a*b*d-a*d^2+b^2*c+2*b*c*d+c^3)]
[(2*c)*x(0)+(-2*a*c-c^2)  ,  (2*d)*y(0)+(-2*b*d-d^2)]
[(2*a)*x(0)+(-2*a*c-c^2)  ,  (2*b)*y(0)+(-a^2-b^2-2*b*d+c^2)]
[(a-c)*y  ,  (-b+d)*x+(-2*a*d+2*b*c)]
[(a-c)*x  ,  (-b+d)*y]
[(4*c)*y(0)^2+(-4*c)*r(2)^2+(c^3)  ,  (-4*d)*x(0)*y(0)+(4*b*d+2*d^2)*x(0)+(4*a*d-8*b*c-2*c*d)*y(0)+(-4*a*b*d-2*a*d^2+4*b^2*c+2*b*c*d+c*d^2)]
[(4*a)*y(0)^2+(-4*a)*r(2)^2+(c^3)  ,  (-4*b)*x(0)*y(0)+(2*b^2+4*b*d)*x(0)+(-2*a*b-10*a*d+6*b*c)*y(0)+(a^3+a^2*c+a*b^2+4*a*b*d-a*c^2+5*a*d^2-3*b^2*c-6*b*c*d-c^3)]
[x(0)^2+y(0)^2-r(2)^2+(-2*a*c)  ,  (-2*b*d)]
[x^2-2*x*x(0)+y^2-2*y*y(0)+(2*a*c)  ,  (2*b*d)]

Module Groebner basis: 
[(a*c^2-c^3) , (2*a*d-2*b*c)*y(0)+(-a^2*c-2*a*b*d-a*d^2+b^2*c+2*b*c*d+c^3)].

LPP Set of Module Groebner Basis under specialization:
[ 1 ]

Branch 27:
constraints: d=0,b=0,a-c=0,c!=0,c!=0,
RGB from KSW:
[(2*c)*x(0)+(-3*c^2)  ,  (2*d)*y(0)+(-2*a*c-2*b*d+2*c^2-d^2)]
[(4*c)*y(0)^2+(-4*c)*r(2)^2+(c^3)  ,  (-4*d)*x(0)*y(0)+(4*b*d+2*d^2)*x(0)+(-4*b*c-2*c*d)*y(0)+(2*a^2*c-2*a*c^2+2*b^2*c-2*b*c*d+c*d^2)]
[x(0)^2+y(0)^2-r(2)^2+(-2*c^2)  ,  (-2*a*c-2*b*d+2*c^2)]
[x^2-2*x*x(0)+y^2-2*y*y(0)+(2*c^2)  ,  (2*a*c+2*b*d-2*c^2)]

Module Groebner basis: 
[(2*c)*x(0)+(-3*c^2), (2*d)*y(0)+(-2*a*c-2*b*d+2*c^2-d^2)], 
[(4*c)*y(0)^2+(-4*c)*r(2)^2+(c^3), (-4*d)*x(0)*y(0)+(4*b*d+2*d^2)*x(0)+(-4*b*c-2*c*d)*y(0)+(2*a^2*c-2*a*c^2+2*b^2*c-2*b*c*d+c*d^2)], 
[x^2-2*x*x(0)+y^2-2*y*y(0)+(2*c^2) , (2*a*c+2*b*d-2*c^2)].

LPP Set of Module Groebner Basis under specialization:
[ x(0) ]
[ y(0)^2 ]
[ x^2 ]

Branch 28:
constraints: c-d=0,b=0,a-d=0,d!=0,2*d!=0,a!=0,d!=0,
RGB from KSW:
[(2*d)*y(0)+(-d^2)  ,  (-2*a+2*c)*x(0)+(-2*b)*y(0)+(a^2+b^2-c^2)]
[(2*d)*x(0)+(-3*d^2)  ,  (2*a-2*d)*x(0)+(2*b)*y(0)+(-a^2-2*a*c-b^2-2*b*d+3*d^2)]
[(d)*y  ,  (a-c)*x+(-b)*y]
[(d)*x+(-2*d^2)  ,  (-b)*x+(a-c)*y+(-2*a*d+2*b*c+2*d^2)]
[(4*d)*r(2)^2+(-2*d^3)  ,  (8*b+4*c-4*d)*x(0)*y(0)+(-8*a+4*c+4*d)*y(0)^2+(8*a-4*c-4*d)*r(2)^2+(-4*b^2-4*b*d-2*c*d+2*d^2)*x(0)+(4*a*b-4*a*c+12*a*d-8*b*c-4*b*d-2*c^2-2*c*d-4*d^2)*y(0)+(-2*a^3+4*a^2*c-2*a*b^2-4*a*c^2+2*a*c*d-6*a*d^2+4*b^2*c+2*b*c*d+2*b*d^2+c^3+c^2*d+c*d^2+3*d^3)]
[x(0)^2+y(0)^2-r(2)^2+(-2*d^2)  ,  (-2*a*c-2*b*d+2*d^2)]
[x^2-2*x*x(0)+y^2-2*y*y(0)+(2*d^2)  ,  (2*a*c+2*b*d-2*d^2)]

Module Groebner basis: 
[(2*d)*y(0)+(-d^2), (-2*a+2*c)*x(0)+(-2*b)*y(0)+(a^2+b^2-c^2)], 
[(2*d)*x(0)+(-3*d^2), (2*a-2*d)*x(0)+(2*b)*y(0)+(-a^2-2*a*c-b^2-2*b*d+3*d^2)], 
[(d)*y, (a-c)*x+(-b)*y], 
[(d)*x+(-2*d^2), (-b)*x+(a-c)*y+(-2*a*d+2*b*c+2*d^2)], 
[(4*d)*r(2)^2+(-2*d^3) , (8*b+4*c-4*d)*x(0)*y(0)+(-8*a+4*c+4*d)*y(0)^2+(8*a-4*c-4*d)*r(2)^2+(-4*b^2-4*b*d-2*c*d+2*d^2)*x(0)+(4*a*b-4*a*c+12*a*d-8*b*c-4*b*d-2*c^2-2*c*d-4*d^2)*y(0)+(-2*a^3+4*a^2*c-2*a*b^2-4*a*c^2+2*a*c*d-6*a*d^2+4*b^2*c+2*b*c*d+2*b*d^2+c^3+c^2*d+c*d^2+3*d^3)].

LPP Set of Module Groebner Basis under specialization:
[ y(0) ]
[ x(0) ]
[ y ]
[ x ]
[ r(2)^2 ]

Branch 29:
constraints: a+b-c-d=0,b*c+b*d-c*d-d^2=0,c!=0,b!=0,4*b^2*d-4*b*d^2!=0,
RGB from KSW:
[(4*b^2*d-4*b*d^2)  ,  (2*a+2*b-2*c-2*d)*y*x(0)+(2*a+2*b-2*c-2*d)*y*y(0)+(a*c-a*d+b*c-b*d-c^2+d^2)*x+(-2*a*b-3*a*c+a*d-2*b^2-b*c+3*b*d+3*c^2+2*c*d-d^2)*y+(-2*a^2*c-2*a^2*d+2*a*b*c-2*a*b*d+2*a*c^2+4*a*c*d-2*a*d^2-4*b^2*d-4*b*c^2+4*b*c*d+4*b*d^2)]
[(2*c)*x(0)+(2*d)*y(0)+(-4*b*d-3*c^2+d^2)  ,  (a+b-c-d)*x+(-a-b+c+d)*y+(-2*a*c+2*a*d-2*b*c+2*b*d+2*c^2-2*d^2)]
[(2*b-2*d)*x(0)+(-2*b+2*d)*y(0)+(2*b^2-2*d^2)  ,  (-a-b+c+d)*x+(a+b-c-d)*y+(-2*a-2*b+2*c+2*d)*x(0)+(a^2-2*a*d-b^2+2*b*c-c^2+d^2)]
[(b-d)*x+(b-d)*y  ,  (-a-b+c+d)*x]
[(8*b-8*d)*y(0)^2+(-4*b+4*d)*r(2)^2+(-8*b^2+8*d^2)*y(0)+(4*b^3-4*d^3)  ,  (2*a+2*b-2*c-2*d)*y*x(0)+(2*a+2*b-2*c-2*d)*y*y(0)+(4*a+4*b-4*c-4*d)*x(0)*y(0)+(-4*a-4*b+4*c+4*d)*y(0)^2+(4*a+4*b-4*c-4*d)*r(2)^2+(a*c-a*d+b*c-b*d-c^2+d^2)*x+(-2*a*b-3*a*c+a*d-2*b^2-b*c+3*b*d+3*c^2+2*c*d-d^2)*y+(-2*a*b-2*a*d-2*b^2+2*b*c+2*c*d+2*d^2)*x(0)+(-2*a^2+2*a*b+6*a*d+4*b^2-6*b*c+2*c^2-2*c*d-4*d^2)*y(0)+(-a^3+a^2*b+a^2*c-a^2*d-a*b^2+2*a*b*c-2*a*b*d-a*c^2+4*a*c*d-5*a*d^2-3*b^3+3*b^2*c+b^2*d-5*b*c^2+4*b*c*d-b*d^2+c^3-c^2*d+c*d^2+3*d^3)]
[(4*c^2+4*d^2)*y(0)^2+(-4*c^2)*r(2)^2+(-16*b*d^2-12*c^2*d+4*d^3)*y(0)+(16*b*d^3+c^4+10*c^2*d^2-7*d^4)  ,  (12*a*c-12*a*d+12*b*c-12*b*d-12*c^2+12*d^2)*y*y(0)+(12*a*b*d+6*a*c^2-12*a*c*d+6*a*d^2+12*b^2*d+6*b*c^2-24*b*c*d-6*b*d^2-6*c^3+6*c^2*d+6*c*d^2-6*d^3)*y+(-8*a*c*d+8*a*d^2-8*b*c*d+8*b*d^2+8*c^2*d-8*d^3)*y(0)+(-8*a^2*c^2+8*a^2*c*d-12*a*b*c^2-4*a*b*c*d-8*a*b*d^2+8*a*c^3-8*a*c^2*d+4*a*c*d^2-4*a*d^3+4*b^2*c*d+4*b^2*d^2+12*b*c^3+8*b*c^2*d+8*b*c*d^2-12*b*d^3-8*c^2*d^2+8*d^4)]
[(4*d)*x(0)*y(0)+(-4*c)*y(0)^2+(4*c)*r(2)^2+(-6*d^2)*x(0)+(-8*b*d+6*c*d+8*d^2)*y(0)+(4*b*d^2-c^3-c*d^2-4*d^3)  ,  (-6*a-6*b+6*c+6*d)*y*x(0)+(-6*a-6*b+6*c+6*d)*y*y(0)+(-a*c-b*c+c^2+c*d)*x+(6*a*b+7*a*c+6*b^2+b*c-6*b*d-7*c^2-7*c*d)*y+(-4*a*d-4*b*d+4*c*d+4*d^2)*x(0)+(4*a*d+4*b*d-4*c*d-4*d^2)*y(0)+(2*a^2*c+8*a^2*d-6*a*b*c+2*a*b*d-2*a*c^2-8*a*c*d-2*a*d^2+2*b^2*d+8*b*c^2-4*b*d^2-2*c^2*d+2*d^3)]
[x(0)^2+y(0)^2-r(2)^2+(-4*b*d-2*c^2+2*d^2)  ,  (a+b-c-d)*x+(-a-b+c+d)*y+(-2*a*c+2*a*d-2*b*c+2*b*d+2*c^2-2*d^2)]
[(b-d)*y^2+(-b^2+d^2)*y  ,  0]
[x^2-2*x*x(0)+y^2-2*y*y(0)+(4*b*d+2*c^2-2*d^2)  ,  (-a-b+c+d)*x+(a+b-c-d)*y+(2*a*c-2*a*d+2*b*c-2*b*d-2*c^2+2*d^2)]

Module Groebner basis: 
[(4*b^2*d-4*b*d^2) , (2*a+2*b-2*c-2*d)*y*x(0)+(2*a+2*b-2*c-2*d)*y*y(0)+(a*c-a*d+b*c-b*d-c^2+d^2)*x+(-2*a*b-3*a*c+a*d-2*b^2-b*c+3*b*d+3*c^2+2*c*d-d^2)*y+(-2*a^2*c-2*a^2*d+2*a*b*c-2*a*b*d+2*a*c^2+4*a*c*d-2*a*d^2-4*b^2*d-4*b*c^2+4*b*c*d+4*b*d^2)].

LPP Set of Module Groebner Basis under specialization:
[ 1 ]

Branch 30:
constraints: b-d=0,a-c=0,c!=0,d!=0,c!=0,c^2+d^2!=0,
RGB from KSW:
[(2*c)*x(0)+(2*d)*y(0)+(-3*c^2-3*d^2)  ,  (-2*a*c-2*b*d+2*c^2+2*d^2)]
[(4*c^2+4*d^2)*y(0)^2+(-4*c^2)*r(2)^2+(-12*c^2*d-12*d^3)*y(0)+(c^4+10*c^2*d^2+9*d^4)  ,  (-8*b*c^2-8*b*d^2+8*c^2*d+8*d^3)*y(0)+(4*b^2*c^2+4*b^2*d^2+4*b*c^2*d+4*b*d^3-8*c^2*d^2-8*d^4)]
[(4*d)*x(0)*y(0)+(-4*c)*y(0)^2+(4*c)*r(2)^2+(-6*d^2)*x(0)+(6*c*d)*y(0)+(-c^3-c*d^2)  ,  (-4*b*d+4*d^2)*x(0)+(4*b*c-4*c*d)*y(0)+(-2*a^2*c+2*a*c^2-2*b^2*c+2*b*c*d)]
[x(0)^2+y(0)^2-r(2)^2+(-2*c^2-2*d^2)  ,  (-2*a*c-2*b*d+2*c^2+2*d^2)]
[x^2-2*x*x(0)+y^2-2*y*y(0)+(2*c^2+2*d^2)  ,  (2*a*c+2*b*d-2*c^2-2*d^2)]

Module Groebner basis: 
[(2*c)*x(0)+(2*d)*y(0)+(-3*c^2-3*d^2), (-2*a*c-2*b*d+2*c^2+2*d^2)], 
[(4*c^2+4*d^2)*y(0)^2+(-4*c^2)*r(2)^2+(-12*c^2*d-12*d^3)*y(0)+(c^4+10*c^2*d^2+9*d^4), (-8*b*c^2-8*b*d^2+8*c^2*d+8*d^3)*y(0)+(4*b^2*c^2+4*b^2*d^2+4*b*c^2*d+4*b*d^3-8*c^2*d^2-8*d^4)], 
[x^2-2*x*x(0)+y^2-2*y*y(0)+(2*c^2+2*d^2) , (2*a*c+2*b*d-2*c^2-2*d^2)].

LPP Set of Module Groebner Basis under specialization:
[ x(0) ]
[ y(0)^2 ]
[ x^2 ]

Branch 31:
constraints: b-d=0,a-c=0,c^2+d^2=0,c!=0,d!=0,d!=0,
RGB from KSW:
[(2*c)*x(0)+(2*d)*y(0)  ,  (-2*a*c-2*b*d-c^2-d^2)]
[(2*d^2)*x(0)+(-2*c*d)*y(0)  ,  (-2*c^2-2*d^2)*x(0)+(2*a*c^2+2*b*c*d+c^3+c*d^2)]
[(4*d^2)*r(2)^2  ,  (4*c^2+4*d^2)*y(0)^2+(-4*c^2-4*d^2)*r(2)^2+(-8*b*c^2-8*b*d^2-4*c^2*d-4*d^3)*y(0)+(4*b^2*c^2+4*b^2*d^2+4*b*c^2*d+4*b*d^3+c^4+2*c^2*d^2+d^4)]
[(2*c*d)*r(2)^2  ,  (2*c^2+2*d^2)*x(0)*y(0)+(-2*b*d^2-3*c^2*d-d^3)*x(0)+(-2*a*c^2-c^3-3*c*d^2)*y(0)+(-a^2*c*d+4*a*c^2*d-b^2*c*d+4*b*c*d^2+c^3*d+c*d^3)]
[(2*d)*x(0)*y(0)+(-2*c)*y(0)^2+(2*c)*r(2)^2  ,  (-2*b*d-3*c^2-d^2)*x(0)+(2*b*c-2*c*d)*y(0)+(-a^2*c+4*a*c^2-b^2*c+4*b*c*d+c^3+c*d^2)]
[x(0)^2+y(0)^2-r(2)^2  ,  (-2*a*c-2*b*d)]
[x^2-2*x*x(0)+y^2-2*y*y(0)  ,  (2*a*c+2*b*d)]

Module Groebner basis: 
[(2*d^2)*x(0)+(-2*c*d)*y(0), (-2*c^2-2*d^2)*x(0)+(2*a*c^2+2*b*c*d+c^3+c*d^2)], 
[(4*d^2)*r(2)^2, (4*c^2+4*d^2)*y(0)^2+(-4*c^2-4*d^2)*r(2)^2+(-8*b*c^2-8*b*d^2-4*c^2*d-4*d^3)*y(0)+(4*b^2*c^2+4*b^2*d^2+4*b*c^2*d+4*b*d^3+c^4+2*c^2*d^2+d^4)], 
[x^2-2*x*x(0)+y^2-2*y*y(0) , (2*a*c+2*b*d)].

LPP Set of Module Groebner Basis under specialization:
[ x(0) ]
[ r(2)^2 ]
[ x^2 ]

Branch 32:
constraints: c+d=0,a^2*b-a^2*d-a*b^2+2*a*b*d-a*d^2-b^2*d+b*d^2=0,-d!=0,b!=0,-a-b!=0,b-d!=0,b!=0,d!=0,
RGB from KSW:
[(2*a*d+2*b*d)*y(0)+(a^2*d-2*a*b*d-b^2*d-2*b*d^2)  ,  (-2*b*c-2*b*d)*y(0)+(-a^2*c-a^2*d+a*c^2-a*d^2+b^2*c+b^2*d+2*b*c*d+2*b*d^2)]
[(2*a*b^2-2*b^3+8*b^2*d-4*b*d^2)*y(0)+(a^2*d^2-a*b^3-a*b^2*d-a*b*d^2+a*d^3+b^4-3*b^3*d-2*b^2*d^2+b*d^3)  ,  (2*a^2*b-2*a^2*d-2*a*b^2+4*a*b*d-2*a*d^2+2*b^2*c-2*b*c*d)*x(0)+(-2*b^2*c-2*b^2*d)*y(0)+(-a^3*b+a^3*d+a^2*b^2-3*a^2*b*c-2*a^2*b*d+2*a^2*c*d-2*a*b^2*d+a*b*c^2-2*a*b*c*d+2*a*b*d^2+2*a*c*d^2-a*d^3+b^3*c+b^3*d-b^2*c^2+2*b^2*c*d+b*c^2*d+2*b*d^3)]
[(8*b^2*d^2-8*b*d^3)*y(0)+(-4*b^3*d^2+4*b*d^4)  ,  (2*a*c+2*a*d-2*b*c-2*b*d-2*c^2+2*d^2)*y*r(2)^2+(-2*a^2*b*c+2*a^2*b*d-2*a^2*c^2-2*a^2*d^2-4*a*b^2*d+8*a*b*d^2+2*a*c^3-2*a*d^3+2*b^3*c+2*b^3*d-2*b^2*c^2-8*b^2*c*d-10*b^2*d^2+2*b*c^3+2*b*c^2*d+4*b*c*d^2+8*b*d^3)*y(0)+(-a^3*b*c-a^3*b*d+3*a^2*b^2*c-a^2*b^2*d+2*a^2*b*c^2-2*a^2*b*c*d+a^2*c^3+2*a^2*c^2*d+2*a^2*c*d^2+a^2*d^3-a*b^3*c+3*a*b^3*d-2*a*b^2*c^2-6*a*b^2*d^2-2*a*b*c^3+4*a*b*c^2*d-2*a*b*d^3-a*c^4-2*a*c^3*d-2*a*c^2*d^2+a*d^4-b^4*c-b^4*d+2*b^3*c^2+2*b^3*c*d+4*b^3*d^2-b^2*c^3+6*b^2*c*d^2+b^2*d^3+b*c^4-b*c^3*d-b*c^2*d^2-3*b*c*d^3-4*b*d^4)]
[(4*b^3*d-4*b*d^3)*y(0)+(-2*b^4*d-2*b^3*d^2+2*b^2*d^3+2*b*d^4)  ,  (2*a*c+2*a*d-2*b*c-2*b*d-2*c^2+2*d^2)*y*r(2)^2+(-2*a^2*b*c-2*a^2*c^2+2*a*b^2*c+4*a*b*d^2+2*a*c^3-2*b^3*c-2*b^3*d-4*b^2*c^2-4*b^2*c*d-2*b^2*d^2+2*b*c^3+2*b*c^2*d+2*b*c*d^2+4*b*d^3)*y(0)+(-a^3*b*d-a^3*c*d+a^2*b^2*c+a^2*b^2*d-a^2*b*d^2+a^2*c^3+3*a^2*c^2*d+a^2*c*d^2-2*a*b^3*c-a*b^3*d-3*a*b^2*c*d-4*a*b^2*d^2-a*b*c^3+2*a*b*c^2*d+a*b*c*d^2-2*a*b*d^3-a*c^4-2*a*c^3*d-a*c^2*d^2+b^4*c+b^4*d+3*b^3*c^2+4*b^3*c*d+2*b^3*d^2-b^2*c^3+2*b^2*c^2*d+3*b^2*c*d^2-b^2*d^3+b*c^4-b*c^3*d-b*c^2*d^2-b*c*d^3-2*b*d^4)]
[(2*d)*x(0)+(-2*d)*y(0)+(-2*a*d+2*b*d+2*d^2)  ,  (-2*c-2*d)*x(0)+(2*a*c+2*a*d+c^2-d^2)]
[(2*a)*x(0)+(2*b)*y(0)+(-a^2+2*a*d-b^2-2*b*d)  ,  (-2*a*c-2*a*d)]
[(a^2+2*a*d-b^2+2*b*d)*y+(-2*a^2*d-2*a*b*d-2*a*d^2-2*b*d^2)  ,  (-2*a*c-2*a*d+c^2-d^2)*y+(2*a*b*c+2*a*b*d+2*a*c*d+2*a*d^2-2*b*c^2+2*b*d^2)]
[(2*b^2*d-2*b*d^2)*y+(-2*a*b^2*d+2*a*b*d^2-2*b^2*d^2+2*b*d^3)  ,  (2*a*c+2*a*d-2*b*c-2*b*d-2*c^2+2*d^2)*y*y(0)+(-a*b*c-a*b*d-a*c*d-a*d^2+b^2*c+b^2*d+2*b*c^2+b*c*d-b*d^2)*y+(-a^2*b*c-a^2*b*d-2*a^2*c^2-a^2*c*d+a^2*d^2+a*b^2*c+a*b^2*d+a*b*c^2-2*a*b*c*d-3*a*b*d^2+2*a*c^3+a*c^2*d-a*c*d^2-b^2*c^2+b^2*c*d+2*b^2*d^2+3*b*c^2*d+b*c*d^2-2*b*d^3)]
[(2*a*d^2+2*b*d^2)*y+(-4*a*b*d^2-4*b*d^3)  ,  (2*a*c+2*a*d-2*b*c-2*b*d-2*c^2+2*d^2)*y*y(0)+(a*c^2-2*a*c*d-3*a*d^2+2*b^2*c+2*b^2*d+b*c^2-2*b*c*d-3*b*d^2-c^3+c^2*d+c*d^2-d^3)*y+(-2*a^2*b*c-2*a^2*c^2-2*a*b^2*d-2*a*b*c*d+2*a*b*d^2+2*a*c^3+2*b^2*c*d+2*b*c^3+2*b*c^2*d+2*b*c*d^2+4*b*d^3)]
[(2*a*b*d+2*b*d^2)*y+(-2*a*b^2*d-2*a*b*d^2-2*b^2*d^2-2*b*d^3)  ,  (-a*b*c-a*b*d+a*c^2+a*c*d+b^2*c+b^2*d+b*c^2-3*b*c*d-4*b*d^2-c^3-c^2*d+c*d^2+d^3)*y+(-a^2*b*c-a^2*b*d+a^2*c*d+a^2*d^2+a*b^2*c+a*b^2*d-a*b*c^2+a*b*d^2-a*c^2*d-a*c*d^2-b^2*c^2+b^2*c*d+2*b^2*d^2+2*b*c^3+b*c^2*d+b*c*d^2+2*b*d^3)]
[(2*a*b^2-2*b^3+4*b*d^2)*y+(-4*a*b*d^2-4*b*d^3)  ,  (-6*a*c-6*a*d+6*b*c+6*b*d+6*c^2-6*d^2)*y*y(0)+(2*a^2*b-2*a^2*d-2*a*b^2+4*a*b*d+a*c^2+6*a*c*d+3*a*d^2-2*b^2*c-4*b^2*d-5*b*c^2-6*b*c*d+b*d^2-c^3-c^2*d+c*d^2+d^3)*y+(2*a^2*b*c+6*a^2*c^2+4*a^2*c*d+2*a*b^2*d-4*a*b*c^2+6*a*b*c*d+6*a*b*d^2-6*a*c^3-4*a*c^2*d-2*b^2*c*d+2*b*c^3-6*b*c^2*d-2*b*c*d^2+4*b*d^3)]
[(b-d)*x+(-a-d)*y+(2*a*d+2*b*d)  ,  (c+d)*y+(-2*b*c-2*b*d)]
[(a+d)*x+(-b+d)*y  ,  (-c-d)*x]
[(4*a*d+4*b*d)*r(2)^2+(8*b^2*d-8*b*d^2)*y(0)+(-2*a^3*d-2*a^2*d^2-2*a*d^3-6*b^3*d+2*b^2*d^2+2*b*d^3)  ,  (-4*b*c-4*b*d)*r(2)^2+(2*b^2*c+2*b^2*d-2*b*c*d-2*b*d^2)*x(0)+(-2*a^2*c-2*a^2*d+2*a*b*c+2*a*b*d+2*a*c^2-2*a*d^2-6*b^2*c-6*b^2*d+6*b*c*d+6*b*d^2)*y(0)+(a^3*c+a^3*d+2*a^2*b*d-a^2*c^2+4*a^2*c*d+3*a^2*d^2-3*a*b^2*c-5*a*b^2*d+4*a*b*d^2-4*a*c^2*d+2*a*d^3+4*b^3*c+4*b^3*d-b^2*c^2-b^2*d^2+b*c^3+b*c^2*d-3*b*c*d^2-b*d^3)]
[(8*b^2*d^2-8*b*d^3)*r(2)^2+(-4*b^4*d^2+4*b^3*d^3-4*b^2*d^4+4*b*d^5)  ,  (4*a*c+4*a*d-4*b*c-4*b*d-4*c^2+4*d^2)*y*y(0)*r(2)^2+(4*a^2*b*c+8*a^2*b*d-4*a^2*c^2-4*a*b^2*c-8*a*b^2*d+8*a*b*d^2+4*a*c^3-4*b^2*c^2-8*b^2*c*d-8*b^2*d^2-4*b*c^3+8*b*c*d^2+8*b*d^3)*r(2)^2+(8*b^3*c*d+8*b^3*d^2-8*b^2*c*d^2-8*b^2*d^3)*x(0)+(-4*a^3*c^2+4*a^3*d^2+4*a^2*b^2*c-4*a^2*b^2*d-6*a^2*b*c^2+18*a^2*b*d^2+2*a^2*c^3-2*a^2*d^3+8*a*b^3*d-16*a*b^2*c^2-4*a*b^2*d^2-2*a*b*c^3+14*a*b*d^3+2*a*c^4-6*a*d^4-4*b^4*c-4*b^4*d-18*b^3*c^2-12*b^3*c*d+14*b^3*d^2+8*b^2*c^3+2*b^2*c^2*d-6*b^2*d^3+8*b*c^4+4*b*c^2*d^2+4*b*c*d^3-4*b*d^4)*y(0)+(-2*a^4*c^2-4*a^4*c*d-2*a^4*d^2+2*a^3*b^2*c+2*a^3*b^2*d-5*a^3*b*c^2-12*a^3*b*c*d-9*a^3*b*d^2+a^3*c^3+7*a^3*c^2*d+2*a^3*c*d^2-2*a^3*d^3-6*a^2*b^3*c+2*a^2*b^3*d-5*a^2*b^2*c^2-10*a^2*b^2*c*d-13*a^2*b^2*d^2+9*a^2*b*c^3+14*a^2*b*c^2*d+3*a^2*b*c*d^2-8*a^2*b*d^3+5*a^2*c^4-2*a^2*c^3*d+2*a^2*c^2*d^2+2*a^2*c*d^3-a^2*d^4+2*a*b^4*c-6*a*b^4*d+11*a*b^3*c^2-20*a*b^3*c*d-13*a*b^3*d^2+9*a*b^2*c^3+19*a*b^2*c^2*d+16*a*b^2*c*d^2-5*a*b*c^4-2*a*b*c*d^3-5*a*b*d^4-4*a*c^5-a*c^4*d-2*a*c^3*d^2-2*a*c^2*d^3+2*a*c*d^4+3*a*d^5+2*b^5*c+2*b^5*d+9*b^4*c^2+14*b^4*c*d-3*b^4*d^2-3*b^3*c^3+14*b^3*c^2*d+b^3*c*d^2-6*b^3*d^3-4*b^2*c^4-5*b^2*c^3*d+b^2*c^2*d^2+9*b^2*c*d^3+9*b^2*d^4+b*c^5-4*b*c^4*d-2*b*c^2*d^3-5*b*c*d^4-2*b*d^5)]
[(8*b^3*d-8*b*d^3)*r(2)^2+(-4*b^5*d+4*b*d^5)  ,  (8*a*c+8*a*d-8*b*c-8*b*d-8*c^2+8*d^2)*y*y(0)*r(2)^2+(8*a^2*b*c+12*a^2*b*d-8*a^2*c^2+4*a^2*d^2-4*a*b^2*c-8*a*b^2*d+8*a*b*d^2+8*a*c^3+4*a*d^3-8*b^3*c-8*b^3*d-12*b^2*c^2-8*b^2*c*d-8*b*c^3+12*b*c*d^2+8*b*d^3)*r(2)^2+(4*b^4*c+4*b^4*d+8*b^3*c*d+8*b^3*d^2-10*b^2*c*d^2-10*b^2*d^3-2*b*c*d^3-2*b*d^4)*x(0)+(-8*a^3*c^2+8*a^3*d^2+4*a^2*b^2*c-16*a^2*b*c^2+24*a^2*b*d^2+4*a^2*c^3-4*a*b^3*c-24*a*b^2*c^2+12*a*b^2*d^2+2*a*b*c^3+14*a*b*d^3+4*a*c^4-8*a*d^4-36*b^3*c^2-28*b^3*c*d+12*b^3*d^2+10*b^2*c^3+8*b^2*c^2*d+2*b^2*c*d^2-4*b^2*d^3+14*b*c^4+2*b*c^3*d+8*b*c^2*d^2+8*b*c*d^3-8*b*d^4)*y(0)+(-4*a^4*c^2-8*a^4*c*d-4*a^4*d^2+2*a^3*b^2*d-8*a^3*b*c^2-20*a^3*b*c*d-16*a^3*b*d^2+3*a^3*c^3+13*a^3*c^2*d+3*a^3*c*d^2-5*a^3*d^3-2*a^2*b^3*c-2*a^2*b^3*d-2*a^2*b^2*c^2-22*a^2*b^2*c*d-22*a^2*b^2*d^2+13*a^2*b*c^3+29*a^2*b*c^2*d+8*a^2*b*c*d^2-12*a^2*b*d^3+8*a^2*c^4-2*a^2*c^3*d+4*a^2*c^2*d^2+4*a^2*c*d^3-4*a^2*d^4-2*a*b^4*d+10*a*b^3*c^2-24*a*b^3*c*d-26*a*b^3*d^2+11*a*b^2*c^3+35*a*b^2*c^2*d+23*a*b^2*c*d^2-7*a*b^2*d^3-7*a*b*c^4-5*a*b*c^3*d-a*b*c^2*d^2-a*b*c*d^3-2*a*b*d^4-7*a*c^5-3*a*c^4*d-4*a*c^3*d^2-4*a*c^2*d^3+3*a*c*d^4+3*a*d^5+2*b^5*c+2*b^5*d+18*b^4*c^2+14*b^4*c*d-6*b^4*d^2-b^3*c^3+27*b^3*c^2*d+18*b^3*c*d^2-2*b^3*d^3-5*b^2*c^4-7*b^2*c^3*d-3*b^2*c^2*d^2+7*b^2*c*d^3+6*b^2*d^4+2*b*c^5-7*b*c^4*d-b*c^3*d^2-3*b*c^2*d^3-7*b*c*d^4)]
[(8*d)*y(0)^2+(-4*d)*r(2)^2+(-16*b*d-8*d^2)*y(0)+(8*b^2*d+8*b*d^2+4*d^3)  ,  (4*c+4*d)*x(0)*y(0)+(-4*c-4*d)*y(0)^2+(4*c+4*d)*r(2)^2+(-4*b*c-4*b*d-2*c*d-2*d^2)*x(0)+(-4*a*c-4*a*d+8*b*c+8*b*d-2*c^2+2*c*d+4*d^2)*y(0)+(4*a*b*c+4*a*b*d+2*a*c*d+2*a*d^2-4*b^2*c-4*b^2*d+2*b*c^2-2*b*c*d-4*b*d^2-c^3+c^2*d-c*d^2-3*d^3)]
[(4*a^2+4*b^2)*y(0)^2+(-4*a^2)*r(2)^2+(-8*b^3-16*b^2*d)*y(0)+(a^4+6*a^3*d-8*a^2*d^2-8*a*b^2*d+16*a*b*d^2-14*a*d^3+3*b^4+10*b^3*d+14*b*d^3)  ,  (4*a^2*b-4*a^2*d-4*a*b^2+8*a*b*d-4*a*d^2+4*b^2*c-4*b*c*d)*x(0)+(-4*a^2*b+4*a^2*d+4*a*b^2-12*a*b*c-20*a*b*d+4*a*d^2+16*b^2*c+20*b^2*d-4*b*c*d-8*b*d^2)*y(0)+(-2*a^3*b-6*a^3*c-4*a^3*d+4*a^2*b^2+4*a^2*b*c-12*a^2*b*d+6*a^2*c^2+2*a^2*c*d+8*a^2*d^2-2*a*b^3+6*a*b^2*c+22*a*b^2*d-8*a*b*c^2+8*a*b*c*d-8*a*b*d^2+2*a*c^2*d+4*a*c*d^2+12*a*d^3-8*b^3*c-10*b^3*d-2*b^2*c^2-14*b^2*c*d+2*b*c^2*d+4*b*c*d^2-8*b*d^3)]
[(8*b^3)*y(0)^2+(-4*a*b^2-16*b^2*d+8*b*d^2)*r(2)^2+(-8*b^4-16*b*d^3)*y(0)+(2*a^3*d^2+2*a^2*d^3+2*a*b^4+2*b^5+8*b^4*d-6*b^3*d^2+14*b^2*d^3+4*b*d^4)  ,  (12*a*c+12*a*d-12*b*c-12*b*d-12*c^2+12*d^2)*y*r(2)^2+(-4*a^2*b+4*a^2*d+4*a*b^2-8*a*b*d+4*a*d^2+4*b^2*d-4*b*d^2)*x(0)*y(0)+(4*a^2*b-4*a^2*d-4*a*b^2+8*a*b*d-4*a*d^2-8*b^2*c-12*b^2*d+4*b*c^2+8*b*c*d+8*b*d^2)*y(0)^2+(-4*a^2*b+4*a^2*d+4*a*b^2-8*a*b*d+4*a*d^2+12*b^2*c+16*b^2*d-4*b*c^2-8*b*c*d-8*b*d^2)*r(2)^2+(2*a^2*b^2-2*a^2*d^2-2*a*b^3+2*a*b^2*d+2*a*b*d^2-2*a*d^3-6*b^3*c-8*b^3*d+8*b^2*c*d+8*b^2*d^2-2*b*c*d^2)*x(0)+(2*a^3*b-2*a^3*d-6*a^2*b^2-6*a^2*b*c-12*a^2*c^2+12*a^2*d^2+4*a*b^3+8*a*b^2*c-6*a*b*c^2+8*a*b*d^2+12*a*c^3+14*a*d^3+4*b^3*d-30*b^2*c^2-24*b^2*c*d+4*b^2*d^2+12*b*c^3+4*b*c^2*d-2*b*c*d^2+4*b*d^3)*y(0)+(a^4*b-a^4*d-a^3*b^2-4*a^3*b*d-2*a^3*c^2-9*a^3*c*d-2*a^3*d^2+3*a^2*b^3-a^2*b^2*c+7*a^2*b^2*d+a^2*b*c^2-a^2*b*c*d-13*a^2*b*d^2+8*a^2*c^3+19*a^2*c^2*d+3*a^2*c*d^2-8*a^2*d^3-3*a*b^4-4*a*b^3*c-4*a*b^3*d+7*a*b^2*c^2-23*a*b^2*c*d-21*a*b^2*d^2-7*a*b*c^3+13*a*b*c^2*d+9*a*b*c*d^2-11*a*b*d^3-6*a*c^4-10*a*c^3*d-3*a*c^2*d^2-7*a*d^4-b^4*c-4*b^4*d+24*b^3*c^2+29*b^3*c*d+2*b^3*d^2-9*b^2*c^3+12*b^2*c^2*d+10*b^2*c*d^2-11*b^2*d^3+7*b*c^4-4*b*c^3*d+b*c^2*d^2+6*b*c*d^3)]
[(4*b)*x(0)*y(0)+(-4*a)*y(0)^2+(4*a)*r(2)^2+(-2*b^2)*x(0)+(2*a*b-8*b*d)*y(0)+(-a^3-4*a^2*d-a*b^2+2*a*b*d-4*a*d^2+6*b^2*d+8*b*d^2)  ,  (-4*b*c-4*b*d)*x(0)+(4*b*c+4*b*d)*y(0)+(4*a^2*c+4*a^2*d+4*a*b*c+4*a*b*d-4*a*c^2+4*a*d^2-2*b^2*c-2*b^2*d+2*b*c^2-4*b*c*d-6*b*d^2)]
[x(0)^2+y(0)^2-r(2)^2+(2*a*d-2*b*d)  ,  (-2*a*c-2*a*d)]
[(2*b)*y*x(0)+(2*a)*y*y(0)+(-2*a*b-2*a*d+2*b*d)*y+(2*a^2*d-2*a*b*d+2*a*d^2-2*b*d^2)  ,  (-2*c-2*d)*y*x(0)+(-2*c-2*d)*y*y(0)+(2*a*c+2*a*d+c^2+2*c*d+d^2)*y+(-2*a^2*c-2*a^2*d+2*a*c^2-2*a*d^2+2*b*c*d+2*b*d^2)]
[(b-d)*y^2+(-b^2+d^2)*y  ,  0]
[(a+d)*y^2+(-a*b-a*d-b*d-d^2)*y  ,  (-c-d)*y^2+(b*c+b*d+c*d+d^2)*y]
[x^2-2*x*x(0)+y^2-2*y*y(0)+(-2*a*d+2*b*d)  ,  (2*a*c+2*a*d)]
[(8*b)*y*y(0)^2+(-4*b)*y*r(2)^2+(-8*b^2-16*b*d)*y*y(0)+(4*b^3+16*b*d^2)*y+(-8*b^2*d+8*b*d^2)*y(0)+(8*a*b^2*d-8*a*b*d^2+4*b^3*d+8*b^2*d^2-12*b*d^3)  ,  (4*c+4*d)*y*x(0)*y(0)+(-4*c-4*d)*y*y(0)^2+(4*c+4*d)*y*r(2)^2+(-6*c*d-6*d^2)*y*x(0)+(-4*a*c-4*a*d+12*b*c+12*b*d-2*c^2-2*c*d)*y*y(0)+(2*a*b*c+2*a*b*d+4*a*c*d+4*a*d^2-6*b^2*c-6*b^2*d-2*b*c^2-4*b*c*d-2*b*d^2-c^3+5*c^2*d+3*c*d^2-3*d^3)*y+(-4*a*b*c-4*a*b*d+4*b^2*c+4*b^2*d+4*b*c^2-4*b*d^2)*y(0)+(4*a^2*b*c+4*a^2*b*d+2*a^2*c^2-2*a^2*c*d-4*a^2*d^2-2*a*b^2*c-2*a*b^2*d-4*a*b*c^2+4*a*b*c*d+8*a*b*d^2-2*a*c^3+2*a*c^2*d+4*a*c*d^2-2*b^3*c-2*b^3*d+2*b^2*c^2-6*b^2*c*d-8*b^2*d^2-8*b*c^2*d+2*b*c*d^2+10*b*d^3)]
[(8*a)*y*y(0)^2+(-4*a)*y*r(2)^2+(-8*a*b+16*b*d)*y*y(0)+(4*b^3-24*b*d^2)*y+(8*b^2*d-8*b*d^2)*y(0)+(16*a^2*d^2-8*a*b^2*d+16*a*d^3-4*b^3*d-8*b^2*d^2+4*b*d^3)  ,  (-4*c-4*d)*y*x(0)*y(0)+(-4*c-4*d)*y*y(0)^2+(6*c*d+6*d^2)*y*x(0)+(20*a*c+20*a*d-28*b*c-28*b*d-14*c^2+10*c*d+24*d^2)*y*y(0)+(-4*a^2*b+4*a^2*d+4*a*b^2-6*a*b*c-14*a*b*d-16*a*c*d-12*a*d^2+14*b^2*c+18*b^2*d+18*b*c^2+16*b*c*d-6*b*d^2+c^3-5*c^2*d-7*c*d^2-d^3)*y+(-4*a^2*c-4*a^2*d+4*a*b*c+4*a*b*d+4*a*c^2-4*a*d^2-8*b^2*c-8*b^2*d+8*b*c*d+8*b*d^2)*y(0)+(2*a^3*c+2*a^3*d-18*a^2*b*c-2*a^2*b*d-18*a^2*c^2-10*a^2*c*d-8*a^2*d^2+4*a*b^2*c-12*a*b^2*d+20*a*b*c^2-20*a*b*c*d-8*a*b*d^2+16*a*c^3+8*a*c^2*d-6*a*c*d^2-14*a*d^3+4*b^3*c+4*b^3*d-6*b^2*c^2+18*b^2*c*d+8*b^2*d^2-2*b*c^3+22*b*c^2*d+4*b*c*d^2-4*b*d^3)]

Module Groebner basis: 
[(8*b^2*d^2-8*b*d^3)*y(0)+(-4*b^3*d^2+4*b*d^4), (2*a*c+2*a*d-2*b*c-2*b*d-2*c^2+2*d^2)*y*r(2)^2+(-2*a^2*b*c+2*a^2*b*d-2*a^2*c^2-2*a^2*d^2-4*a*b^2*d+8*a*b*d^2+2*a*c^3-2*a*d^3+2*b^3*c+2*b^3*d-2*b^2*c^2-8*b^2*c*d-10*b^2*d^2+2*b*c^3+2*b*c^2*d+4*b*c*d^2+8*b*d^3)*y(0)+(-a^3*b*c-a^3*b*d+3*a^2*b^2*c-a^2*b^2*d+2*a^2*b*c^2-2*a^2*b*c*d+a^2*c^3+2*a^2*c^2*d+2*a^2*c*d^2+a^2*d^3-a*b^3*c+3*a*b^3*d-2*a*b^2*c^2-6*a*b^2*d^2-2*a*b*c^3+4*a*b*c^2*d-2*a*b*d^3-a*c^4-2*a*c^3*d-2*a*c^2*d^2+a*d^4-b^4*c-b^4*d+2*b^3*c^2+2*b^3*c*d+4*b^3*d^2-b^2*c^3+6*b^2*c*d^2+b^2*d^3+b*c^4-b*c^3*d-b*c^2*d^2-3*b*c*d^3-4*b*d^4)], 
[(2*d)*x(0)+(-2*d)*y(0)+(-2*a*d+2*b*d+2*d^2), (-2*c-2*d)*x(0)+(2*a*c+2*a*d+c^2-d^2)], 
[(2*b^2*d-2*b*d^2)*y+(-2*a*b^2*d+2*a*b*d^2-2*b^2*d^2+2*b*d^3), (2*a*c+2*a*d-2*b*c-2*b*d-2*c^2+2*d^2)*y*y(0)+(-a*b*c-a*b*d-a*c*d-a*d^2+b^2*c+b^2*d+2*b*c^2+b*c*d-b*d^2)*y+(-a^2*b*c-a^2*b*d-2*a^2*c^2-a^2*c*d+a^2*d^2+a*b^2*c+a*b^2*d+a*b*c^2-2*a*b*c*d-3*a*b*d^2+2*a*c^3+a*c^2*d-a*c*d^2-b^2*c^2+b^2*c*d+2*b^2*d^2+3*b*c^2*d+b*c*d^2-2*b*d^3)], 
[(b-d)*x+(-a-d)*y+(2*a*d+2*b*d), (c+d)*y+(-2*b*c-2*b*d)], 
[(8*b^2*d^2-8*b*d^3)*r(2)^2+(-4*b^4*d^2+4*b^3*d^3-4*b^2*d^4+4*b*d^5) , (4*a*c+4*a*d-4*b*c-4*b*d-4*c^2+4*d^2)*y*y(0)*r(2)^2+(4*a^2*b*c+8*a^2*b*d-4*a^2*c^2-4*a*b^2*c-8*a*b^2*d+8*a*b*d^2+4*a*c^3-4*b^2*c^2-8*b^2*c*d-8*b^2*d^2-4*b*c^3+8*b*c*d^2+8*b*d^3)*r(2)^2+(8*b^3*c*d+8*b^3*d^2-8*b^2*c*d^2-8*b^2*d^3)*x(0)+(-4*a^3*c^2+4*a^3*d^2+4*a^2*b^2*c-4*a^2*b^2*d-6*a^2*b*c^2+18*a^2*b*d^2+2*a^2*c^3-2*a^2*d^3+8*a*b^3*d-16*a*b^2*c^2-4*a*b^2*d^2-2*a*b*c^3+14*a*b*d^3+2*a*c^4-6*a*d^4-4*b^4*c-4*b^4*d-18*b^3*c^2-12*b^3*c*d+14*b^3*d^2+8*b^2*c^3+2*b^2*c^2*d-6*b^2*d^3+8*b*c^4+4*b*c^2*d^2+4*b*c*d^3-4*b*d^4)*y(0)+(-2*a^4*c^2-4*a^4*c*d-2*a^4*d^2+2*a^3*b^2*c+2*a^3*b^2*d-5*a^3*b*c^2-12*a^3*b*c*d-9*a^3*b*d^2+a^3*c^3+7*a^3*c^2*d+2*a^3*c*d^2-2*a^3*d^3-6*a^2*b^3*c+2*a^2*b^3*d-5*a^2*b^2*c^2-10*a^2*b^2*c*d-13*a^2*b^2*d^2+9*a^2*b*c^3+14*a^2*b*c^2*d+3*a^2*b*c*d^2-8*a^2*b*d^3+5*a^2*c^4-2*a^2*c^3*d+2*a^2*c^2*d^2+2*a^2*c*d^3-a^2*d^4+2*a*b^4*c-6*a*b^4*d+11*a*b^3*c^2-20*a*b^3*c*d-13*a*b^3*d^2+9*a*b^2*c^3+19*a*b^2*c^2*d+16*a*b^2*c*d^2-5*a*b*c^4-2*a*b*c*d^3-5*a*b*d^4-4*a*c^5-a*c^4*d-2*a*c^3*d^2-2*a*c^2*d^3+2*a*c*d^4+3*a*d^5+2*b^5*c+2*b^5*d+9*b^4*c^2+14*b^4*c*d-3*b^4*d^2-3*b^3*c^3+14*b^3*c^2*d+b^3*c*d^2-6*b^3*d^3-4*b^2*c^4-5*b^2*c^3*d+b^2*c^2*d^2+9*b^2*c*d^3+9*b^2*d^4+b*c^5-4*b*c^4*d-2*b*c^2*d^3-5*b*c*d^4-2*b*d^5)].

LPP Set of Module Groebner Basis under specialization:
[ y(0) ]
[ x(0) ]
[ y ]
[ x ]
[ r(2)^2 ]

Branch 33:
constraints: c+d=0,b-d=0,d!=0,a+d!=0,a+d!=0,d!=0,
RGB from KSW:
[(2*a*d+2*d^2)*y(0)+(a^2*d-2*a*d^2-3*d^3)  ,  (-2*b*c-2*d^2)*y(0)+(-a^2*c-a^2*d-2*a*b*d+a*c^2+a*d^2+b^2*c+2*b*c*d+3*d^3)]
[(2*d)*x(0)+(-2*d)*y(0)+(-2*a*d+4*d^2)  ,  (-2*c-2*d)*x(0)+(2*a*c+2*a*d+2*b*d+c^2-3*d^2)]
[(2*a)*x(0)+(2*d)*y(0)+(-a^2+2*a*d-3*d^2)  ,  (2*b-2*d)*y(0)+(-2*a*c-2*a*d-b^2-2*b*d+3*d^2)]
[(a+d)*y+(-2*a*d-2*d^2)  ,  (-b+d)*x+(-c-d)*y+(2*b*c+2*d^2)]
[(a+d)*x  ,  (-c-d)*x+(-b+d)*y]
[(4*a*d+4*d^2)*r(2)^2+(-2*a^3*d-2*a^2*d^2-2*a*d^3-2*d^4)  ,  (-4*b*c-4*d^2)*r(2)^2+(2*b^2*d-2*b*d^2)*x(0)+(-2*a^2*c-2*a^2*d+2*a*b*c+2*a*c^2-4*b^2*c+4*b*c*d)*y(0)+(a^3*c+a^3*d+a^2*b*c+2*a^2*b*d-a^2*c^2+3*a^2*c*d+3*a^2*d^2-a*b^2*c-3*a*b^2*d-a*b*c^2-2*a*b*c*d+3*a*b*d^2-3*a*c^2*d+a*d^3+3*b^3*c-b^2*c*d+b*c^3-b*c*d^2+2*d^4)]
[(8*d)*y(0)^2+(-4*d)*r(2)^2+(-24*d^2)*y(0)+(20*d^3)  ,  (4*c+4*d)*x(0)*y(0)+(-4*c-4*d)*y(0)^2+(4*c+4*d)*r(2)^2+(-4*b*d-6*c*d-2*d^2)*x(0)+(-4*a*c-4*a*d+8*b*c-4*b*d-2*c^2+2*c*d+16*d^2)*y(0)+(4*a*b*d+6*a*c*d+2*a*d^2-4*b^2*c-2*b*c*d+6*b*d^2-c^3+3*c^2*d-c*d^2-17*d^3)]
[(8*a)*y(0)^2+(-8*a-4*d)*r(2)^2+(24*d^2)*y(0)+(2*a^3+14*a^2*d-2*a*d^2-34*d^3)  ,  (-8*b-4*c+4*d)*x(0)*y(0)+(-4*c-4*d)*y(0)^2+(4*c+4*d)*r(2)^2+(4*b^2+4*b*d+6*c*d-2*d^2)*x(0)+(-4*a*b+4*a*c+8*a*d-12*b*c+4*b*d+2*c^2+2*c*d-16*d^2)*y(0)+(-14*a^2*c-14*a^2*d+2*a*b^2-20*a*b*d+14*a*c^2-6*a*c*d-2*a*d^2+6*b^2*c+18*b*c*d-6*b*d^2-c^3-3*c^2*d-c*d^2+31*d^3)]
[x(0)^2+y(0)^2-r(2)^2+(2*a*d-2*d^2)  ,  (-2*a*c-2*a*d-2*b*d+2*d^2)]
[x^2-2*x*x(0)+y^2-2*y*y(0)+(-2*a*d+2*d^2)  ,  (2*a*c+2*a*d+2*b*d-2*d^2)]

Module Groebner basis: 
[(2*a*d+2*d^2)*y(0)+(a^2*d-2*a*d^2-3*d^3), (-2*b*c-2*d^2)*y(0)+(-a^2*c-a^2*d-2*a*b*d+a*c^2+a*d^2+b^2*c+2*b*c*d+3*d^3)], 
[(2*d)*x(0)+(-2*d)*y(0)+(-2*a*d+4*d^2), (-2*c-2*d)*x(0)+(2*a*c+2*a*d+2*b*d+c^2-3*d^2)], 
[(a+d)*y+(-2*a*d-2*d^2), (-b+d)*x+(-c-d)*y+(2*b*c+2*d^2)], 
[(a+d)*x, (-c-d)*x+(-b+d)*y], 
[(4*a*d+4*d^2)*r(2)^2+(-2*a^3*d-2*a^2*d^2-2*a*d^3-2*d^4) , (-4*b*c-4*d^2)*r(2)^2+(2*b^2*d-2*b*d^2)*x(0)+(-2*a^2*c-2*a^2*d+2*a*b*c+2*a*c^2-4*b^2*c+4*b*c*d)*y(0)+(a^3*c+a^3*d+a^2*b*c+2*a^2*b*d-a^2*c^2+3*a^2*c*d+3*a^2*d^2-a*b^2*c-3*a*b^2*d-a*b*c^2-2*a*b*c*d+3*a*b*d^2-3*a*c^2*d+a*d^3+3*b^3*c-b^2*c*d+b*c^3-b*c*d^2+2*d^4)].

LPP Set of Module Groebner Basis under specialization:
[ y(0) ]
[ x(0) ]
[ y ]
[ x ]
[ r(2)^2 ]

Branch 34:
constraints: b+d=0,a^2-c^2=0,c!=0,-d!=0,-a+c+2*d!=0,c+d!=0,2*a*c^2+2*a*d^2-2*c^3-2*c*d^2!=0,
RGB from KSW:
[(2*a*c^2+2*a*d^2-2*c^3-2*c*d^2)  ,  (2*a^2-2*c^2)*x(0)+(2*a*b+2*a*d-2*b*c-2*c*d)*y(0)+(-a^3-3*a^2*c-a*b^2-4*a*b*d+a*c^2-3*a*d^2+b^2*c+4*b*c*d+3*c^3+3*c*d^2)]
[(4*a*d+4*c*d)*y(0)  ,  (-2*a^2+2*c^2)*x(0)+(-2*a*b-2*a*d-2*b*c-2*c*d)*y(0)+(a^3+a^2*c+a*b^2-a*c^2-a*d^2+b^2*c-c^3-c*d^2)]
[(8*c^2*d+8*d^3)*y(0)  ,  (-4*a^2-4*b^2+4*c^2+4*d^2)*y(0)^2+(4*a^2-4*c^2)*r(2)^2+(4*a^2*b+8*a^2*d+4*b^3+8*b^2*d-8*b*c^2-8*b*d^2-12*c^2*d-12*d^3)*y(0)+(-a^4-2*a^2*b^2-4*a^2*b*d-4*a^2*d^2-b^4-4*b^3*d+4*b^2*c^2+4*b*c^2*d+4*b*d^3+c^4+2*c^2*d^2+d^4)]
[(2*c)*x(0)+(2*d)*y(0)+(-2*a*c-c^2+d^2)  ,  (-2*b*d-2*d^2)]
[(2*a)*x(0)+(-2*d)*y(0)+(-2*a*c-c^2+d^2)  ,  (2*b+2*d)*y(0)+(-a^2-b^2-2*b*d+c^2-d^2)]
[(2*a*d+2*c*d)*y  ,  (a^2-c^2)*x+(-a*b-a*d-b*c-c*d)*y]
[(2*a*c-2*c^2+4*d^2)*y  ,  (-a^2+b^2-2*b*d+c^2-3*d^2)*y+(2*a^2*d-2*a*b*c-2*a*c*d+2*b*c^2)]
[(8*d^3)*y  ,  (2*a^2-2*b^2-2*c^2+2*d^2)*y*y(0)+(a^2*c-c^3)*x+(-2*a*b*c-2*a*c*d+5*b^2*d+2*b*c^2-4*b*d^2+2*c^2*d-9*d^3)*y+(-2*a^3*c-5*a^2*b*d-a^2*d^2+3*a*b^2*c+4*a*b*c*d+2*a*c^3+a*c*d^2-3*b^2*c^2+b*c^2*d)]
[(16*c*d^2)*y  ,  (-a^3+3*a^2*c+a*b^2+2*a*b*d+a*c^2+a*d^2+3*b^2*c-10*b*c*d-3*c^3-13*c*d^2)*y+(2*a^3*d-6*a^2*b*c-4*a*b^2*d-4*a*b*d^2-2*a*c^2*d+4*b^2*c*d+6*b*c^3+4*b*c*d^2)]
[(8*c^2*d)*y  ,  (2*a^2-2*b^2-2*c^2+2*d^2)*y*y(0)+(3*a^2*c-3*c^3)*x+(-2*a*b*c-2*a*c*d+3*b^2*d-2*b*c^2-2*c^2*d-3*d^3)*y+(-2*a^3*c-3*a^2*b*d-3*a^2*d^2+a*b^2*c+4*a*b*c*d+2*a*c^3+3*a*c*d^2-b^2*c^2-b*c^2*d)]
[(2*d)*x+(a-c)*y+(-2*a*d-2*c*d)  ,  (-b-d)*x+(2*b*c+2*c*d)]
[(a-c)*x+(2*d)*y  ,  (-b-d)*y]
[(4*a*d+4*c*d)*r(2)^2+(4*d^3)*x(0)+(-4*c*d^2)*y(0)+(-4*a*d^3-2*c^3*d-6*c*d^3)  ,  (-2*a^2+2*c^2)*x(0)*y(0)+(-2*a*b-2*a*d+2*b*c+2*c*d)*y(0)^2+(-4*b*c-4*c*d)*r(2)^2+(2*a^2*d+2*b^2*d-2*b*d^2-2*c^2*d-4*d^3)*x(0)+(a^3+a^2*c+a*b^2-a*c^2-a*d^2+b^2*c+2*b*c*d-c^3+c*d^2)*y(0)+(-2*a^3*d+4*a^2*b*c+2*a^2*c*d+2*a*b^2*d-4*a*b*c^2+6*a*b*d^2-2*a*c^2*d+4*a*d^3-8*b^2*c*d+b*c^3-b*c*d^2+3*c^3*d+7*c*d^3)]
[(16*c*d^2)*r(2)^2+(8*d^4)*x(0)+(-8*c*d^3)*y(0)+(-8*a*d^4-4*c^3*d^2-12*c*d^4)  ,  (8*a^2-8*c^2)*x(0)*y(0)^2+(-8*a^2+8*c^2)*x(0)*r(2)^2+(8*a*b+8*a*d-8*b*c-8*c*d)*y(0)^3+(-8*a*b-8*a*d+8*b*c+8*c*d)*y(0)*r(2)^2+(-4*a^2*c-4*b^2*c+4*c^3+4*c*d^2)*y(0)^2+(4*a^2*c+4*a*b^2-4*a*d^2+12*b^2*c-8*b*c*d-4*c^3-20*c*d^2)*r(2)^2+(-8*b^3*d+4*b^2*d^2+4*b*d^3-8*d^4)*x(0)+(-4*a^3*b-16*a^2*b*c-16*a^2*c*d-4*a*b^3+20*a*b*c^2+16*a*c^2*d-4*a*d^3-8*b^3*c+16*b*c*d^2+8*c*d^3)*y(0)+(a^5-2*a^4*c+2*a^3*b^2+2*a^3*c^2+2*a^3*d^2-8*a^2*b^2*c-2*a^2*b*c*d+2*a^2*c^3+4*a^2*c*d^2+a*b^4-8*a*b^3*d+6*a*b^2*c^2-26*a*b^2*d^2+6*a*b*c^2*d-6*a*b*d^3-3*a*c^4-4*a*c^2*d^2+11*a*d^4+2*b^4*c+30*b^3*c*d-4*b^2*c^3+10*b^2*c*d^2-2*b*c^3*d-6*b*c*d^3+4*c^3*d^2+12*c*d^4)]
[(8*c^2*d)*r(2)^2+(-2*c^4*d-4*c^2*d^3-2*d^5)  ,  (-4*a^2-4*b^2+4*c^2+4*d^2)*y(0)^3+(4*a^2-4*c^2)*y(0)*r(2)^2+(4*a^2*b+8*a^2*d-8*b*c^2-12*c^2*d)*r(2)^2+(-a^4+2*a^2*b^2+12*a*b^2*c-12*a*c*d^2+3*b^4+12*b^3*d-12*b*d^3+c^4-2*c^2*d^2-3*d^4)*y(0)+(-a^4*b-2*a^4*d+6*a^3*b*c+6*a^3*c*d-2*a^2*b^3+4*a^2*b^2*d+6*a^2*b*d^2-2*a^2*d^3-6*a*b^3*c-6*a*b^2*c*d-6*a*b*c^3+6*a*b*c*d^2-6*a*c^3*d+6*a*c*d^3-b^5-6*b^4*d+2*b^3*c^2-4*b^3*d^2-6*b^2*c^2*d+4*b^2*d^3+2*b*c^4-4*b*c^2*d^2+6*b*d^4+3*c^4*d+6*c^2*d^3+3*d^5)]
[(2*a+2*c)*y(0)^2+(-2*a-2*c)*r(2)^2+(-2*d^2)*x(0)+(2*c*d)*y(0)+(2*a*d^2+c^3+3*c*d^2)  ,  (-2*b-2*d)*x(0)*y(0)+(-a^2+b^2+4*b*d+c^2+3*d^2)*x(0)+(-2*a*b-2*a*d-2*b*c-2*c*d)*y(0)+(a^3+a^2*c+a*b^2-a*c^2-a*d^2+b^2*c-2*b*c*d-c^3-3*c*d^2)]
[(8*c^2+8*d^2)*y(0)^2+(-8*c^2)*r(2)^2+(2*c^4+4*c^2*d^2+2*d^4)  ,  (4*a^2+4*b^2-4*c^2-4*d^2)*y(0)^2+(-4*a^2+4*c^2)*r(2)^2+(-4*a^2*b-8*a^2*d-4*b^3-8*b^2*d-8*b*c^2-8*b*d^2-4*c^2*d-4*d^3)*y(0)+(a^4+2*a^2*b^2+4*a^2*b*d+4*a^2*d^2+b^4+4*b^3*d+4*b^2*c^2+8*b^2*d^2+4*b*c^2*d+4*b*d^3-c^4-2*c^2*d^2-d^4)]
[(4*d)*x(0)*y(0)+(-4*c)*y(0)^2+(4*c)*r(2)^2+(2*d^2)*x(0)+(-2*c*d)*y(0)+(-2*a*d^2-c^3-3*c*d^2)  ,  (-2*a^2-4*b*d+2*c^2-4*d^2)*x(0)+(-2*a*b-2*a*d+6*b*c+6*c*d)*y(0)+(a^3+a^2*c+a*b^2+4*a*b*d-a*c^2+3*a*d^2-3*b^2*c-2*b*c*d-c^3+c*d^2)]
[x(0)^2+y(0)^2-r(2)^2+(-2*a*c+2*d^2)  ,  (-2*b*d-2*d^2)]
[(4*d)*y*x(0)+(-2*a+2*c)*y*y(0)  ,  (-2*b-2*d)*y*x(0)+(a^2-c^2)*x+(a*b+a*d-b*c-c*d)*y+(2*a^2-2*c^2)*x(0)+(2*a*b+2*a*d-2*b*c-2*c*d)*y(0)+(-a^3-a^2*c-a*b^2-2*a*b*d+a*c^2-a*d^2+b^2*c+2*b*c*d+c^3+c*d^2)]
[(2*d)*y^2  ,  (-b-d)*y^2+(b^2-d^2)*y]
[(a-c)*y^2  ,  (-a*b-a*d+b*c+c*d)*y]
[x^2-2*x*x(0)+y^2-2*y*y(0)+(2*a*c-2*d^2)  ,  (2*b*d+2*d^2)]
[(32*d^3)*y(0)*r(2)^2  ,  (16*a^2+16*b^2-16*c^2-16*d^2)*y(0)^4+(-32*a^2-16*b^2+32*c^2+16*d^2)*y(0)^2*r(2)^2+(16*a^2-16*c^2)*r(2)^4+(16*b^3+32*b^2*d-32*b*d^2-48*d^3)*y(0)*r(2)^2+(-16*a^2*d^2-16*b^2*d^2+16*c^2*d^2+16*d^4)*y(0)^2+(-20*a^2*b^2+8*a^2*d^2-64*a*b^2*c+64*a*c*d^2-4*b^4-16*b^3*d+8*b^2*c^2+16*b*d^3+4*c^2*d^2+4*d^4)*r(2)^2+(8*a^4*b-40*a^2*b*c^2+8*a^2*c^2*d+32*a^2*d^3-96*a*b^3*c-96*a*c*d^3-8*b^5-96*b^4*d-64*b^3*c^2-24*b^3*d^2+80*b^2*c^2*d+104*b^2*d^3+32*b*c^4+160*b*c^2*d^2+32*b*d^4-8*c^4*d-16*c^2*d^3-8*d^5)*y(0)+(-a^6+8*a^5*c+a^4*b^2-30*a^4*c^2+6*a^4*d^2-60*a^3*b*c*d+16*a^3*c^3-28*a^3*c*d^2+5*a^2*b^4-16*a^2*b^3*d-16*a^2*b^2*c^2-36*a^2*b^2*d^2+96*a^2*b*c^2*d-20*a^2*b*d^3+30*a^2*c^4+64*a^2*c^2*d^2-6*a^2*d^4+56*a*b^4*c+36*a*b^3*c*d+44*a*b^2*c^3+64*a*b^2*c*d^2+12*a*b*c^3*d+108*a*b*c*d^3-24*a*c^5-64*a*c^3*d^2+24*a*c*d^4+3*b^6+48*b^5*d+38*b^4*c^2+78*b^4*d^2+20*b^3*c^2*d-32*b^3*d^3-10*b^2*c^4-148*b^2*c^2*d^2-82*b^2*d^4-48*b*c^4*d-128*b*c^2*d^3-16*b*d^5+c^6+3*c^4*d^2+3*c^2*d^4+d^6)]
[(16*d)*y*y(0)^2+(-8*d)*y*r(2)^2  ,  (-8*b-8*d)*y*y(0)^2+(4*b+4*d)*y*r(2)^2+(-4*a^2+12*b^2+4*c^2-12*d^2)*y*y(0)+(4*a^2+4*b^2-4*c^2-4*d^2)*y(0)^2+(-4*a^2+4*c^2)*r(2)^2+(-2*a^2*c+2*c^3)*x+(4*a*b*c+4*a*c*d-4*b^3-6*b^2*d-4*b*c^2+4*b*d^2-4*c^2*d+6*d^3)*y+(-4*a^2*b-4*a^2*d-4*b^3-4*b^2*d+4*b*c^2+4*b*d^2+4*c^2*d+4*d^3)*y(0)+(a^4+2*a^3*c+2*a^2*b^2+8*a^2*b*d+6*a^2*d^2-4*a*b^2*c-8*a*b*c*d-2*a*c^3-4*a*c*d^2+b^4+2*b^3*d+2*b^2*c^2-2*b*d^3-c^4-2*c^2*d^2-d^4)]
[(64*c)*y*y(0)^2+(-16*a-48*c)*y*r(2)^2+(64*c*d)*y*y(0)+(16*c^3)*y  ,  (-32*b-32*d)*y*x(0)*y(0)+(48*b*d+48*d^2)*y*x(0)+(-80*b*c-80*c*d)*y*y(0)+(16*a^2-16*c^2)*x(0)*y(0)+(16*a*b+16*a*d-16*b*c-16*c*d)*y(0)^2+(9*a^3-3*a^2*c+7*a*b^2-10*a*b*d-9*a*c^2-17*a*d^2+37*b^2*c+18*b*c*d+3*c^3-19*c*d^2)*y+(16*a^2*d-16*c^2*d)*x(0)+(-8*a^3-8*a^2*c-8*a*b^2+8*a*c^2+8*a*d^2+8*b^2*c+8*c^3-8*c*d^2)*y(0)+(-18*a^3*d+14*a^2*b*c-8*a^2*c*d-4*a*b^2*d-12*a*b*d^2+18*a*c^2*d-8*a*d^3+4*b^2*c*d-14*b*c^3+12*b*c*d^2+8*c^3*d+8*c*d^3)]
[(32*c)*x*y(0)^2+(-32*c)*x*r(2)^2+(16*d)*y*r(2)^2+(32*d^2)*y*y(0)+(8*c^3)*x+(8*a*c*d^2+24*c^2*d^2+16*d^4)  ,  (-16*b-16*d)*x*x(0)*y(0)+(-8*b-8*d)*y*r(2)^2+(24*b*d+24*d^2)*x*x(0)+(-24*b*c-24*c*d)*x*y(0)+(-6*a^2+6*b^2-16*b*d+6*c^2-22*d^2)*y*y(0)+(8*a^2+8*b^2-8*c^2-8*d^2)*y(0)^2+(-8*a^2+8*c^2)*r(2)^2+(3*a^2*c+4*b*c*d-3*c^3+4*c*d^2)*x+(20*a*b*c+20*a*c*d+8*b^3-11*b^2*d-20*b*c^2-8*b*d^2-20*c^2*d+11*d^3)*y+(-8*a^2*b-8*a^2*d-8*b^3-8*b^2*d+8*b*c^2+8*b*d^2+8*c^2*d+8*d^3)*y(0)+(2*a^4+2*a^3*c+4*a^2*b^2+7*a^2*b*d+15*a^2*d^2+7*a*b^2*c-44*a*b*c*d-2*a*c^3-51*a*c*d^2+2*b^4+12*b^3*d+37*b^2*c^2+8*b^2*d^2+21*b*c^2*d-20*b*d^3-2*c^4-28*c^2*d^2-18*d^4)]

Module Groebner basis: 
[(2*a*c^2+2*a*d^2-2*c^3-2*c*d^2) , (2*a^2-2*c^2)*x(0)+(2*a*b+2*a*d-2*b*c-2*c*d)*y(0)+(-a^3-3*a^2*c-a*b^2-4*a*b*d+a*c^2-3*a*d^2+b^2*c+4*b*c*d+3*c^3+3*c*d^2)].

LPP Set of Module Groebner Basis under specialization:
[ 1 ]

Branch 35:
constraints: b+d=0,a^2-c^2=0,a*c^2+a*d^2-c^3-c*d^2=0,c!=0,-d!=0,-a+c+2*d!=0,c+d!=0,a+c!=0,d!=0,c!=0,
RGB from KSW:
[(2*a*d+2*c*d)*y(0)  ,  (-2*b*c-2*c*d)*y(0)+(-a^2*c-2*a*b*d+a*c^2-a*d^2+b^2*c+2*b*c*d)]
[(4*c^2*d+4*d^3)*y(0)  ,  (-2*a*c^2-2*a*d^2+2*c^3+2*c*d^2)*x(0)+(-2*b*c^2-2*b*d^2-2*c^2*d-2*d^3)*y(0)+(a^2*c^2+a^2*d^2+b^2*c^2+b^2*d^2-c^4-2*c^2*d^2-d^4)]
[(2*c)*x(0)+(2*d)*y(0)+(-2*a*c-c^2+d^2)  ,  (-2*b*d-2*d^2)]
[(2*a)*x(0)+(-2*d)*y(0)+(-2*a*c-c^2+d^2)  ,  (2*b+2*d)*y(0)+(-a^2-b^2-2*b*d+c^2-d^2)]
[(2*a*d+2*c*d)*y  ,  (a^2-c^2)*x+(-a*b-a*d-b*c-c*d)*y]
[(2*a*c-2*c^2+4*d^2)*y  ,  (-a^2+b^2-2*b*d+c^2-3*d^2)*y+(2*a^2*d-2*a*b*c-2*a*c*d+2*b*c^2)]
[(8*d^3)*y  ,  (-a^2*c+2*a*c^2+2*a*d^2-c^3-2*c*d^2)*x+(b^2*d-4*b*d^2-5*d^3)*y+(-a^2*b*d+a^2*d^2+a*b^2*c-a*c*d^2-b^2*c^2+b*c^2*d)]
[(16*c*d^2)*y  ,  (-a^3+a*b^2-a*b*d+4*a*c^2+a*d^2+3*b^2*c-7*b*c*d-3*c^3-13*c*d^2)*y+(2*a^3*d-3*a^2*b*c+3*a^2*c*d-a*b^2*d-3*a*b*c^2-a*b*d^2-5*a*c^2*d+b^2*c*d+6*b*c^3+b*c*d^2)]
[(8*c^2*d)*y  ,  (a^2*c+2*a*c^2+2*a*d^2-3*c^3-2*c*d^2)*x+(-b^2*d-4*b*c^2-4*c^2*d+d^3)*y+(a^2*b*d-a^2*d^2-a*b^2*c+a*c*d^2+b^2*c^2-b*c^2*d)]
[(2*d)*x+(a-c)*y+(-2*a*d-2*c*d)  ,  (-b-d)*x+(2*b*c+2*c*d)]
[(a-c)*x+(2*d)*y  ,  (-b-d)*y]
[(4*a*d+4*c*d)*r(2)^2+(4*d^3)*x(0)+(-4*c*d^2)*y(0)+(-4*a*d^3-2*c^3*d-6*c*d^3)  ,  (-4*b*c-4*c*d)*r(2)^2+(2*b^2*d-2*b*d^2-4*d^3)*x(0)+(-2*a^2*c+2*a*c^2+2*a*d^2-4*b^2*c+2*b*c*d+4*c*d^2)*y(0)+(-a^3*d+a^2*b*c+2*a^2*c*d-3*a*b^2*d-a*b*c^2+a*b*d^2-2*a*c^2*d+2*a*d^3+3*b^3*c+b*c^3+b*c*d^2+2*c^3*d+6*c*d^3)]
[(8*c*d^2)*r(2)^2+(4*d^4)*x(0)+(-4*c*d^3)*y(0)+(-4*a*d^4-2*c^3*d^2-6*c*d^4)  ,  (-4*a*c^2-4*a*d^2+4*c^3+4*c*d^2)*y(0)^2+(4*a*c^2+4*a*d^2-4*b*c*d-4*c^3-8*c*d^2)*r(2)^2+(2*b^2*d^2-2*b*d^3-4*d^4)*x(0)+(6*a*b*c^2+4*a*c^2*d-2*a*d^3+4*b^2*c*d-6*b*c^3+2*b*c*d^2-4*c^3*d)*y(0)+(-a^3*c^2-a^3*d^2+3*a^2*b*c*d+2*a^2*c^3+5*a^2*c*d^2-3*a*b^2*c^2+a*b^2*d^2-5*a*b*c^2*d+9*a*b*d^3-2*a*c^4-7*a*c^2*d^2+5*a*d^4-b^3*c*d+3*b^2*c^3-8*b^2*c*d^2+3*b*c^3*d-3*b*c*d^3+c^5+4*c^3*d^2+7*c*d^4)]
[(8*c^2*d)*r(2)^2+(-2*c^4*d-4*c^2*d^3-2*d^5)  ,  (-4*a*c^2-4*a*d^2+4*c^3+4*c*d^2)*x(0)*y(0)+(-4*b*c^2-4*c^2*d)*r(2)^2+(-4*a*c^2*d-4*a*d^3+4*c^3*d+4*c*d^3)*x(0)+(2*a^2*c^2-4*b^2*c^2-6*b^2*d^2-2*c^4+4*c^2*d^2+6*d^4)*y(0)+(a^3*c*d+a^2*b*c^2+2*a^2*b*d^2+a^2*c^2*d+3*a^2*d^3+a*b^2*c*d-a*b*c^3-a*b*c*d^2+3*b^3*c^2+4*b^3*d^2+2*b^2*d^3+b*c^4-2*b*c^2*d^2-3*b*d^4-c^4*d-2*c^2*d^3-d^5)]
[(4*a+4*c)*y(0)^2+(-4*a-4*c)*r(2)^2+(-4*d^2)*x(0)+(4*c*d)*y(0)+(4*a*d^2+2*c^3+6*c*d^2)  ,  (-4*b-4*d)*x(0)*y(0)+(2*b^2+8*b*d+6*d^2)*x(0)+(-2*a*b-2*a*d-6*b*c-6*c*d)*y(0)+(a^3-a^2*c+a*b^2-4*a*b*d+a*c^2-3*a*d^2+3*b^2*c-c^3-5*c*d^2)]
[(4*c^2+4*d^2)*y(0)^2+(-4*c^2)*r(2)^2+(c^4+2*c^2*d^2+d^4)  ,  (2*a*c^2+2*a*d^2-2*c^3-2*c*d^2)*x(0)+(-6*b*c^2-6*b*d^2-6*c^2*d-6*d^3)*y(0)+(-a^2*c^2-a^2*d^2+3*b^2*c^2+3*b^2*d^2+4*b*c^2*d+4*b*d^3+c^4+2*c^2*d^2+d^4)]
[(4*d)*x(0)*y(0)+(-4*c)*y(0)^2+(4*c)*r(2)^2+(2*d^2)*x(0)+(-2*c*d)*y(0)+(-2*a*d^2-c^3-3*c*d^2)  ,  (-4*b*d-4*d^2)*x(0)+(4*b*c+4*c*d)*y(0)+(-2*a^2*c+2*a*c^2+2*a*d^2-2*b^2*c+2*b*c*d+2*c*d^2)]
[x(0)^2+y(0)^2-r(2)^2+(-2*a*c+2*d^2)  ,  (-2*b*d-2*d^2)]
[(4*d)*y*x(0)+(-2*a+2*c)*y*y(0)  ,  (-2*b-2*d)*y*x(0)+(a^2-c^2)*x+(a*b+a*d-b*c-c*d)*y+(2*a^2*c+2*a*b*d-2*a*c^2-2*b*c*d)]
[(2*d)*y^2  ,  (-b-d)*y^2+(b^2-d^2)*y]
[(a-c)*y^2  ,  (-a*b-a*d+b*c+c*d)*y]
[x^2-2*x*x(0)+y^2-2*y*y(0)+(2*a*c-2*d^2)  ,  (2*b*d+2*d^2)]
[(16*d^3)*y(0)*r(2)^2  ,  (8*a*c^2+8*a*d^2-8*c^3-8*c*d^2)*x(0)*y(0)^2+(-8*a*c^2-8*a*d^2+8*c^3+8*c*d^2)*x(0)*r(2)^2+(-8*b*d^2-8*d^3)*y(0)*r(2)^2+(8*a*c^3+8*a*c*d^2-8*c^4-8*c^2*d^2)*y(0)^2+(-8*a*c^3-8*a*c*d^2+20*b^2*c^2+4*b^2*d^2+8*c^4-12*c^2*d^2-4*d^4)*r(2)^2+(-6*a*c^2*d^2-6*a*d^4+6*c^3*d^2+6*c*d^4)*x(0)+(-4*a^2*b*c^2-20*a*b*c^3-14*a*c^3*d+6*a*c*d^3+16*b^3*c^2+20*b^3*d^2-24*b^2*c^2*d-4*b^2*d^3+24*b*c^4-16*b*c^2*d^2-20*b*d^4+14*c^4*d+18*c^2*d^3+4*d^5)*y(0)+(a^4*c^2+a^4*d^2-2*a^3*b*c*d-2*a^3*c^3-2*a^3*c*d^2-2*a^2*b^2*d^2-12*a^2*b*c^2*d-6*a^2*b*d^3+3*a^2*c^4-4*a^2*c^2*d^2+3*a^2*d^4-2*a*b^3*c*d+12*a*b^2*c^3-8*a*b^2*c*d^2+28*a*b*c^3*d-12*a*b*c*d^3+a*c^5+18*a*c^3*d^2-3*a*c*d^4-13*b^4*c^2-15*b^4*d^2+6*b^3*c^2*d-8*b^3*d^3-17*b^2*c^4+30*b^2*c^2*d^2+17*b^2*d^4-14*b*c^4*d+14*b*c^2*d^3+8*b*d^5-3*c^6-8*c^4*d^2-7*c^2*d^4-2*d^6)]
[(8*d)*y*y(0)^2+(-4*d)*y*r(2)^2  ,  (-4*b-4*d)*y*y(0)^2+(2*b+2*d)*y*r(2)^2+(4*b^2-4*d^2)*y*y(0)+(a^2*c-2*a*c^2-2*a*d^2+c^3+2*c*d^2)*x+(-2*b^3+b^2*d+2*b*d^2-d^3)*y+(2*a*c^2+2*a*d^2-2*c^3-2*c*d^2)*x(0)+(2*a*b*c+2*a*c*d+2*b^2*d-2*b*c^2-2*c^2*d-2*d^3)*y(0)+(-3*a^2*c^2-a^2*d^2-a*b^2*c-4*a*b*c*d+2*a*c^3-a*c*d^2-b^3*d+b^2*c^2-b^2*d^2+4*b*c^2*d+b*d^3+c^4+2*c^2*d^2+d^4)]
[(64*c)*y*y(0)^2+(-16*a-48*c)*y*r(2)^2+(64*c*d)*y*y(0)+(16*c^3)*y  ,  (-32*b-32*d)*y*x(0)*y(0)+(48*b*d+48*d^2)*y*x(0)+(-80*b*c-80*c*d)*y*y(0)+(9*a^3+7*a*b^2-7*a*b*d-12*a*c^2-17*a*d^2+37*b^2*c+15*b*c*d+3*c^3-19*c*d^2)*y+(16*a^2*c-16*a*c^2-16*a*d^2+16*b^2*c)*y(0)+(-10*a^3*d+19*a^2*b*c+21*a^2*c*d+17*a*b^2*d-5*a*b*c^2+41*a*b*d^2-11*a*c^2*d+8*a*d^3-8*b^3*c-25*b^2*c*d-14*b*c^3-33*b*c*d^2)]
[(32*c)*x*y(0)^2+(-32*c)*x*r(2)^2+(16*d)*y*r(2)^2+(32*d^2)*y*y(0)+(8*c^3)*x+(8*a*c*d^2+24*c^2*d^2+16*d^4)  ,  (-16*b-16*d)*x*x(0)*y(0)+(-8*b-8*d)*y*r(2)^2+(24*b*d+24*d^2)*x*x(0)+(-24*b*c-24*c*d)*x*y(0)+(-16*b*d-16*d^2)*y*y(0)+(9*a^2*c-6*a*c^2-6*a*d^2+4*b*c*d-3*c^3+10*c*d^2)*x+(14*a*b*c+14*a*c*d+8*b^3+b^2*d-14*b*c^2-8*b*d^2-14*c^2*d-d^3)*y+(8*a*c^2+8*a*d^2-8*c^3-8*c*d^2)*x(0)+(8*a*b*c+8*a*c*d+8*b^2*d-8*b*c^2-8*c^2*d-8*d^3)*y(0)+(-5*a^2*b*d-12*a^2*c^2+a^2*d^2+9*a*b^2*c-48*a*b*c*d+8*a*c^3-49*a*c*d^2+4*b^3*d+39*b^2*c^2+4*b^2*d^2+37*b*c^2*d-12*b*d^3+4*c^4-16*c^2*d^2-12*d^4)]

Module Groebner basis: 
[(2*a*d+2*c*d)*y(0), (-2*b*c-2*c*d)*y(0)+(-a^2*c-2*a*b*d+a*c^2-a*d^2+b^2*c+2*b*c*d)], 
[(2*c)*x(0)+(2*d)*y(0)+(-2*a*c-c^2+d^2), (-2*b*d-2*d^2)], 
[(8*d^3)*y, (-a^2*c+2*a*c^2+2*a*d^2-c^3-2*c*d^2)*x+(b^2*d-4*b*d^2-5*d^3)*y+(-a^2*b*d+a^2*d^2+a*b^2*c-a*c*d^2-b^2*c^2+b*c^2*d)], 
[(2*d)*x+(a-c)*y+(-2*a*d-2*c*d), (-b-d)*x+(2*b*c+2*c*d)], 
[(8*c*d^2)*r(2)^2+(4*d^4)*x(0)+(-4*c*d^3)*y(0)+(-4*a*d^4-2*c^3*d^2-6*c*d^4) , (-4*a*c^2-4*a*d^2+4*c^3+4*c*d^2)*y(0)^2+(4*a*c^2+4*a*d^2-4*b*c*d-4*c^3-8*c*d^2)*r(2)^2+(2*b^2*d^2-2*b*d^3-4*d^4)*x(0)+(6*a*b*c^2+4*a*c^2*d-2*a*d^3+4*b^2*c*d-6*b*c^3+2*b*c*d^2-4*c^3*d)*y(0)+(-a^3*c^2-a^3*d^2+3*a^2*b*c*d+2*a^2*c^3+5*a^2*c*d^2-3*a*b^2*c^2+a*b^2*d^2-5*a*b*c^2*d+9*a*b*d^3-2*a*c^4-7*a*c^2*d^2+5*a*d^4-b^3*c*d+3*b^2*c^3-8*b^2*c*d^2+3*b*c^3*d-3*b*c*d^3+c^5+4*c^3*d^2+7*c*d^4)].

LPP Set of Module Groebner Basis under specialization:
[ y(0) ]
[ x(0) ]
[ y ]
[ x ]
[ r(2)^2 ]

Branch 36:
constraints: b+d=0,a+c=0,c^2+d^2=0,c!=0,d!=0,2*c+2*d!=0,c+d!=0,d!=0,
RGB from KSW:
[(2*c)*x(0)+(2*d)*y(0)  ,  (-2*a*c-2*b*d-c^2-d^2)]
[(2*d^2)*x(0)+(-2*c*d)*y(0)  ,  (-2*c^2-2*d^2)*x(0)+(2*a*c^2+2*b*c*d+c^3+c*d^2)]
[(8*d^2)*y  ,  (-a^2+2*a*c+b^2-2*b*d-c^2-7*d^2)*y+(2*a^2*d-2*a*b*c-2*a*c*d+2*b*c^2)]
[(4*c*d)*y  ,  (a*c+b*d-c^2-d^2)*x+(-a*d-b*c-2*c*d)*y+(2*a*d^2-2*b*c*d)]
[(2*d)*x+(-2*c)*y  ,  (-b-d)*x+(a+c)*y+(-2*a*d+2*b*c)]
[(2*c)*x+(-2*d)*y  ,  (-a-c)*x+(b+d)*y]
[(4*d^2)*r(2)^2  ,  (4*c^2+4*d^2)*y(0)^2+(-4*c^2-4*d^2)*r(2)^2+(-8*b*c^2-8*b*d^2-4*c^2*d-4*d^3)*y(0)+(4*b^2*c^2+4*b^2*d^2+4*b*c^2*d+4*b*d^3+c^4+2*c^2*d^2+d^4)]
[(2*c*d)*r(2)^2  ,  (2*c^2+2*d^2)*x(0)*y(0)+(-2*b*d^2+c^2*d-d^3)*x(0)+(-2*a*c^2-c^3+c*d^2)*y(0)+(-a^2*c*d-b^2*c*d-c^3*d-c*d^3)]
[(2*d)*x(0)*y(0)+(-2*c)*y(0)^2+(2*c)*r(2)^2  ,  (-2*b*d+c^2-d^2)*x(0)+(2*b*c+2*c*d)*y(0)+(-a^2*c-b^2*c-c^3-c*d^2)]
[x(0)^2+y(0)^2-r(2)^2  ,  (-2*a*c-2*b*d)]
[(2*d)*y*x(0)+(2*c)*y*y(0)  ,  (-b-d)*y*x(0)+(-a-c)*y*y(0)+(a*b-c*d)*y+(a^2*c+a*b*d-a*c^2-b*c*d)]
[(2*d)*y^2  ,  (-b-d)*y^2+(b^2-d^2)*y]
[(2*c)*y^2  ,  (-a-c)*y^2+(a*b+a*d-b*c-c*d)*y]
[x^2-2*x*x(0)+y^2-2*y*y(0)  ,  (2*a*c+2*b*d)]
[(8*d)*y*y(0)^2+(-4*d)*y*r(2)^2  ,  (-4*b-4*d)*y*y(0)^2+(2*b+2*d)*y*r(2)^2+(4*b^2-4*d^2)*y*y(0)+(a*b*c-a*c*d-2*b^3+b^2*d-b*c^2+c^2*d+d^3)*y+(2*a*b*c+2*b^2*d-2*b*c^2-2*b*d^2)*y(0)+(-a^2*c^2-a*b^2*c-2*a*b*c*d+a*c^3-b^3*d+b^2*c^2+2*b*c^2*d+b*d^3)]
[(8*c)*y*y(0)^2+(-4*c)*y*r(2)^2  ,  (-4*a-4*c)*y*y(0)^2+(2*a+2*c)*y*r(2)^2+(4*a*b-4*c*d)*y*y(0)+(-2*a*b^2+a*b*d-a*c^2-b^2*c+b*c*d+c^3+c*d^2)*y+(2*a^2*c-2*a*c^2+2*b^2*c-2*b*c*d)*y(0)+(-a^3*d+4*a^2*b*c+2*a^2*c*d+4*a*b^2*d-3*a*b*c^2+3*a*b*d^2-a*c^2*d-b^3*c-4*b^2*c*d-b*c^3-2*b*c*d^2)]

Module Groebner basis: 
[(2*d^2)*x(0)+(-2*c*d)*y(0), (-2*c^2-2*d^2)*x(0)+(2*a*c^2+2*b*c*d+c^3+c*d^2)], 
[(8*d^2)*y, (-a^2+2*a*c+b^2-2*b*d-c^2-7*d^2)*y+(2*a^2*d-2*a*b*c-2*a*c*d+2*b*c^2)], 
[(2*d)*x+(-2*c)*y, (-b-d)*x+(a+c)*y+(-2*a*d+2*b*c)], 
[(4*d^2)*r(2)^2 , (4*c^2+4*d^2)*y(0)^2+(-4*c^2-4*d^2)*r(2)^2+(-8*b*c^2-8*b*d^2-4*c^2*d-4*d^3)*y(0)+(4*b^2*c^2+4*b^2*d^2+4*b*c^2*d+4*b*d^3+c^4+2*c^2*d^2+d^4)].

LPP Set of Module Groebner Basis under specialization:
[ x(0) ]
[ y ]
[ x ]
[ r(2)^2 ]

Branch 37:
constraints: b-d=0,c!=0,d!=0,-a+c!=0,c+d!=0,2*d!=0,a-c!=0,d!=0,c!=0,
RGB from KSW:
[(2*a*d-2*c*d)*y(0)+(-a^2*c+a*c^2-3*a*d^2+3*c*d^2)  ,  (-2*b*c+2*c*d)*y(0)+(-2*a*b*d+2*a*d^2+b^2*c+2*b*c*d-3*c*d^2)]
[(2*c)*x(0)+(2*d)*y(0)+(-2*a*c-c^2-3*d^2)  ,  (-2*b*d+2*d^2)]
[(2*a)*x(0)+(2*d)*y(0)+(-a^2-2*a*c-3*d^2)  ,  (2*b-2*d)*y(0)+(-b^2-2*b*d+3*d^2)]
[(a-c)*y+(-2*a*d+2*c*d)  ,  (-b+d)*x+(2*b*c-2*c*d)]
[(a-c)*x  ,  (-b+d)*y]
[(4*a*d-4*c*d)*r(2)^2+(-2*a^2*c+2*a*c^2)*y(0)+(-a^3*d+4*a^2*c*d-4*a*c^2*d-a*d^3+c^3*d+c*d^3)  ,  (-4*b*c+4*c*d)*r(2)^2+(2*b^2*d-2*b*d^2)*x(0)+(-4*b^2*c+4*b*c*d)*y(0)+(a^2*b*c-a^2*c*d-3*a*b^2*d-a*b*c^2+3*a*b*d^2+a*c^2*d+3*b^3*c-b^2*c*d+b*c^3-b*c*d^2-c^3*d-c*d^3)]
[(4*a-4*c)*y(0)^2+(-4*a+4*c)*r(2)^2+(a^3-7*a^2*c+7*a*c^2-8*a*d^2-c^3+8*c*d^2)  ,  (-4*b+4*d)*x(0)*y(0)+(2*b^2-2*d^2)*x(0)+(-2*a*b+2*a*d-2*b*c+2*c*d)*y(0)+(a*b^2-8*a*b*d+7*a*d^2+b^2*c+8*b*c*d-9*c*d^2)]
[(4*c^2+4*d^2)*y(0)^2+(-4*c^2)*r(2)^2+(-12*c^2*d-12*d^3)*y(0)+(c^4+10*c^2*d^2+9*d^4)  ,  (-8*b*c^2-8*b*d^2+8*c^2*d+8*d^3)*y(0)+(4*b^2*c^2+4*b^2*d^2+4*b*c^2*d+4*b*d^3-8*c^2*d^2-8*d^4)]
[(4*d)*x(0)*y(0)+(-4*c)*y(0)^2+(4*c)*r(2)^2+(-6*d^2)*x(0)+(6*c*d)*y(0)+(-2*a^2*c+2*a*c^2-c^3-c*d^2)  ,  (-4*b*d+4*d^2)*x(0)+(4*b*c-4*c*d)*y(0)+(-2*b^2*c+2*b*c*d)]
[x(0)^2+y(0)^2-r(2)^2+(-2*a*c-2*d^2)  ,  (-2*b*d+2*d^2)]
[x^2-2*x*x(0)+y^2-2*y*y(0)+(2*a*c+2*d^2)  ,  (2*b*d-2*d^2)]

Module Groebner basis: 
[(2*a*d-2*c*d)*y(0)+(-a^2*c+a*c^2-3*a*d^2+3*c*d^2), (-2*b*c+2*c*d)*y(0)+(-2*a*b*d+2*a*d^2+b^2*c+2*b*c*d-3*c*d^2)], 
[(2*c)*x(0)+(2*d)*y(0)+(-2*a*c-c^2-3*d^2), (-2*b*d+2*d^2)], 
[(a-c)*y+(-2*a*d+2*c*d), (-b+d)*x+(2*b*c-2*c*d)], 
[(a-c)*x, (-b+d)*y], 
[(4*a*d-4*c*d)*r(2)^2+(-2*a^2*c+2*a*c^2)*y(0)+(-a^3*d+4*a^2*c*d-4*a*c^2*d-a*d^3+c^3*d+c*d^3) , (-4*b*c+4*c*d)*r(2)^2+(2*b^2*d-2*b*d^2)*x(0)+(-4*b^2*c+4*b*c*d)*y(0)+(a^2*b*c-a^2*c*d-3*a*b^2*d-a*b*c^2+3*a*b*d^2+a*c^2*d+3*b^3*c-b^2*c*d+b*c^3-b*c*d^2-c^3*d-c*d^3)].

LPP Set of Module Groebner Basis under specialization:
[ y(0) ]
[ x(0) ]
[ y ]
[ x ]
[ r(2)^2 ]

Branch 38:
constraints: c-d=0,a^3-a^2*d-a*b^2+b^2*d=0,d!=0,b!=0,-a-b+2*d!=0,2*d!=0,b+d!=0,b-d!=0,2*a^2*b^2*d-2*a^2*b*d^2+2*a*b^3*d-4*a*b^2*d^2+2*a*b*d^3-2*b^3*d^2+2*b^2*d^3!=0,
RGB from KSW:
[(2*a^2*b^2*d-2*a^2*b*d^2+2*a*b^3*d-4*a*b^2*d^2+2*a*b*d^3-2*b^3*d^2+2*b^2*d^3)  ,  (-2*a^3*d+2*a^2*b*c-2*a^2*b*d+2*a^2*d^2+2*a*b^2*c-2*b^2*c^2)*y(0)+(a^4*c+a^3*b*c+2*a^3*b*d-a^3*c^2-a^3*c*d+a^3*d^2-a^2*b^2*c-2*a^2*b*c^2-2*a^2*b*c*d+a^2*b*d^2+a^2*c^2*d-a^2*d^3-a*b^3*c-2*a*b^3*d-3*a*b^2*c*d+4*a*b^2*d^2+a*b*c^3+a*b*c*d^2-2*a*b*d^3+b^3*c^2+2*b^3*d^2+2*b^2*c^2*d-2*b^2*d^3)]
[(2*a*d-2*b*d)*y(0)+(-a^2*d-2*a*b*d+b^2*d+2*b*d^2)  ,  (-2*b*c+2*b*d)*y(0)+(-a^2*c+a^2*d+a*c^2-a*d^2+b^2*c-b^2*d+2*b*c*d-2*b*d^2)]
[(2*a^2*b-2*b^3)*y(0)+(-a^2*b^2-3*a^2*b*d-2*a*b^2*d+2*a*b*d^2+b^4+b^3*d+2*b^2*d^2)  ,  (2*a^3-2*a^2*d-2*a*b^2+2*b^2*c)*x(0)+(-2*b^2*c+2*b^2*d)*y(0)+(-a^4-2*a^3*c+a^3*d+a^2*b^2-a^2*b*c+a^2*b*d+2*a^2*c*d+a*b^2*d+a*b*c^2-a*b*d^2+b^3*c-b^3*d-b^2*c^2+2*b^2*c*d-3*b^2*d^2)]
[(8*b^3*d-8*b^2*d^2)*y(0)+(-4*b^4*d+4*b^2*d^3)  ,  (2*a*c-2*a*d+2*b*c-2*b*d-2*c^2+2*d^2)*y*r(2)^2+(4*a^3*d-2*a^2*b*c+2*a^2*b*d-2*a^2*c^2-2*a^2*d^2-4*a*b^2*d+2*a*c^3-2*a*d^3+6*b^3*c-6*b^3*d-2*b^2*c^2+6*b^2*d^2-2*b*c^3+2*b*c^2*d)*y(0)+(-2*a^4*c-a^3*b*c-3*a^3*b*d+2*a^3*c^2-2*a^3*d^2+3*a^2*b^2*c-a^2*b^2*d+2*a^2*b*c^2+2*a^2*b*c*d-a^2*c^3+2*a^2*c^2*d+a^2*d^3-a*b^3*c+5*a*b^3*d-2*a*b^2*c^2+2*a*b^2*d^2-2*a*b*c^3+2*a*b*d^3+a*c^4-2*a*c^3*d+a*d^4-3*b^4*c+3*b^4*d+2*b^3*c^2-6*b^3*c*d+b^2*c^3-3*b^2*d^3+b*c^4+b*c^3*d-b*c^2*d^2-b*c*d^3)]
[(2*d)*x(0)+(2*d)*y(0)+(-2*a*d-2*b*d-2*d^2)  ,  (2*c-2*d)*x(0)+(-2*a*c+2*a*d-c^2+d^2)]
[(2*a)*x(0)+(2*b)*y(0)+(-a^2-2*a*d-b^2-2*b*d)  ,  (-2*a*c+2*a*d)]
[(a^2-2*a*d-b^2+2*b*d)*y+(-2*a^2*d+2*a*b*d+2*a*d^2-2*b*d^2)  ,  (-2*a*c+2*a*d+c^2-d^2)*y+(2*a*b*c-2*a*b*d+2*a*c*d-2*a*d^2-2*b*c^2+2*b*d^2)]
[(2*b^2*d-2*b*d^2)*y+(2*a*b^2*d-2*a*b*d^2-2*b^2*d^2+2*b*d^3)  ,  (2*a*c-2*a*d+2*b*c-2*b*d-2*c^2+2*d^2)*y*y(0)+(-a*b*c+a*b*d-a*c*d+a*d^2-b^2*c+b^2*d+2*b*c^2-b*c*d-b*d^2)*y+(a^2*b*c-a^2*b*d-2*a^2*c^2+a^2*c*d+a^2*d^2+a*b^2*c-a*b^2*d-a*b*c^2-2*a*b*c*d+3*a*b*d^2+2*a*c^3-a*c^2*d-a*c*d^2-b^2*c^2-b^2*c*d+2*b^2*d^2+3*b*c^2*d-b*c*d^2-2*b*d^3)]
[(2*a*d^2-2*b*d^2)*y+(-2*a^2*b*d+2*a^2*d^2-2*a*b^2*d-2*a*d^3+2*b^2*d^2+2*b*d^3)  ,  (-2*a*c+2*a*d-2*b*c+2*b*d+2*c^2-2*d^2)*y*y(0)+(a*c^2+2*a*c*d-3*a*d^2+2*b^2*c-2*b^2*d-b*c^2-2*b*c*d+3*b*d^2-c^3-c^2*d+c*d^2+d^3)*y+(-2*a^2*b*c+2*a^2*b*d+2*a^2*c^2-2*a^2*d^2+2*a*b*c*d-2*a*b*d^2-2*a*c^3+2*a*d^3+2*b^2*c*d-2*b^2*d^2+2*b*c^3-2*b*c^2*d+2*b*c*d^2-2*b*d^3)]
[(2*a*b*d-2*b*d^2)*y+(-2*a*b^2*d-2*a*b*d^2+2*b^2*d^2+2*b*d^3)  ,  (a*b*c-a*b*d+a*c^2-a*c*d+b^2*c-b^2*d-b*c^2-3*b*c*d+4*b*d^2-c^3+c^2*d+c*d^2-d^3)*y+(-a^2*b*c+a^2*b*d+a^2*c*d-a^2*d^2-a*b^2*c+a*b^2*d-a*b*c^2+a*b*d^2-a*c^2*d+a*c*d^2+b^2*c^2+b^2*c*d-2*b^2*d^2+2*b*c^3-b*c^2*d+b*c*d^2-2*b*d^3)]
[(b-d)*x+(-a+d)*y+(2*a*d-2*b*d)  ,  (c-d)*y+(-2*b*c+2*b*d)]
[(a-d)*x+(-b+d)*y  ,  (-c+d)*x]
[(4*a*d-4*b*d)*r(2)^2+(-8*b^2*d+8*b*d^2)*y(0)+(-2*a^2*b*d+2*a^2*d^2-4*a*b^2*d+4*a*b*d^2-4*a*d^3+6*b^3*d+2*b^2*d^2-4*b*d^3)  ,  (-4*b*c+4*b*d)*r(2)^2+(-2*b^2*c+2*b^2*d+2*b*c*d-2*b*d^2)*x(0)+(-2*a^2*c+2*a^2*d-2*a*b*c+2*a*b*d+2*a*c^2-2*a*d^2-6*b^2*c+6*b^2*d+6*b*c*d-6*b*d^2)*y(0)+(-a^3*c-a^3*d+a^2*c^2+4*a^2*c*d-3*a^2*d^2+3*a*b^2*c-a*b^2*d-4*a*c^2*d+4*a*d^3+4*b^3*c-4*b^3*d+b^2*c^2-3*b^2*d^2+b*c^3-b*c^2*d-3*b*c*d^2+3*b*d^3)]
[(16*b^3*d-16*b^2*d^2)*r(2)^2+(-8*b^5*d+8*b^4*d^2-8*b^3*d^3+8*b^2*d^4)  ,  (8*a*c-8*a*d+8*b*c-8*b*d-8*c^2+8*d^2)*y*y(0)*r(2)^2+(4*a^3*d-12*a^2*b*c+12*a^2*b*d-8*a^2*c^2+4*a^2*d^2-4*a*b^2*c+8*a*c^3-8*a*d^3+16*b^3*c-16*b^3*d-12*b^2*c^2+16*b^2*d^2+8*b*c^3-8*b*c*d^2)*r(2)^2+(8*b^4*c-8*b^4*d-4*b^2*c*d^2+4*b^2*d^3-4*b*c*d^3+4*b*d^4)*x(0)+(-2*a^4*c-10*a^3*b*d+10*a^3*c^2-8*a^3*d^2+6*a^2*b^2*c-4*a^2*b^2*d-16*a^2*b*c^2+26*a^2*b*d^2-4*a^2*c^3+4*a^2*d^3+10*a*b^3*d+20*a*b^2*c^2-22*a*b^2*d^2+2*a*b*c^3-2*a*b*d^3-4*a*c^4+4*a*d^4-4*b^4*c+4*b^4*d-38*b^3*c^2+24*b^3*c*d+4*b^3*d^2-4*b^2*c^3+4*b^2*c^2*d-2*b^2*c*d^2+2*b^2*d^3+14*b*c^4-4*b*c^3*d+8*b*c^2*d^2-8*b*c*d^3-10*b*d^4)*y(0)+(-a^5*d-4*a^4*c^2+17*a^4*c*d-4*a^4*d^2+2*a^3*b^2*c+2*a^3*b^2*d+8*a^3*b*c^2-21*a^3*b*c*d+27*a^3*b*d^2+3*a^3*c^3-21*a^3*c^2*d+a^3*c*d^2+5*a^3*d^3-2*a^2*b^3*c+2*a^2*b^3*d-5*a^2*b^2*c^2+15*a^2*b^2*c*d-22*a^2*b^2*d^2-3*a^2*b*c^3+28*a^2*b*c^2*d-22*a^2*b*c*d^2-17*a^2*b*d^3+8*a^2*c^4-6*a^2*c^3*d+6*a^2*c^2*d^2+2*a^2*c*d^3-6*a^2*d^4-6*a*b^4*c+3*a*b^4*d-8*a*b^3*c^2-21*a*b^3*c*d+15*a*b^3*d^2+12*a*b^2*c^3-20*a*b^2*c^2*d+16*a*b^2*c*d^2+4*a*b^2*d^3-2*a*b*c^4-3*a*b*c^3*d+a*b*c^2*d^2+3*a*b*c*d^3+a*b*d^4-7*a*c^5+10*a*c^4*d-4*a*c^3*d^2-2*a*c^2*d^3+3*a*c*d^4-2*b^5*c+2*b^5*d+17*b^4*c^2-6*b^4*c*d-8*b^4*d^2-4*b^3*c^3+35*b^3*c^2*d-21*b^3*c*d^2+4*b^3*d^3-5*b^2*c^4-2*b^2*c^3*d-2*b^2*c^2*d^2+8*b^2*c*d^3-3*b^2*d^4-2*b*c^5-7*b*c^4*d+8*b*c^3*d^2-2*b*c^2*d^3-2*b*c*d^4+5*b*d^5)]
[(8*d)*y(0)^2+(-4*d)*r(2)^2+(-16*b*d-8*d^2)*y(0)+(8*b^2*d+8*b*d^2+4*d^3)  ,  (4*c-4*d)*x(0)*y(0)+(4*c-4*d)*y(0)^2+(-4*c+4*d)*r(2)^2+(-4*b*c+4*b*d-2*c*d+2*d^2)*x(0)+(-4*a*c+4*a*d-8*b*c+8*b*d-2*c^2-2*c*d+4*d^2)*y(0)+(4*a*b*c-4*a*b*d+2*a*c*d-2*a*d^2+4*b^2*c-4*b^2*d+2*b*c^2+2*b*c*d-4*b*d^2+c^3+c^2*d+c*d^2-3*d^3)]
[(4*a^2+4*b^2)*y(0)^2+(-4*a^2)*r(2)^2+(-8*b^3-16*b^2*d)*y(0)+(a^2*b^2-14*a^2*b*d+a^2*d^2-12*a*b^2*d+12*a*b*d^2+3*b^4+10*b^3*d+19*b^2*d^2)  ,  (4*a^3-4*a^2*d-4*a*b^2+4*b^2*c)*x(0)+(-8*a*b*c+8*a*b*d-12*b^2*c+12*b^2*d)*y(0)+(-a^4-8*a^3*c+2*a^3*d+a^2*b^2-6*a^2*b*c+6*a^2*b*d+4*a^2*c^2+4*a^2*c*d-a^2*d^2+4*a*b^2*c+2*a*b^2*d+6*a*b*c^2+8*a*b*c*d-14*a*b*d^2+6*b^3*c-6*b^3*d-2*b^2*c^2+12*b^2*c*d-17*b^2*d^2)]
[(8*b^3)*y(0)^2+(-4*a^2*b)*r(2)^2+(-8*b^4-16*b^2*d^2)*y(0)+(2*a^2*b^3+2*a^2*b*d^2+2*b^5+6*b^3*d^2+8*b^2*d^3)  ,  (2*a*c-2*a*d+2*b*c-2*b*d-2*c^2+2*d^2)*y*r(2)^2+(-4*a^3+4*a^2*d+4*a*b^2-4*b^2*d)*x(0)*y(0)+(-4*a*b*c+4*a*b*d+4*b^2*c-4*b^2*d)*y(0)^2+(4*a*b*c-4*a*b*d)*r(2)^2+(2*a^3*b-2*a^2*b*d-2*a*b^3+2*b^3*d-4*b^2*c*d+4*b^2*d^2)*x(0)+(2*a^4+4*a^3*c+2*a^3*d-2*a^2*b^2-2*a^2*c^2-6*a^2*d^2-6*a*b^2*d-6*a*b*c^2+6*a*b*d^2+2*a*c^3-2*a*d^3+4*b^3*c-4*b^3*d+8*b^2*c^2-16*b^2*c*d+16*b^2*d^2-2*b*c^3+2*b*c^2*d)*y(0)+(-2*a^4*c-5*a^3*b*c-a^3*b*d+2*a^3*c*d-2*a^3*d^2+3*a^2*b^2*c-a^2*b^2*d+9*a^2*b*c^2-8*a^2*b*c*d+5*a^2*b*d^2+a^2*c^3-2*a^2*c*d^2+3*a^2*d^3-a*b^3*c+7*a*b^3*d+10*a*b^2*c*d-10*a*b^2*d^2-8*a*b*c^3+12*a*b*c^2*d-2*a*b*c*d^2-2*a*b*d^3+a*c^4-2*a*c^3*d+a*d^4-3*b^4*c+3*b^4*d-3*b^3*c^2-3*b^3*d^2+b^2*c^3-8*b^2*c^2*d+12*b^2*c*d^2-7*b^2*d^3+b*c^4+b*c^3*d-b*c^2*d^2-b*c*d^3)]
[(8*a*b^2)*y(0)^2+(-4*a*b^2)*r(2)^2+(-8*a*b^3-16*b^2*d^2)*y(0)+(-8*a^2*b*d^2+4*a*b^4-8*a*b^2*d^2+8*a*b*d^3+8*b^3*d^2+16*b^2*d^3)  ,  (6*a*c-6*a*d+6*b*c-6*b*d-6*c^2+6*d^2)*y*r(2)^2+(4*a^3-4*a^2*d-4*a*b^2+4*a*b*c-4*a*b*d+4*b^2*c)*y(0)^2+(-4*a^3+4*a^2*d+4*a*b^2-4*a*b*c+4*a*b*d-4*b^2*c)*r(2)^2+(-2*b^3*c+2*b^3*d+2*b^2*c*d-2*b^2*d^2)*x(0)+(-4*a^3*b-4*a^3*d+2*a^2*b*c+2*a^2*b*d-6*a^2*c^2+10*a^2*d^2+4*a*b^3+2*a*b^2*c+2*a*b^2*d+6*a*c^3-6*a*d^3-6*b^3*c+2*b^3*d-20*b^2*c^2+2*b^2*c*d+14*b^2*d^2-6*b*c^3+6*b*c^2*d)*y(0)+(a^5-2*a^4*c-a^4*d+2*a^3*b^2+2*a^3*b*c+2*a^3*b*d+2*a^3*c^2-4*a^3*c*d+2*a^3*d^2-3*a^2*b^2*c+3*a^2*b^2*d-6*a^2*b*c^2+2*a^2*b*c*d-3*a^2*c^3+10*a^2*c^2*d-5*a^2*d^3-3*a*b^4-2*a*b^3*c-2*a*b^3*d+2*a*b^2*c^2-16*a*b^2*c*d+14*a*b^2*d^2+2*a*b*c^3-4*a*b*c^2*d+4*a*b*c*d^2-2*a*b*d^3+3*a*c^4-6*a*c^3*d+3*a*d^4+3*b^4*c+14*b^3*c^2-2*b^3*c*d-8*b^3*d^2+4*b^2*c^3+13*b^2*c^2*d-3*b^2*c*d^2-16*b^2*d^3+3*b*c^4+3*b*c^3*d-3*b*c^2*d^2-3*b*c*d^3)]
[(4*b)*x(0)*y(0)+(-4*a)*y(0)^2+(4*a)*r(2)^2+(-2*b^2)*x(0)+(2*a*b+8*b*d)*y(0)+(3*a^2*d-2*a*b^2+2*a*b*d-4*a*d^2-5*b^2*d-8*b*d^2)  ,  (4*b*c-4*b*d)*x(0)+(4*b*c-4*b*d)*y(0)+(-a^3+4*a^2*c-3*a^2*d+a*b^2-4*a*b*c+4*a*b*d-4*a*c^2+4*a*d^2-2*b^2*c+b^2*d-2*b*c^2-4*b*c*d+6*b*d^2)]
[x(0)^2+y(0)^2-r(2)^2+(-2*a*d-2*b*d)  ,  (-2*a*c+2*a*d)]
[(2*b)*y*x(0)+(2*a)*y*y(0)+(-2*a*b-2*a*d-2*b*d)*y+(-2*a^2*d-2*a*b*d+2*a*d^2+2*b*d^2)  ,  (2*c-2*d)*y*x(0)+(-2*c+2*d)*y*y(0)+(-2*a*c+2*a*d-c^2+2*c*d-d^2)*y+(-2*a^2*c+2*a^2*d+2*a*c^2-2*a*d^2+2*b*c*d-2*b*d^2)]
[(b-d)*y^2+(-b^2+d^2)*y  ,  0]
[(a-d)*y^2+(-a*b-a*d+b*d+d^2)*y  ,  (-c+d)*y^2+(b*c-b*d+c*d-d^2)*y]
[x^2-2*x*x(0)+y^2-2*y*y(0)+(2*a*d+2*b*d)  ,  (2*a*c-2*a*d)]
[(8*b)*y*y(0)^2+(-4*b)*y*r(2)^2+(-8*b^2-16*b*d)*y*y(0)+(4*b^3+16*b*d^2)*y+(-8*b^2*d+8*b*d^2)*y(0)+(-8*a*b^2*d+8*a*b*d^2+4*b^3*d+8*b^2*d^2-12*b*d^3)  ,  (4*c-4*d)*y*x(0)*y(0)+(4*c-4*d)*y*y(0)^2+(-4*c+4*d)*y*r(2)^2+(-6*c*d+6*d^2)*y*x(0)+(-4*a*c+4*a*d-12*b*c+12*b*d-2*c^2+2*c*d)*y*y(0)+(2*a*b*c-2*a*b*d+4*a*c*d-4*a*d^2+6*b^2*c-6*b^2*d-2*b*c^2+4*b*c*d-2*b*d^2+c^3+5*c^2*d-3*c*d^2-3*d^3)*y+(-4*a*b*c+4*a*b*d-4*b^2*c+4*b^2*d+4*b*c^2-4*b*d^2)*y(0)+(-4*a^2*b*c+4*a^2*b*d+2*a^2*c^2+2*a^2*c*d-4*a^2*d^2-2*a*b^2*c+2*a*b^2*d+4*a*b*c^2+4*a*b*c*d-8*a*b*d^2-2*a*c^3-2*a*c^2*d+4*a*c*d^2+2*b^3*c-2*b^3*d+2*b^2*c^2+6*b^2*c*d-8*b^2*d^2-8*b*c^2*d-2*b*c*d^2+10*b*d^3)]
[(8*a)*y*y(0)^2+(-4*a)*y*r(2)^2+(-8*a*b-16*b*d)*y*y(0)+(4*a*b^2+16*b*d^2)*y+(-8*b^2*d+8*b*d^2)*y(0)+(-12*a^2*b*d-4*a^2*d^2-20*a*b^2*d+16*a*b*d^2+4*a*d^3+4*b^3*d+20*b^2*d^2-8*b*d^3)  ,  (4*c-4*d)*y*x(0)*y(0)+(-4*c+4*d)*y*y(0)^2+(-6*c*d+6*d^2)*y*x(0)+(-8*a*c+8*a*d-16*b*c+16*b*d+2*c^2+10*c*d-12*d^2)*y*y(0)+(6*a*b*c-6*a*b*d+2*a*c^2+4*a*c*d-6*a*d^2+10*b^2*c-10*b^2*d-8*b*c^2+4*b*c*d+4*b*d^2-c^3+7*c^2*d-5*c*d^2-d^3)*y+(-4*a^2*c+4*a^2*d-4*a*b*c+4*a*b*d+4*a*c^2-4*a*d^2-8*b^2*c+8*b^2*d+8*b*c*d-8*b*d^2)*y(0)+(-2*a^3*c+2*a^3*d-14*a^2*b*c+14*a^2*b*d+6*a^2*c^2-2*a^2*c*d-4*a^2*d^2-4*a*b^2*c+4*a*b^2*d+12*a*b*c^2+8*a*b*c*d-20*a*b*d^2-4*a*c^3+6*a*c*d^2-2*a*d^3+4*b^3*c-4*b^3*d+6*b^2*c^2+14*b^2*c*d-20*b^2*d^2+2*b*c^3-10*b*c^2*d+8*b*d^3)]

Module Groebner basis: 
[(2*a^2*b^2*d-2*a^2*b*d^2+2*a*b^3*d-4*a*b^2*d^2+2*a*b*d^3-2*b^3*d^2+2*b^2*d^3) , (-2*a^3*d+2*a^2*b*c-2*a^2*b*d+2*a^2*d^2+2*a*b^2*c-2*b^2*c^2)*y(0)+(a^4*c+a^3*b*c+2*a^3*b*d-a^3*c^2-a^3*c*d+a^3*d^2-a^2*b^2*c-2*a^2*b*c^2-2*a^2*b*c*d+a^2*b*d^2+a^2*c^2*d-a^2*d^3-a*b^3*c-2*a*b^3*d-3*a*b^2*c*d+4*a*b^2*d^2+a*b*c^3+a*b*c*d^2-2*a*b*d^3+b^3*c^2+2*b^3*d^2+2*b^2*c^2*d-2*b^2*d^3)].

LPP Set of Module Groebner Basis under specialization:
[ 1 ]

Branch 39:
constraints: c-d=0,a^3-a^2*d-a*b^2+b^2*d=0,a^2*b^2*d-a^2*b*d^2+a*b^3*d-2*a*b^2*d^2+a*b*d^3-b^3*d^2+b^2*d^3=0,d!=0,b!=0,-a-b+2*d!=0,2*d!=0,b+d!=0,b-d!=0,-b+d!=0,d!=0,b!=0,b-d!=0,
RGB from KSW:
[(2*a*d-2*b*d)*y(0)+(-a^2*d-2*a*b*d+b^2*d+2*b*d^2)  ,  (-2*b*c+2*b*d)*y(0)+(-a^2*c+a^2*d+a*c^2-a*d^2+b^2*c-b^2*d+2*b*c*d-2*b*d^2)]
[(2*a^2*b-2*b^3)*y(0)+(-a^2*b^2-3*a^2*b*d-2*a*b^2*d+2*a*b*d^2+b^4+b^3*d+2*b^2*d^2)  ,  (2*a^3-2*a^2*d-2*a*b^2+2*b^2*c)*x(0)+(-2*b^2*c+2*b^2*d)*y(0)+(-a^4-2*a^3*c+a^3*d+a^2*b^2-a^2*b*c+a^2*b*d+2*a^2*c*d+a*b^2*d+a*b*c^2-a*b*d^2+b^3*c-b^3*d-b^2*c^2+2*b^2*c*d-3*b^2*d^2)]
[(8*b^3*d-8*b^2*d^2)*y(0)+(-4*b^4*d+4*b^2*d^3)  ,  (2*a*c-2*a*d+2*b*c-2*b*d-2*c^2+2*d^2)*y*r(2)^2+(2*a^2*b*c-2*a^2*b*d-2*a^2*c^2+2*a^2*d^2+4*a*b^2*c-4*a*b^2*d+2*a*c^3-2*a*d^3+6*b^3*c-6*b^3*d-6*b^2*c^2+6*b^2*d^2-2*b*c^3+2*b*c^2*d)*y(0)+(a^3*b*c+a^3*b*d-2*a^3*c*d+a^2*b^2*c+3*a^2*b^2*d-2*a^2*b*c^2-2*a^2*b*c*d-2*a^2*b*d^2-a^2*c^3+4*a^2*c^2*d-a^2*d^3-3*a*b^3*c+5*a*b^3*d-2*a*b^2*c^2-6*a*b^2*c*d+2*a*b^2*d^2+2*a*b*c*d^2+2*a*b*d^3+a*c^4-2*a*c^3*d+a*d^4-3*b^4*c+3*b^4*d+4*b^3*c^2-6*b^3*c*d+b^2*c^3+4*b^2*c^2*d-3*b^2*d^3+b*c^4+b*c^3*d-b*c^2*d^2-b*c*d^3)]
[(2*d)*x(0)+(2*d)*y(0)+(-2*a*d-2*b*d-2*d^2)  ,  (2*c-2*d)*x(0)+(-2*a*c+2*a*d-c^2+d^2)]
[(2*a)*x(0)+(2*b)*y(0)+(-a^2-2*a*d-b^2-2*b*d)  ,  (-2*a*c+2*a*d)]
[(a^2-2*a*d-b^2+2*b*d)*y+(-2*a^2*d+2*a*b*d+2*a*d^2-2*b*d^2)  ,  (-2*a*c+2*a*d+c^2-d^2)*y+(2*a*b*c-2*a*b*d+2*a*c*d-2*a*d^2-2*b*c^2+2*b*d^2)]
[(2*b^2*d-2*b*d^2)*y+(2*a*b^2*d-2*a*b*d^2-2*b^2*d^2+2*b*d^3)  ,  (2*a*c-2*a*d+2*b*c-2*b*d-2*c^2+2*d^2)*y*y(0)+(-a*b*c+a*b*d-a*c*d+a*d^2-b^2*c+b^2*d+2*b*c^2-b*c*d-b*d^2)*y+(a^2*b*c-a^2*b*d-2*a^2*c^2+a^2*c*d+a^2*d^2+a*b^2*c-a*b^2*d-a*b*c^2-2*a*b*c*d+3*a*b*d^2+2*a*c^3-a*c^2*d-a*c*d^2-b^2*c^2-b^2*c*d+2*b^2*d^2+3*b*c^2*d-b*c*d^2-2*b*d^3)]
[(2*a*d^2-2*b*d^2)*y+(-2*a^2*b*d+2*a^2*d^2-2*a*b^2*d-2*a*d^3+2*b^2*d^2+2*b*d^3)  ,  (-2*a*c+2*a*d-2*b*c+2*b*d+2*c^2-2*d^2)*y*y(0)+(a*c^2+2*a*c*d-3*a*d^2+2*b^2*c-2*b^2*d-b*c^2-2*b*c*d+3*b*d^2-c^3-c^2*d+c*d^2+d^3)*y+(-2*a^2*b*c+2*a^2*b*d+2*a^2*c^2-2*a^2*d^2+2*a*b*c*d-2*a*b*d^2-2*a*c^3+2*a*d^3+2*b^2*c*d-2*b^2*d^2+2*b*c^3-2*b*c^2*d+2*b*c*d^2-2*b*d^3)]
[(2*a*b*d-2*b*d^2)*y+(-2*a*b^2*d-2*a*b*d^2+2*b^2*d^2+2*b*d^3)  ,  (a*b*c-a*b*d+a*c^2-a*c*d+b^2*c-b^2*d-b*c^2-3*b*c*d+4*b*d^2-c^3+c^2*d+c*d^2-d^3)*y+(-a^2*b*c+a^2*b*d+a^2*c*d-a^2*d^2-a*b^2*c+a*b^2*d-a*b*c^2+a*b*d^2-a*c^2*d+a*c*d^2+b^2*c^2+b^2*c*d-2*b^2*d^2+2*b*c^3-b*c^2*d+b*c*d^2-2*b*d^3)]
[(b-d)*x+(-a+d)*y+(2*a*d-2*b*d)  ,  (c-d)*y+(-2*b*c+2*b*d)]
[(a-d)*x+(-b+d)*y  ,  (-c+d)*x]
[(4*a*d-4*b*d)*r(2)^2+(-8*b^2*d+8*b*d^2)*y(0)+(-2*a^2*b*d+2*a^2*d^2-4*a*b^2*d+4*a*b*d^2-4*a*d^3+6*b^3*d+2*b^2*d^2-4*b*d^3)  ,  (-4*b*c+4*b*d)*r(2)^2+(-2*b^2*c+2*b^2*d+2*b*c*d-2*b*d^2)*x(0)+(-2*a^2*c+2*a^2*d-2*a*b*c+2*a*b*d+2*a*c^2-2*a*d^2-6*b^2*c+6*b^2*d+6*b*c*d-6*b*d^2)*y(0)+(-a^3*c-a^3*d+a^2*c^2+4*a^2*c*d-3*a^2*d^2+3*a*b^2*c-a*b^2*d-4*a*c^2*d+4*a*d^3+4*b^3*c-4*b^3*d+b^2*c^2-3*b^2*d^2+b*c^3-b*c^2*d-3*b*c*d^2+3*b*d^3)]
[(8*b^3*d-8*b^2*d^2)*r(2)^2+(-4*b^5*d+4*b^4*d^2-4*b^3*d^3+4*b^2*d^4)  ,  (4*a*c-4*a*d+4*b*c-4*b*d-4*c^2+4*d^2)*y*y(0)*r(2)^2+(-4*a^2*b*c+4*a^2*b*d-4*a^2*c^2+4*a^2*d^2+4*a*c^3-4*a*d^3+8*b^3*c-8*b^3*d-8*b^2*c^2+8*b^2*d^2+4*b*c^3-4*b*c*d^2)*r(2)^2+(4*b^4*c-4*b^4*d-2*b^2*c*d^2+2*b^2*d^3-2*b*c*d^3+2*b*d^4)*x(0)+(4*a^3*c^2+4*a^2*b^2*d-10*a^2*b*c^2+6*a^2*b*d^2-2*a^2*c^3-2*a^2*d^3-4*a*b^3*c+8*a*b^3*d+4*a*b^2*c^2-16*a*b^2*d^2+4*a*b*c^3-2*a*c^4+2*a*d^4-4*b^4*c+4*b^4*d-18*b^3*c^2+16*b^3*c*d-2*b^3*d^2-2*b^2*c^3+10*b^2*c^2*d-2*b^2*c*d^2+2*b^2*d^3+6*b*c^4-2*b*c^3*d+4*b*c^2*d^2-4*b*c*d^3-4*b*d^4)*y(0)+(-2*a^4*c^2+2*a^4*c*d-2*a^4*d^2-2*a^3*b^2*c+a^3*b*c^2-8*a^3*b*c*d+3*a^3*b*d^2+2*a^3*c^3-4*a^3*c^2*d+3*a^3*c*d^2+a^3*d^3-4*a^2*b^3*c-4*a^2*b^3*d+3*a^2*b^2*c^2+10*a^2*b^2*c*d-9*a^2*b^2*d^2-2*a^2*b*c^3+17*a^2*b*c^2*d-3*a^2*b*c*d^2+3*a^2*c^4-2*a^2*c*d^3-a^2*d^4-2*a*b^4*c-4*a*b^4*d+3*a*b^3*c^2-4*a*b^3*c*d+13*a*b^3*d^2+2*a*b^2*c^3-12*a*b^2*c^2*d+9*a*b^2*c*d^2+7*a*b^2*d^3+2*a*b*c^4-7*a*b*c^3*d+a*b*c^2*d^2-a*b*c*d^3-3*a*b*d^4-3*a*c^5+2*a*c^4*d-2*a*c^3*d^2+2*a*c^2*d^3+a*c*d^4+9*b^4*c^2-3*b^4*d^2-2*b^3*c^3+11*b^3*c^2*d-17*b^3*c*d^2+4*b^3*d^3-b^2*c^4+2*b^2*c^3*d-8*b^2*c^2*d^2+2*b^2*c*d^3-3*b^2*d^4-b*c^5-3*b*c^4*d+b*c^3*d^2-b*c^2*d^3+2*b*c*d^4+2*b*d^5)]
[(8*d)*y(0)^2+(-4*d)*r(2)^2+(-16*b*d-8*d^2)*y(0)+(8*b^2*d+8*b*d^2+4*d^3)  ,  (4*c-4*d)*x(0)*y(0)+(4*c-4*d)*y(0)^2+(-4*c+4*d)*r(2)^2+(-4*b*c+4*b*d-2*c*d+2*d^2)*x(0)+(-4*a*c+4*a*d-8*b*c+8*b*d-2*c^2-2*c*d+4*d^2)*y(0)+(4*a*b*c-4*a*b*d+2*a*c*d-2*a*d^2+4*b^2*c-4*b^2*d+2*b*c^2+2*b*c*d-4*b*d^2+c^3+c^2*d+c*d^2-3*d^3)]
[(4*a^2+4*b^2)*y(0)^2+(-4*a^2)*r(2)^2+(-8*b^3-16*b^2*d)*y(0)+(a^2*b^2-14*a^2*b*d+a^2*d^2-12*a*b^2*d+12*a*b*d^2+3*b^4+10*b^3*d+19*b^2*d^2)  ,  (4*a^3-4*a^2*d-4*a*b^2+4*b^2*c)*x(0)+(-8*a*b*c+8*a*b*d-12*b^2*c+12*b^2*d)*y(0)+(-a^4-8*a^3*c+2*a^3*d+a^2*b^2-6*a^2*b*c+6*a^2*b*d+4*a^2*c^2+4*a^2*c*d-a^2*d^2+4*a*b^2*c+2*a*b^2*d+6*a*b*c^2+8*a*b*c*d-14*a*b*d^2+6*b^3*c-6*b^3*d-2*b^2*c^2+12*b^2*c*d-17*b^2*d^2)]
[(8*b^3)*y(0)^2+(-4*a^2*b)*r(2)^2+(-8*b^4-16*b^2*d^2)*y(0)+(2*a^2*b^3+2*a^2*b*d^2+2*b^5+6*b^3*d^2+8*b^2*d^3)  ,  (2*a*c-2*a*d+2*b*c-2*b*d-2*c^2+2*d^2)*y*r(2)^2+(-4*a^3+4*a^2*d+4*a*b^2-4*b^2*d)*x(0)*y(0)+(-4*a*b*c+4*a*b*d+4*b^2*c-4*b^2*d)*y(0)^2+(4*a*b*c-4*a*b*d)*r(2)^2+(2*a^3*b-2*a^2*b*d-2*a*b^3+2*b^3*d-4*b^2*c*d+4*b^2*d^2)*x(0)+(2*a^4+4*a^3*c-2*a^2*b^2+2*a^2*b*c-2*a^2*b*d-2*a^2*c^2-4*a^2*d^2+2*a*b^2*c-6*a*b^2*d-6*a*b*c^2+6*a*b*d^2+2*a*c^3-2*a*d^3+4*b^3*c-4*b^3*d+6*b^2*c^2-16*b^2*c*d+16*b^2*d^2-2*b*c^3+2*b*c^2*d)*y(0)+(-a^4*c-4*a^3*b*c+a^3*b*d-a^3*c^2+a^3*c*d-a^3*d^2+2*a^2*b^2*c+a^2*b^2*d+7*a^2*b*c^2-10*a^2*b*c*d+4*a^2*b*d^2+a^2*c^3+a^2*c^2*d-2*a^2*c*d^2+2*a^2*d^3-2*a*b^3*c+7*a*b^3*d+7*a*b^2*c*d-10*a*b^2*d^2-7*a*b*c^3+12*a*b*c^2*d-a*b*c*d^2-2*a*b*d^3+a*c^4-2*a*c^3*d+a*d^4-3*b^4*c+3*b^4*d-2*b^3*c^2-3*b^3*d^2+b^2*c^3-6*b^2*c^2*d+12*b^2*c*d^2-7*b^2*d^3+b*c^4+b*c^3*d-b*c^2*d^2-b*c*d^3)]
[(8*a*b^2)*y(0)^2+(-4*a*b^2)*r(2)^2+(-8*a*b^3-16*b^2*d^2)*y(0)+(-8*a^2*b*d^2+4*a*b^4-8*a*b^2*d^2+8*a*b*d^3+8*b^3*d^2+16*b^2*d^3)  ,  (6*a*c-6*a*d+6*b*c-6*b*d-6*c^2+6*d^2)*y*r(2)^2+(4*a^3-4*a^2*d-4*a*b^2+4*a*b*c-4*a*b*d+4*b^2*c)*y(0)^2+(-4*a^3+4*a^2*d+4*a*b^2-4*a*b*c+4*a*b*d-4*b^2*c)*r(2)^2+(-2*b^3*c+2*b^3*d+2*b^2*c*d-2*b^2*d^2)*x(0)+(-4*a^3*b-2*a^2*b*c+6*a^2*b*d-6*a^2*c^2+6*a^2*d^2+4*a*b^3-2*a*b^2*c+2*a*b^2*d+6*a*c^3-6*a*d^3-6*b^3*c+2*b^3*d-16*b^2*c^2+2*b^2*c*d+14*b^2*d^2-6*b*c^3+6*b*c^2*d)*y(0)+(a^5-4*a^4*c-a^4*d+2*a^3*b^2-2*a^3*b*d+4*a^3*c^2-2*a^3*c*d-a^2*b^2*c-a^2*b^2*d-2*a^2*b*c^2+6*a^2*b*c*d+2*a^2*b*d^2-3*a^2*c^3+8*a^2*c^2*d-3*a^2*d^3-3*a*b^4-2*a*b^3*d+2*a*b^2*c^2-10*a*b^2*c*d+14*a*b^2*d^2-4*a*b*c^2*d+2*a*b*c*d^2-2*a*b*d^3+3*a*c^4-6*a*c^3*d+3*a*d^4+3*b^4*c+12*b^3*c^2-2*b^3*c*d-8*b^3*d^2+4*b^2*c^3+9*b^2*c^2*d-3*b^2*c*d^2-16*b^2*d^3+3*b*c^4+3*b*c^3*d-3*b*c^2*d^2-3*b*c*d^3)]
[(4*b)*x(0)*y(0)+(-4*a)*y(0)^2+(4*a)*r(2)^2+(-2*b^2)*x(0)+(2*a*b+8*b*d)*y(0)+(3*a^2*d-2*a*b^2+2*a*b*d-4*a*d^2-5*b^2*d-8*b*d^2)  ,  (4*b*c-4*b*d)*x(0)+(4*b*c-4*b*d)*y(0)+(-a^3+4*a^2*c-3*a^2*d+a*b^2-4*a*b*c+4*a*b*d-4*a*c^2+4*a*d^2-2*b^2*c+b^2*d-2*b*c^2-4*b*c*d+6*b*d^2)]
[x(0)^2+y(0)^2-r(2)^2+(-2*a*d-2*b*d)  ,  (-2*a*c+2*a*d)]
[(2*b)*y*x(0)+(2*a)*y*y(0)+(-2*a*b-2*a*d-2*b*d)*y+(-2*a^2*d-2*a*b*d+2*a*d^2+2*b*d^2)  ,  (2*c-2*d)*y*x(0)+(-2*c+2*d)*y*y(0)+(-2*a*c+2*a*d-c^2+2*c*d-d^2)*y+(-2*a^2*c+2*a^2*d+2*a*c^2-2*a*d^2+2*b*c*d-2*b*d^2)]
[(b-d)*y^2+(-b^2+d^2)*y  ,  0]
[(a-d)*y^2+(-a*b-a*d+b*d+d^2)*y  ,  (-c+d)*y^2+(b*c-b*d+c*d-d^2)*y]
[x^2-2*x*x(0)+y^2-2*y*y(0)+(2*a*d+2*b*d)  ,  (2*a*c-2*a*d)]
[(8*b)*y*y(0)^2+(-4*b)*y*r(2)^2+(-8*b^2-16*b*d)*y*y(0)+(4*b^3+16*b*d^2)*y+(-8*b^2*d+8*b*d^2)*y(0)+(-8*a*b^2*d+8*a*b*d^2+4*b^3*d+8*b^2*d^2-12*b*d^3)  ,  (4*c-4*d)*y*x(0)*y(0)+(4*c-4*d)*y*y(0)^2+(-4*c+4*d)*y*r(2)^2+(-6*c*d+6*d^2)*y*x(0)+(-4*a*c+4*a*d-12*b*c+12*b*d-2*c^2+2*c*d)*y*y(0)+(2*a*b*c-2*a*b*d+4*a*c*d-4*a*d^2+6*b^2*c-6*b^2*d-2*b*c^2+4*b*c*d-2*b*d^2+c^3+5*c^2*d-3*c*d^2-3*d^3)*y+(-4*a*b*c+4*a*b*d-4*b^2*c+4*b^2*d+4*b*c^2-4*b*d^2)*y(0)+(-4*a^2*b*c+4*a^2*b*d+2*a^2*c^2+2*a^2*c*d-4*a^2*d^2-2*a*b^2*c+2*a*b^2*d+4*a*b*c^2+4*a*b*c*d-8*a*b*d^2-2*a*c^3-2*a*c^2*d+4*a*c*d^2+2*b^3*c-2*b^3*d+2*b^2*c^2+6*b^2*c*d-8*b^2*d^2-8*b*c^2*d-2*b*c*d^2+10*b*d^3)]
[(8*a)*y*y(0)^2+(-4*a)*y*r(2)^2+(-8*a*b-16*b*d)*y*y(0)+(4*a*b^2+16*b*d^2)*y+(-8*b^2*d+8*b*d^2)*y(0)+(-12*a^2*b*d-4*a^2*d^2-20*a*b^2*d+16*a*b*d^2+4*a*d^3+4*b^3*d+20*b^2*d^2-8*b*d^3)  ,  (4*c-4*d)*y*x(0)*y(0)+(-4*c+4*d)*y*y(0)^2+(-6*c*d+6*d^2)*y*x(0)+(-8*a*c+8*a*d-16*b*c+16*b*d+2*c^2+10*c*d-12*d^2)*y*y(0)+(6*a*b*c-6*a*b*d+2*a*c^2+4*a*c*d-6*a*d^2+10*b^2*c-10*b^2*d-8*b*c^2+4*b*c*d+4*b*d^2-c^3+7*c^2*d-5*c*d^2-d^3)*y+(-4*a^2*c+4*a^2*d-4*a*b*c+4*a*b*d+4*a*c^2-4*a*d^2-8*b^2*c+8*b^2*d+8*b*c*d-8*b*d^2)*y(0)+(-2*a^3*c+2*a^3*d-14*a^2*b*c+14*a^2*b*d+6*a^2*c^2-2*a^2*c*d-4*a^2*d^2-4*a*b^2*c+4*a*b^2*d+12*a*b*c^2+8*a*b*c*d-20*a*b*d^2-4*a*c^3+6*a*c*d^2-2*a*d^3+4*b^3*c-4*b^3*d+6*b^2*c^2+14*b^2*c*d-20*b^2*d^2+2*b*c^3-10*b*c^2*d+8*b*d^3)]

Module Groebner basis: 
[(8*b^3*d-8*b^2*d^2)*y(0)+(-4*b^4*d+4*b^2*d^3), (2*a*c-2*a*d+2*b*c-2*b*d-2*c^2+2*d^2)*y*r(2)^2+(2*a^2*b*c-2*a^2*b*d-2*a^2*c^2+2*a^2*d^2+4*a*b^2*c-4*a*b^2*d+2*a*c^3-2*a*d^3+6*b^3*c-6*b^3*d-6*b^2*c^2+6*b^2*d^2-2*b*c^3+2*b*c^2*d)*y(0)+(a^3*b*c+a^3*b*d-2*a^3*c*d+a^2*b^2*c+3*a^2*b^2*d-2*a^2*b*c^2-2*a^2*b*c*d-2*a^2*b*d^2-a^2*c^3+4*a^2*c^2*d-a^2*d^3-3*a*b^3*c+5*a*b^3*d-2*a*b^2*c^2-6*a*b^2*c*d+2*a*b^2*d^2+2*a*b*c*d^2+2*a*b*d^3+a*c^4-2*a*c^3*d+a*d^4-3*b^4*c+3*b^4*d+4*b^3*c^2-6*b^3*c*d+b^2*c^3+4*b^2*c^2*d-3*b^2*d^3+b*c^4+b*c^3*d-b*c^2*d^2-b*c*d^3)], 
[(2*d)*x(0)+(2*d)*y(0)+(-2*a*d-2*b*d-2*d^2), (2*c-2*d)*x(0)+(-2*a*c+2*a*d-c^2+d^2)], 
[(2*b^2*d-2*b*d^2)*y+(2*a*b^2*d-2*a*b*d^2-2*b^2*d^2+2*b*d^3), (2*a*c-2*a*d+2*b*c-2*b*d-2*c^2+2*d^2)*y*y(0)+(-a*b*c+a*b*d-a*c*d+a*d^2-b^2*c+b^2*d+2*b*c^2-b*c*d-b*d^2)*y+(a^2*b*c-a^2*b*d-2*a^2*c^2+a^2*c*d+a^2*d^2+a*b^2*c-a*b^2*d-a*b*c^2-2*a*b*c*d+3*a*b*d^2+2*a*c^3-a*c^2*d-a*c*d^2-b^2*c^2-b^2*c*d+2*b^2*d^2+3*b*c^2*d-b*c*d^2-2*b*d^3)], 
[(b-d)*x+(-a+d)*y+(2*a*d-2*b*d), (c-d)*y+(-2*b*c+2*b*d)], 
[(8*b^3*d-8*b^2*d^2)*r(2)^2+(-4*b^5*d+4*b^4*d^2-4*b^3*d^3+4*b^2*d^4) , (4*a*c-4*a*d+4*b*c-4*b*d-4*c^2+4*d^2)*y*y(0)*r(2)^2+(-4*a^2*b*c+4*a^2*b*d-4*a^2*c^2+4*a^2*d^2+4*a*c^3-4*a*d^3+8*b^3*c-8*b^3*d-8*b^2*c^2+8*b^2*d^2+4*b*c^3-4*b*c*d^2)*r(2)^2+(4*b^4*c-4*b^4*d-2*b^2*c*d^2+2*b^2*d^3-2*b*c*d^3+2*b*d^4)*x(0)+(4*a^3*c^2+4*a^2*b^2*d-10*a^2*b*c^2+6*a^2*b*d^2-2*a^2*c^3-2*a^2*d^3-4*a*b^3*c+8*a*b^3*d+4*a*b^2*c^2-16*a*b^2*d^2+4*a*b*c^3-2*a*c^4+2*a*d^4-4*b^4*c+4*b^4*d-18*b^3*c^2+16*b^3*c*d-2*b^3*d^2-2*b^2*c^3+10*b^2*c^2*d-2*b^2*c*d^2+2*b^2*d^3+6*b*c^4-2*b*c^3*d+4*b*c^2*d^2-4*b*c*d^3-4*b*d^4)*y(0)+(-2*a^4*c^2+2*a^4*c*d-2*a^4*d^2-2*a^3*b^2*c+a^3*b*c^2-8*a^3*b*c*d+3*a^3*b*d^2+2*a^3*c^3-4*a^3*c^2*d+3*a^3*c*d^2+a^3*d^3-4*a^2*b^3*c-4*a^2*b^3*d+3*a^2*b^2*c^2+10*a^2*b^2*c*d-9*a^2*b^2*d^2-2*a^2*b*c^3+17*a^2*b*c^2*d-3*a^2*b*c*d^2+3*a^2*c^4-2*a^2*c*d^3-a^2*d^4-2*a*b^4*c-4*a*b^4*d+3*a*b^3*c^2-4*a*b^3*c*d+13*a*b^3*d^2+2*a*b^2*c^3-12*a*b^2*c^2*d+9*a*b^2*c*d^2+7*a*b^2*d^3+2*a*b*c^4-7*a*b*c^3*d+a*b*c^2*d^2-a*b*c*d^3-3*a*b*d^4-3*a*c^5+2*a*c^4*d-2*a*c^3*d^2+2*a*c^2*d^3+a*c*d^4+9*b^4*c^2-3*b^4*d^2-2*b^3*c^3+11*b^3*c^2*d-17*b^3*c*d^2+4*b^3*d^3-b^2*c^4+2*b^2*c^3*d-8*b^2*c^2*d^2+2*b^2*c*d^3-3*b^2*d^4-b*c^5-3*b*c^4*d+b*c^3*d^2-b*c^2*d^3+2*b*c*d^4+2*b*d^5)].

LPP Set of Module Groebner Basis under specialization:
[ y(0) ]
[ x(0) ]
[ y ]
[ x ]
[ r(2)^2 ]

Branch 40:
constraints: c^2+d^2=0,a^4*d-a^3*b*c-a^3*c*d-a^2*b^2*d-a^2*b*d^2+2*a^2*d^3+a*b^3*c+a*b^2*c*d-2*a*b*c*d^2-2*a*c*d^3+b^3*d^2-2*b*d^4=0,a^4*c+a^3*b*d+a^3*d^2-a^2*b^2*c-a^2*b*c*d+2*a^2*c*d^2-a*b^3*d-a*b^2*d^2+2*a*b*d^3+2*a*d^4+b^3*c*d-2*b*c*d^3=0,a^5+a^3*b*d+3*a^3*d^2-a^2*b^2*c-a^2*b*c*d-a*b^4-a*b^3*d+a*b^2*d^2+2*a*b*d^3+2*a*d^4+b^4*c+b^3*c*d-2*b^2*c*d^2-2*b*c*d^3=0,c!=0,b!=0,-a-b+c+d!=0,c+d!=0,b+d!=0,b-d!=0,c-d!=0,-a+b+c-d!=0,-a*d+b*c!=0,d!=0,b-d!=0,
RGB from KSW:
[(2*a*d-2*b*c)*y(0)+(-a^2*c-2*a*b*d-2*a*d^2+b^2*c+2*b*c*d)  ,  (a*c^2+a*d^2)]
[(2*a^3*b*c-2*b^4*d)*y(0)+(-a^3*b*c*d+a^2*b^3*d+a^2*b^2*d^2-2*a^2*b*d^3-a*b^3*c*d+2*a*b^2*c*d^2+2*a*b*c*d^3+b^5*d+b^4*d^2+2*b^2*d^4)  ,  (-2*a^2*b*c^2-2*a^2*b*d^2-2*a*b*c^3-2*a*b*c*d^2+2*b^3*c^2+2*b^3*d^2+2*b^2*c^2*d+2*b^2*d^3+2*b*c^4-2*b*d^4)*y(0)+(-a^4*c^2-a^3*b*c*d+a^3*c^3+a^2*b^2*c^2+4*a^2*b*c^2*d+3*a^2*b*d^3+a^2*c^4-a^2*c^2*d^2+a*b^3*c*d+a*b^2*c*d^2-2*a*b*c*d^3-a*c^5+a*c^3*d^2-b^4*c^2-b^4*d^2-3*b^3*c^2*d-2*b^3*d^3-b^2*c^4-3*b^2*c^2*d^2-2*b^2*d^4-2*b*c^4*d+b*c^2*d^3+b*d^5)]
[(2*a^4*b-2*b^5)*y(0)+(-a^4*b^2-a^3*b^2*c+a^3*b*c*d-a^2*b^3*d-a^2*b^2*d^2+4*a^2*b*d^3+a*b^4*c+3*a*b^3*c*d-2*a*b^2*c*d^2-2*a*b*c*d^3+b^6+b^5*d+b^4*d^2+2*b^3*d^3-2*b^2*d^4)  ,  (2*a^5+2*a^3*b*d+6*a^3*d^2-2*a^2*b^2*c-2*a^2*b*c*d-2*a*b^4-2*a*b^3*d+2*a*b^2*d^2+4*a*b*d^3+4*a*d^4+2*b^4*c+2*b^3*c*d-4*b^2*c*d^2-4*b*c*d^3)*x(0)+(4*b^3*c^2+4*b^3*d^2)*y(0)+(-a^6-2*a^5*c-6*a^4*d^2+a^3*b*c*d-3*a^3*c*d^2+a^2*b^4+6*a^2*b^2*c^2+5*a^2*b^2*d^2-7*a^2*b*c^2*d-6*a^2*b*d^3+3*a^2*c^2*d^2-5*a^2*d^4+2*a*b^4*c-a*b^3*c*d+a*b^2*c^3-4*a*b^2*c*d^2+2*a*b*c*d^3-3*a*c^3*d^2-a*c*d^4-6*b^4*c^2-3*b^4*d^2-2*b^3*c^2*d-3*b^3*d^3-3*b^2*c^4+5*b^2*c^2*d^2+2*b^2*d^4+3*b*c^4*d-b*c^2*d^3-2*b*d^5)]
[(2*c)*x(0)+(2*d)*y(0)+(-2*a*c-2*b*d)  ,  (-c^2-d^2)]
[(2*a)*x(0)+(2*b)*y(0)+(-a^2-2*a*c-b^2-2*b*d)  ,  0]
[(2*d^2)*x(0)+(-2*c*d)*y(0)+(-2*a*d^2+2*b*c*d)  ,  (-2*c^2-2*d^2)*x(0)+(2*a*c^2+2*a*d^2+c^3+c*d^2)]
[(a^2-2*a*c-b^2+2*b*d-2*d^2)*y+(-2*a^2*d+2*a*b*c+2*a*c*d+2*b*d^2)  ,  (c^2+d^2)*y+(-2*b*c^2-2*b*d^2)]
[(a*b*d-a*d^2+b^2*c-3*b*c*d+2*c*d^2)*y+(-a^2*b*c+a^2*c*d-a*b^2*d+a*d^3+b^2*c*d-b*c*d^2)  ,  (a*c^2+a*d^2-c^3-c*d^2)*y+(-a*b*c^2-a*b*d^2-a*c^2*d-a*d^3+2*b*c^3+2*b*c*d^2)]
[(a*b*c-a*c*d-b^2*d+3*b*d^2-2*d^3)*y+(a^2*b*d-a^2*d^2-a*b^2*c+a*c*d^2-b^2*d^2+b*d^3)  ,  (-b*c^2-b*d^2+c^2*d+d^3)*y+(b^2*c^2+b^2*d^2-b*c^2*d-b*d^3)]
[(2*b^3*d-6*b^2*d^2+6*b*d^3-2*d^4)*y+(-a^3*b*c+a^3*c*d-2*a^2*b^2*d+3*a^2*b*d^2-a^2*d^3+a*b^3*c-a*b^2*c*d-2*a*b*c*d^2+2*a*c*d^3+b^3*d^2-3*b^2*d^3+2*b*d^4)  ,  (b^2*c^2+b^2*d^2-2*b*c^2*d-2*b*d^3+c^2*d^2+d^4)*y+(a*b*c^3+a*b*c*d^2-a*c^3*d-a*c*d^3-b^3*c^2-b^3*d^2+3*b^2*c^2*d+3*b^2*d^3-2*b*c^2*d^2-2*b*d^4)]
[(2*b^3*c-6*b^2*c*d+6*b*c*d^2-2*c*d^3)*y+(a^3*b*d-a^3*d^2-2*a^2*b^2*c+3*a^2*b*c*d-a^2*c*d^2-a*b^3*d+a*b^2*d^2+2*a*b*d^3-2*a*d^4+b^3*c*d-3*b^2*c*d^2+2*b*c*d^3)  ,  (-a*c^2*d-a*d^3+c^3*d+c*d^3)*y+(2*a*c^2*d^2+2*a*d^4+2*b^2*c^3+2*b^2*c*d^2-4*b*c^3*d-4*b*c*d^3)]
[(b-d)*x+(-a+c)*y+(2*a*d-2*b*c)  ,  0]
[(a-c)*x+(-b+d)*y  ,  0]
[(4*d^2)*r(2)^2  ,  (4*c^2+4*d^2)*y(0)^2+(-4*c^2-4*d^2)*r(2)^2+(-8*b*c^2-8*b*d^2-4*c^2*d-4*d^3)*y(0)+(4*b^2*c^2+4*b^2*d^2+4*b*c^2*d+4*b*d^3+c^4+2*c^2*d^2+d^4)]
[(2*c*d)*r(2)^2  ,  (2*c^2+2*d^2)*x(0)*y(0)+(-2*b*c^2-2*b*d^2-c^2*d-d^3)*x(0)+(-2*a*c^2-2*a*d^2-c^3-c*d^2)*y(0)+(2*a*b*c^2+2*a*b*d^2+a*c^2*d+a*d^3+b*c^3+b*c*d^2)]
[(4*a*d-4*b*c)*r(2)^2+(2*b^2*d)*x(0)+(-2*a^2*c-4*b^2*c)*y(0)+(-a^3*d+a^2*b*c+2*a^2*c*d-3*a*b^2*d+3*b^3*c+2*b^2*c*d)  ,  (-2*b*c^2-2*b*d^2)*x(0)+(2*a*c^2+2*a*d^2)*y(0)+(a*b*c^2+a*b*d^2-2*a*c^2*d-2*a*d^3+2*b*c^3+2*b*c*d^2)]
[(4*a^2*b*c-4*b^3*c)*r(2)^2+(2*b^4*d)*x(0)+(2*a^2*b^2*c)*y(0)+(a^3*b^2*d-a^2*b^3*c-2*a^2*b^2*c*d-a*b^4*d+b^5*c-2*b^4*c*d)  ,  (-8*b*c^3-8*b*c*d^2)*y(0)^2+(4*b*c^3+4*b*c*d^2)*r(2)^2+(-2*b^2*c^2*d-2*b^2*d^3)*x(0)+(-2*a^3*c^2-2*a^3*d^2+2*a*b^2*c^2+2*a*b^2*d^2+2*a*c^4-2*a*d^4+14*b^2*c^3+14*b^2*c*d^2+8*b*c^3*d+8*b*c*d^3)*y(0)+(a^3*b*c^2+a^3*b*d^2+a^3*c^2*d+a^3*d^3-a^2*b*c^3-a^2*b*c*d^2-2*a*b^3*c^2-2*a*b^3*d^2+a*b^2*c^2*d+a*b^2*d^3-a*b*c^4+a*b*d^4-a*c^4*d+a*d^5-5*b^3*c^3-5*b^3*c*d^2-6*b^2*c^3*d-6*b^2*c*d^3-b*c^5-4*b*c^3*d^2-3*b*c*d^4)]
[(4*a^3*b^2-4*a*b^4)*r(2)^2+(2*b^5*d)*x(0)+(2*a^2*b^3*c)*y(0)+(a^3*b^3*d-a^2*b^4*c-2*a^2*b^3*c*d-a*b^5*d+b^6*c-2*b^5*c*d)  ,  (4*a^5+4*a^3*b*d+12*a^3*d^2-4*a^2*b^2*c-4*a^2*b*c*d-4*a*b^4-4*a*b^3*d+4*a*b^2*d^2+8*a*b*d^3+8*a*d^4+4*b^4*c+4*b^3*c*d-8*b^2*c*d^2-8*b*c^3*d-16*b*c*d^3)*y(0)^2+(-4*a^5-4*a^3*b*d-12*a^3*d^2+4*a^2*b^2*c+4*a^2*b*c*d+4*a*b^4+4*a*b^3*d+4*a*b^2*c^2-8*a*b*d^3-8*a*d^4-4*b^4*c-4*b^3*c*d+8*b^2*c*d^2+4*b*c^3*d+12*b*c*d^3)*r(2)^2+(-4*b^3*c^2*d-4*b^3*d^3-2*b^2*c^2*d^2-2*b^2*d^4+4*b*c^2*d^3+4*b*d^5)*x(0)+(-4*a^5*b-4*a^3*b^2*d-12*a^3*b*d^2+4*a^2*b^3*c+4*a^2*b^2*c*d-18*a^2*b*c^3-18*a^2*b*c*d^2+4*a*b^5+4*a*b^4*d+8*a*b^3*c^2+4*a*b^3*d^2-8*a*b^2*d^3+2*a*b*c^4-10*a*b*d^4-4*b^5*c-4*b^4*c*d-6*b^3*c^3+2*b^3*c*d^2+14*b^2*c^3*d+22*b^2*c*d^3+8*b*c^5+8*b*c^3*d^2)*y(0)+(a^7-4*a^6*c+a^5*b^2-18*a^4*c*d^2-a^3*b^4+a^3*b^3*d+5*a^3*b^2*d^2-2*a^3*b*c^2*d-11*a^3*b*d^3+8*a^3*c^4+20*a^3*c^2*d^2-a^3*d^4+3*a^2*b^4*c-a^2*b^3*c*d+8*a^2*b^2*c^3+9*a^2*b^2*c*d^2+7*a^2*b*c^3*d+16*a^2*b*c*d^3+6*a^2*c^3*d^2-14*a^2*c*d^4-a*b^6-a*b^5*d-5*a*b^4*c^2-2*a*b^4*d^2-9*a*b^3*c^2*d+2*a*b^3*d^3+3*a*b^2*c^4-3*a*b^2*c^2*d^2+a*b^2*d^4+2*a*b*c^4*d+7*a*b*c^2*d^3-13*a*b*d^5-4*a*c^6-5*a*c^4*d^2+17*a*c^2*d^4+b^6*c+b^5*c*d-b^4*c^3-2*b^4*c*d^2+8*b^3*c^3*d-3*b^3*c*d^3-9*b^2*c^5-3*b^2*c^3*d^2+4*b^2*c*d^4-4*b*c^5*d-13*b*c^3*d^3+9*b*c*d^5)]
[(4*a^4*b-4*a^2*b^3)*r(2)^2  ,  (4*a^5+4*a^3*b*d+12*a^3*d^2-4*a^2*b^2*c-4*a^2*b*c*d-4*a*b^4-4*a*b^3*d+4*a*b^2*d^2+8*a*b*d^3+8*a*d^4+4*b^4*c+4*b^3*c*d-8*b^2*c*d^2-8*b*c*d^3)*x(0)*y(0)+(8*b*c^2*d^2+8*b*d^4)*y(0)^2+(4*a^2*b*c^2+4*a^2*b*d^2-4*b*c^4-4*b*c^2*d^2)*r(2)^2+(-2*a^5*b-2*a^3*b^2*d-6*a^3*b*d^2+2*a^2*b^3*c+2*a^2*b^2*c*d+2*a*b^5+2*a*b^4*d-2*a*b^3*d^2-4*a*b^2*d^3-4*a*b*d^4-2*b^5*c-2*b^4*c*d+4*b^3*c*d^2+4*b^2*c*d^3)*x(0)+(-2*a^6-4*a^5*c-10*a^3*b*c*d-2*a^3*c^3-20*a^3*c*d^2+2*a^2*b^4-14*a^2*b^2*d^2-10*a^2*b*d^3+8*a^2*d^4+4*a*b^4*c+10*a*b^3*c*d+30*a*b^2*c^3+32*a*b^2*c*d^2-20*a*b*c*d^3+2*a*c^5-22*a*c*d^4+8*b^4*c^2+14*b^4*d^2-24*b^3*c^2*d-14*b^3*d^3+10*b^2*c^4-4*b^2*c^2*d^2-26*b^2*d^4-18*b*c^4*d+8*b*c^2*d^3+6*b*d^5)*y(0)+(11*a^4*c^2*d-9*a^4*d^3+18*a^3*b*c^3+38*a^3*b*c*d^2-13*a^3*c^3*d+7*a^3*c*d^3+2*a^2*b^3*c^2+2*a^2*b^3*d^2+9*a^2*b^2*c^2*d+29*a^2*b^2*d^3-11*a^2*b*c^4-35*a^2*b*c^2*d^2-4*a^2*b*d^4-5*a^2*c^4*d+23*a^2*c^2*d^3-12*a^2*d^5-16*a*b^3*c^3-36*a*b^3*c*d^2-7*a*b^2*c^3*d-27*a*b^2*c*d^3-6*a*b*c^5-6*a*b*c^3*d^2+40*a*b*c*d^4+7*a*c^5*d-20*a*c^3*d^3+13*a*c*d^5-6*b^5*c^2-6*b^5*d^2-6*b^3*c^4+33*b^3*c^2*d^2+19*b^3*d^4-5*b^2*c^4*d+b^2*c^2*d^3+6*b^2*d^5+b*c^6+25*b*c^4*d^2-23*b*c^2*d^4-7*b*d^6)]
[(4*a*c+4*b*d)*y(0)^2+(-4*a*c)*r(2)^2+(-6*a*b*c-6*b^2*d)*y(0)+(a^3*c+4*a^2*d^2+3*a*b^2*c-2*a*b*c*d-4*a*c*d^2+2*b^3*d+2*b^2*d^2-4*b*d^3)  ,  (-6*b*c^2-6*b*d^2)*y(0)+(-4*a^2*c^2-4*a^2*d^2+4*a*c^3+4*a*c*d^2+3*b^2*c^2+3*b^2*d^2+6*b*c^2*d+6*b*d^3)]
[(4*a^2+4*b^2)*y(0)^2+(-4*a^2)*r(2)^2+(-4*a^2*b-8*a*b*c-4*b^3-8*b^2*d)*y(0)+(a^4-4*a^3*c+2*a^2*b^2-4*a^2*b*d-4*a^2*d^2+4*a*b^2*c+8*a*b*c*d+b^4+4*b^3*d+4*b^2*d^2)  ,  (4*a^2*c^2+4*a^2*d^2)]
[(2*d)*x(0)*y(0)+(-2*c)*y(0)^2+(2*c)*r(2)^2+(-2*b*d)*x(0)+(2*b*c)*y(0)+(-a^2*c-2*a*d^2-b^2*c+2*b*c*d)  ,  (-c^2-d^2)*x(0)+(2*a*c^2+2*a*d^2)]
[(4*b)*x(0)*y(0)+(-4*a)*y(0)^2+(4*a)*r(2)^2+(-2*b^2-4*b*d)*x(0)+(2*a*b+4*b*c)*y(0)+(-a^3+4*a^2*c-a*b^2+6*a*b*d+4*a*d^2-2*b^2*c-4*b*c*d)  ,  (-4*a*c^2-4*a*d^2)]
[x(0)^2+y(0)^2-r(2)^2+(-2*a*c-2*b*d)  ,  0]
[(2*a*c-2*b*d+4*d^2)*y*y(0)+(-2*a*c*d+2*b^2*d-2*b*d^2-2*d^3)*y+(2*a^2*d^2-2*a*b*c*d-2*a*c*d^2-2*b*d^3)  ,  (-2*c^2-2*d^2)*y*y(0)+(b*c^2+b*d^2+c^2*d+d^3)*y+(-2*a^2*c^2-2*a^2*d^2+2*a*c^3+2*a*c*d^2+2*b*c^2*d+2*b*d^3)]
[(4*b*d^2-4*d^3)*y*y(0)+(-4*b^2*d^2+4*b*d^3)*y+(2*a^2*b*d^2-2*a^2*d^3-2*a*b^2*c*d+2*a*c*d^3-2*b^2*d^3+2*b*d^4)  ,  (-2*b*c^2-2*b*d^2+2*c^2*d+2*d^3)*y*y(0)+(b^2*c^2+b^2*d^2-b*c^2*d-b*d^3)*y+(-a^2*b*c^2-a^2*b*d^2+a^2*c^2*d+a^2*d^3+a*b*c^3+a*b*c*d^2-a*c^3*d-a*c*d^3+2*b^2*c^2*d+2*b^2*d^3-2*b*c^2*d^2-2*b*d^4)]
[(4*b*c*d-4*c*d^2)*y*y(0)+(-4*b^2*c*d+4*b*c*d^2)*y+(2*a^2*b*c*d-2*a^2*c*d^2+2*a*b^2*d^2-2*a*d^4-2*b^2*c*d^2+2*b*c*d^3)  ,  (-2*a*c^2-2*a*d^2+2*c^3+2*c*d^2)*y*y(0)+(a*c^2*d+a*d^3-b*c^3-b*c*d^2)*y+(2*a^2*c^3+2*a^2*c*d^2+2*a*b*c^2*d+2*a*b*d^3-2*a*c^4+2*a*d^4-4*b*c^3*d-4*b*c*d^3)]
[(4*b^2*d-4*d^3)*y*y(0)+(-12*b^2*d^2+16*b*d^3-4*d^4)*y+(-2*a*b^2*c-2*b^3*d)*y(0)+(-2*a^3*b*c+2*a^3*c*d-3*a^2*b^2*d+6*a^2*b*d^2-4*a^2*d^3+2*a*b^3*c-2*a*b^2*c*d-2*a*b*c*d^2+6*a*c*d^3+b^4*d+2*b^3*d^2-6*b^2*d^3+6*b*d^4)  ,  (-2*b*c^2-2*b*d^2+2*c^2*d+2*d^3)*y*y(0)+(2*b^2*c^2+2*b^2*d^2-4*b*c^2*d-4*b*d^3+2*c^2*d^2+2*d^4)*y+(2*b*c^2*d+2*b*d^3)*y(0)+(a^2*c^2*d+a^2*d^3+2*a*b*c^3+2*a*b*c*d^2-3*a*c^3*d-3*a*c*d^3-b^3*c^2-b^3*d^2+5*b^2*c^2*d+5*b^2*d^3-7*b*c^2*d^2-7*b*d^4)]
[(4*b^2*c-4*c*d^2)*y*y(0)+(-12*b^2*c*d+16*b*c*d^2-4*c*d^3)*y+(-2*a^2*b*c-2*b^3*c)*y(0)+(a^3*b*d-2*a^3*d^2-a^2*b^2*c+8*a^2*b*c*d-4*a^2*c*d^2-a*b^3*d+4*a*b^2*d^2+2*a*b*d^3-6*a*d^4+b^4*c+2*b^3*c*d-6*b^2*c*d^2+6*b*c*d^3)  ,  (-2*a*c^2-2*a*d^2+2*c^3+2*c*d^2)*y*y(0)+(-2*b*c^3-2*b*c*d^2+2*c^3*d+2*c*d^3)*y+(2*b*c^3+2*b*c*d^2)*y(0)+(a^3*c^2+a^3*d^2+2*a^2*c^3+2*a^2*c*d^2-a*b^2*c^2-a*b^2*d^2+2*a*b*c^2*d+2*a*b*d^3-3*a*c^4+3*a*c^2*d^2+6*a*d^4+2*b^2*c^3+2*b^2*c*d^2-11*b*c^3*d-11*b*c*d^3)]
[(b-d)*y*x(0)+(a-c)*y*y(0)+(-a*b+c*d)*y+(-a^2*c-a*b*d-a*d^2+b*c*d)  ,  (a*c^2+a*d^2)]
[(b-d)*y^2+(-b^2+d^2)*y  ,  0]
[(a-c)*y^2+(-a*b-a*d+b*c+c*d)*y  ,  0]
[x^2-2*x*x(0)+y^2-2*y*y(0)+(2*a*c+2*b*d)  ,  0]
[(8*a*b^2*c-8*b^3*d)*y(0)*r(2)^2+(4*a*b^3*c+4*b^4*d)*r(2)^2+(4*a*b^4*c+4*b^5*d)*y(0)+(2*a^2*b^4*d-4*a*b^5*c-4*a*b^4*c*d-2*b^6*d-4*b^5*d^2)  ,  (-16*b*c^2*d-16*b*d^3)*y(0)^3+(8*b*c^2*d+8*b*d^3)*y(0)*r(2)^2+(32*b^2*c^2*d+32*b^2*d^3+16*b*c^2*d^2+16*b*d^4)*y(0)^2+(-8*a^2*b*c^2-8*a^2*b*d^2+4*a*b*c^3+4*a*b*c*d^2+4*b^3*c^2+4*b^3*d^2-4*b^2*c^2*d-4*b^2*d^3+4*b*c^4-4*b*d^4)*r(2)^2+(2*a^3*c^3+2*a^3*c*d^2-10*a*b^2*c^3-10*a*b^2*c*d^2-2*a*c^5+2*a*c*d^4+4*b^4*c^2+4*b^4*d^2-24*b^3*c^2*d-24*b^3*d^3+6*b^2*c^4-8*b^2*c^2*d^2-14*b^2*d^4-2*b*c^4*d-8*b*c^2*d^3-6*b*d^5)*y(0)+(2*a^4*c^2*d+2*a^4*d^3-5*a^3*b*c^3-5*a^3*b*c*d^2-3*a^3*c^3*d-3*a^3*c*d^3+5*a^2*b^3*c^2+5*a^2*b^3*d^2-7*a^2*b^2*c^2*d-7*a^2*b^2*d^3+10*a^2*b*c^4+10*a^2*b*c^2*d^2-2*a^2*c^4*d+2*a^2*d^5-a*b^3*c^3-a*b^3*c*d^2+13*a*b^2*c^3*d+13*a*b^2*c*d^3-4*a*b*c^5-4*a*b*c^3*d^2+3*a*c^5*d-3*a*c*d^5-3*b^5*c^2-3*b^5*d^2+3*b^4*c^2*d+3*b^4*d^3-5*b^3*c^4+5*b^3*d^4-4*b^2*c^4*d-4*b^2*c^2*d^3-b*c^6-b*c^4*d^2+b*c^2*d^4+b*d^6)]
[(8*a^2*b^3-8*b^5)*y(0)*r(2)^2+(-4*a^2*b^4-4*a*b^4*c+4*b^6+4*b^5*d)*r(2)^2+(-4*a*b^5*c-4*b^6*d)*y(0)+(-2*a^2*b^5*d+4*a*b^6*c+4*a*b^5*c*d+2*b^7*d+4*b^6*d^2)  ,  (-8*a^5-8*a^3*b*d-24*a^3*d^2+8*a^2*b^2*c+8*a^2*b*c*d+8*a*b^4+8*a*b^3*d-8*a*b^2*d^2-16*a*b*d^3-16*a*d^4-8*b^4*c-8*b^3*c*d+16*b^2*c*d^2+16*b*c*d^3)*x(0)*y(0)^2+(8*a^5+8*a^3*b*d+24*a^3*d^2-8*a^2*b^2*c-8*a^2*b*c*d-8*a*b^4-8*a*b^3*d+8*a*b^2*d^2+16*a*b*d^3+16*a*d^4+8*b^4*c+8*b^3*c*d-16*b^2*c*d^2-16*b*c*d^3)*x(0)*r(2)^2+(-16*b*c^2*d^2-16*b*d^4)*y(0)^3+(8*b^3*c^2+8*b^3*d^2+8*b*c^2*d^2+8*b*d^4)*y(0)*r(2)^2+(12*a^6+36*a^3*b*c*d+36*a^3*c*d^2-12*a^2*b^4+60*a^2*b^2*d^2+36*a^2*b*d^3-48*a^2*d^4-36*a*b^3*c*d-36*a*b^2*c*d^2+72*a*b*c*d^3+72*a*c*d^4-12*b^4*d^2-36*b^3*d^3+40*b^2*c^2*d^2+64*b^2*d^4+24*b*c^2*d^3+96*b*d^5)*y(0)^2+(-12*a^6-36*a^3*b*c*d-36*a^3*c*d^2+12*a^2*b^4+20*a^2*b^2*c^2-40*a^2*b^2*d^2-36*a^2*b*d^3+48*a^2*d^4+36*a*b^3*c*d+36*a*b^2*c*d^2-72*a*b*c*d^3-72*a*c*d^4-16*b^4*c^2-4*b^4*d^2-36*b^3*c^2*d-12*b^2*c^4+8*b^2*c^2*d^2-4*b^2*d^4-32*b*c^4*d+28*b*c^2*d^3-12*b*d^5)*r(2)^2+(2*a^5*b^2+2*a^3*b^3*d+6*a^3*b^2*d^2-2*a^2*b^4*c-2*a^2*b^3*c*d-2*a*b^6-2*a*b^5*d+2*a*b^4*d^2+4*a*b^3*d^3+4*a*b^2*d^4+2*b^6*c+2*b^5*c*d-4*b^4*c*d^2-4*b^3*c*d^3)*x(0)+(-6*a^6*b-18*a^3*b^2*c*d-18*a^3*b*c*d^2+6*a^2*b^5-30*a^2*b^3*d^2-18*a^2*b^2*d^3-18*a^2*b*c^4+42*a^2*b*d^4+18*a*b^4*c*d+18*a*b^3*c*d^2-36*a*b^2*c*d^3-4*a*b*c^5-32*a*b*c*d^4+4*b^5*c^2+10*b^5*d^2-16*b^4*c^2*d+2*b^4*d^3-142*b^3*c^4-112*b^3*c^2*d^2+18*b^3*d^4-48*b^2*c^4*d-108*b^2*c^2*d^3-96*b^2*d^5+30*b*c^6+66*b*c^4*d^2-138*b*c^2*d^4-174*b*d^6)*y(0)+(2*a^8-10*a^7*c+2*a^6*b^2+8*a^6*c^2-14*a^6*d^2-2*a^5*c^3+46*a^5*c*d^2-2*a^4*b^4-5*a^4*c^4-92*a^4*c^2*d^2+29*a^4*d^4+10*a^3*b^4*c+10*a^3*b^3*c*d-10*a^3*b^2*c*d^2-35*a^3*b*c^3*d-153*a^3*b*c*d^3+9*a^3*c^5+38*a^3*c^3*d^2+47*a^3*c*d^4-2*a^2*b^6-13*a^2*b^4*c^2+27*a^2*b^4*d^2-8*a^2*b^3*c^2*d+2*a^2*b^3*d^3-65*a^2*b^2*c^4-46*a^2*b^2*c^2*d^2-167*a^2*b^2*d^4+42*a^2*b*c^4*d+190*a^2*b*c^2*d^3+30*a^2*b*d^5+13*a^2*c^6+58*a^2*c^4*d^2-237*a^2*c^2*d^4+54*a^2*d^6-10*a*b^5*c*d+14*a*b^4*c^3-64*a*b^4*c*d^2-91*a*b^3*c^3*d+47*a*b^3*c*d^3+83*a*b^2*c^5-22*a*b^2*c^3*d^2+169*a*b^2*c*d^4+19*a*b*c^5*d+84*a*b*c^3*d^3-171*a*b*c*d^5-15*a*c^7-36*a*c^5*d^2+161*a*c^3*d^4-54*a*c*d^6-b^6*c^2-3*b^6*d^2+18*b^5*c^2*d+8*b^5*d^3+64*b^4*c^4+106*b^4*c^2*d^2-4*b^4*d^4+193*b^3*c^4*d+68*b^3*c^2*d^3+13*b^3*d^5-23*b^2*c^6+61*b^2*c^4*d^2+65*b^2*c^2*d^4+81*b^2*d^6-11*b*c^6*d-121*b*c^4*d^3+193*b*c^2*d^5+67*b*d^7)]
[(2*a*c-2*b*d)*y*r(2)^2+(2*a*b^2*c+2*b^3*d)*y(0)+(a^2*b^2*d-2*a*b^3*c-2*a*b^2*c*d-b^4*d-2*b^3*d^2)  ,  (-4*c^2-4*d^2)*y*y(0)^2+(2*c^2+2*d^2)*y*r(2)^2+(8*b*c^2+8*b*d^2+4*c^2*d+4*d^3)*y*y(0)+(-4*b^2*c^2-4*b^2*d^2-4*b*c^2*d-4*b*d^3-c^4-2*c^2*d^2-d^4)*y+(-2*a^2*c^2-2*a^2*d^2+2*a*c^3+2*a*c*d^2-2*b^2*c^2-2*b^2*d^2)*y(0)+(a^2*b*c^2+a^2*b*d^2+a^2*c^2*d+a^2*d^3-2*a*b*c^3-2*a*b*c*d^2-a*c^3*d-a*c*d^3+2*b^3*c^2+2*b^3*d^2+b^2*c^2*d+b^2*d^3+b*c^4+b*c^2*d^2)]
[(4*b^2*d)*y*r(2)^2+(-4*a*b^2*c)*r(2)^2+(-4*a*b^3*c-4*b^4*d)*y(0)+(-2*a^2*b^3*d+4*a*b^4*c+4*a*b^3*c*d+2*b^5*d+4*b^4*d^2)  ,  (4*c^2*d+4*d^3)*y*y(0)^2+(-2*b*c^2-2*b*d^2-2*c^2*d-2*d^3)*y*r(2)^2+(-8*b*c^2*d-8*b*d^3-4*c^2*d^2-4*d^4)*y*y(0)+(4*b*c^2*d+4*b*d^3)*y(0)^2+(-2*b*c^4+8*b*c^2*d^2+10*b*d^4+3*c^4*d+2*c^2*d^3-d^5)*y+(-4*a^2*b*c^2-4*a^2*b*d^2+4*b^3*c^2+4*b^3*d^2-4*b^2*c^2*d-4*b^2*d^3+4*b*c^4-4*b*c^2*d^2-8*b*d^4)*y(0)+(3*a^3*c^3+3*a^3*c*d^2+3*a^2*b^2*c^2+3*a^2*b^2*d^2+7*a^2*b*c^2*d+7*a^2*b*d^3-a^2*c^4-3*a^2*c^2*d^2-2*a^2*d^4-a*b^2*c^3-a*b^2*c*d^2-2*a*b*c^3*d-2*a*b*c*d^3-2*a*c^5+2*a*c*d^4-3*b^4*c^2-3*b^4*d^2-b^3*c^2*d-b^3*d^3-b^2*c^4+3*b^2*c^2*d^2+4*b^2*d^4-5*b*c^4*d-2*b*c^2*d^3+3*b*d^5)]
[(4*b^2*c)*y*r(2)^2+(-4*b^3*c)*r(2)^2+(2*b^4*d)*x(0)+(2*a^2*b^2*c)*y(0)+(a^3*b^2*d-a^2*b^3*c-2*a^2*b^2*c*d-a*b^4*d+b^5*c-2*b^4*c*d)  ,  (4*c^3+4*c*d^2)*y*y(0)^2+(-2*a*c^2-2*a*d^2-2*c^3-2*c*d^2)*y*r(2)^2+(-8*b*c^3-8*b*c*d^2-4*c^3*d-4*c*d^3)*y*y(0)+(-4*b*c^3-4*b*c*d^2)*y(0)^2+(4*b*c^3+4*b*c*d^2)*r(2)^2+(4*b^2*c^3+4*b^2*c*d^2+4*b*c^3*d+4*b*c*d^3+c^5+2*c^3*d^2+c*d^4)*y+(-2*b^2*c^2*d-2*b^2*d^3)*x(0)+(2*a^2*c^3+2*a^2*c*d^2-2*a*c^4+2*a*d^4+8*b^2*c^3+8*b^2*c*d^2)*y(0)+(-2*a^2*b*c^3-2*a^2*b*c*d^2-3*a^2*c^3*d-3*a^2*c*d^3+a*b^3*c^2+a*b^3*d^2+2*a*b^2*c^2*d+2*a*b^2*d^3+3*a*b*c^4-3*a*b*d^4+3*a*c^4*d+2*a*c^2*d^3-a*d^5-4*b^3*c^3-4*b^3*c*d^2-b^2*c^3*d-b^2*c*d^3-2*b*c^5+2*b*c*d^4)]
[(4*b-4*d)*y*y(0)^2+(-2*b+2*d)*y*r(2)^2+(-4*b^2+4*d^2)*y*y(0)+(2*b^3-2*b^2*d+2*b*d^2-2*d^3)*y+(-2*a*b*c-2*b^2*d)*y(0)+(a^2*b*d-2*a^2*d^2+2*a*b*c*d+2*a*c*d^2+b^3*d+2*b*d^3)  ,  (2*b*c^2+2*b*d^2)*y(0)+(a^2*c^2+a^2*d^2-a*c^3-a*c*d^2-3*b*c^2*d-3*b*d^3)]
[(4*a-4*c)*y*y(0)^2+(-2*a+2*c)*y*r(2)^2+(-4*a*b+4*c*d)*y*y(0)+(2*a*b^2-2*a*d^2+2*b^2*c-4*b*c*d+2*c*d^2)*y+(-2*a^2*c-2*b^2*c)*y(0)+(a^3*d-5*a^2*b*c-2*a^2*c*d-5*a*b^2*d-8*a*b*d^2-2*a*d^3+b^3*c+6*b^2*c*d+2*b*c*d^2)  ,  (2*a*c^2+2*a*d^2-2*c^3-2*c*d^2)*y+(2*a*c^2+2*a*d^2)*y(0)+(2*a*b*c^2+2*a*b*d^2+a*c^2*d+a*d^3+3*b*c^3+3*b*c*d^2)]
[(32*b^3*d)*y(0)^2*r(2)^2+(-16*a*b^2*c)*r(2)^4+(-64*b^4*d)*y(0)*r(2)^2+(24*a*b^4*c+24*b^5*d)*r(2)^2+(8*a*b^5*c+8*b^6*d)*y(0)+(4*a^2*b^5*d-8*a*b^6*c-8*a*b^5*c*d-4*b^7*d-8*b^6*d^2)  ,  (32*b*c^2*d+32*b*d^3)*y(0)^4+(-16*b*c^2*d-16*b*d^3)*y(0)^2*r(2)^2+(-128*b^2*c^2*d-128*b^2*d^3-32*b*c^2*d^2-32*b*d^4)*y(0)^3+(-8*a*b*c^3-8*a*b*c*d^2-16*b^3*c^2-16*b^3*d^2+40*b^2*c^2*d+40*b^2*d^3+8*b*c^4-8*b*d^4)*y(0)*r(2)^2+(96*b^2*c^2*d^2+96*b^2*d^4+160*b*c^2*d^3+160*b*d^5)*y(0)^2+(4*a^3*c^3+4*a^3*c*d^2-44*a^2*b^2*c^2-44*a^2*b^2*d^2+132*a*b^2*c^3+132*a*b^2*c*d^2-4*a*c^5+4*a*c*d^4+28*b^4*c^2+28*b^4*d^2-16*b^3*c^2*d-16*b^3*d^3-8*b^2*c^2*d^2-8*b^2*d^4-80*b*c^4*d-72*b*c^2*d^3+8*b*d^5)*r(2)^2+(-36*a^2*b*c^4+36*a^2*b*d^4+60*a*b*c^5-60*a*b*c*d^4+24*b^5*c^2+24*b^5*d^2+208*b^4*c^2*d+208*b^4*d^3+44*b^3*c^4+112*b^3*c^2*d^2+68*b^3*d^4+40*b^2*c^4*d-320*b^2*c^2*d^3-360*b^2*d^5-24*b*c^6-76*b*c^4*d^2-120*b*c^2*d^4-68*b*d^6)*y(0)+(11*a^4*c^4+22*a^4*c^2*d^2+11*a^4*d^4-42*a^3*b*c^3*d-42*a^3*b*c*d^3-12*a^3*c^5-24*a^3*c^3*d^2-12*a^3*c*d^4+22*a^2*b^4*c^2+22*a^2*b^4*d^2-56*a^2*b^3*c^2*d-56*a^2*b^3*d^3+58*a^2*b^2*c^4+52*a^2*b^2*c^2*d^2-6*a^2*b^2*d^4+62*a^2*b*c^4*d+44*a^2*b*c^2*d^3-18*a^2*b*d^5-11*a^2*c^6-11*a^2*c^4*d^2+11*a^2*c^2*d^4+11*a^2*d^6-124*a*b^4*c^3-124*a*b^4*c*d^2+154*a*b^3*c^3*d+154*a*b^3*c*d^3-168*a*b^2*c^5-92*a*b^2*c^3*d^2+76*a*b^2*c*d^4+36*a*b*c^5*d-36*a*b*c*d^5+12*a*c^7+12*a*c^5*d^2-12*a*c^3*d^4-12*a*c*d^6-18*b^6*c^2-18*b^6*d^2-100*b^5*c^2*d-100*b^5*d^3+49*b^4*c^4-90*b^4*c^2*d^2-139*b^4*d^4-118*b^3*c^4*d+8*b^3*c^2*d^3+126*b^3*d^5+89*b^2*c^6+15*b^2*c^4*d^2+55*b^2*c^2*d^4+129*b^2*d^6-36*b*c^6*d+76*b*c^4*d^3+108*b*c^2*d^5-4*b*d^7)]
[(32*b^3*c)*y(0)^2*r(2)^2+(-16*b^3*c)*r(2)^4+(8*b^4*d)*x(0)*r(2)^2+(-24*b^4*c)*y(0)*r(2)^2+(16*b^5*c)*r(2)^2+(-4*b^6*d)*x(0)+(-4*a^2*b^4*c)*y(0)+(-2*a^3*b^4*d+2*a^2*b^5*c+4*a^2*b^4*c*d+2*a*b^6*d-2*b^7*c+4*b^6*c*d)  ,  (32*b*c^3+32*b*c*d^2)*y(0)^4+(-48*b*c^3-48*b*c*d^2)*y(0)^2*r(2)^2+(16*b*c^3+16*b*c*d^2)*r(2)^4+(-8*b^2*c^2*d-8*b^2*d^3)*x(0)*r(2)^2+(-80*b^2*c^3-80*b^2*c*d^2-32*b*c^3*d-32*b*c*d^3)*y(0)^3+(-32*a*b^2*c^2-32*a*b^2*d^2+64*b^2*c^3+64*b^2*c*d^2+32*b*c^3*d+32*b*c*d^3)*y(0)*r(2)^2+(48*b^2*c^3*d+48*b^2*c*d^3+80*b*c^3*d^2+80*b*c*d^4)*y(0)^2+(4*a*b^3*c^2+4*a*b^3*d^2-16*a*b*c^4+16*a*b*d^4+32*b^3*c^3+32*b^3*c*d^2-24*b^2*c^3*d-24*b^2*c*d^3+20*b*c^5-48*b*c^3*d^2-68*b*c*d^4)*r(2)^2+(-8*b^5*c^2-8*b^5*d^2-24*b^4*c^2*d-24*b^4*d^3+14*b^3*c^2*d^2+14*b^3*d^4+22*b^2*c^2*d^3+22*b^2*d^5)*x(0)+(8*a^3*c^4-8*a^3*d^4+24*a*b^4*c^2+24*a*b^4*d^2+46*a*b^2*c^4-46*a*b^2*d^4-8*a*c^6-8*a*d^6-24*b^4*c^3-24*b^4*c*d^2+142*b^3*c^3*d+142*b^3*c*d^3-50*b^2*c^5-114*b^2*c^3*d^2-64*b^2*c*d^4+24*b*c^5*d-56*b*c^3*d^3-80*b*c*d^5)*y(0)+(8*a^4*c^3*d+8*a^4*c*d^3+9*a^3*b*c^4+26*a^3*b*c^2*d^2+17*a^3*b*d^4-12*a^3*c^4*d-8*a^3*c^2*d^3+4*a^3*d^5-38*a^2*b^3*c^3-38*a^2*b^3*c*d^2+36*a^2*b^2*c^3*d+36*a^2*b^2*c*d^3-32*a^2*b*c^5-26*a^2*b*c^3*d^2+6*a^2*b*c*d^4-4*a^2*c^5*d+4*a^2*c^3*d^3+8*a^2*c*d^5+2*a*b^5*c^2+2*a*b^5*d^2-16*a*b^4*c^2*d-16*a*b^4*d^3+25*a*b^3*c^4+48*a*b^3*c^2*d^2+23*a*b^3*d^4-66*a*b^2*c^4*d-46*a*b^2*c^2*d^3+20*a*b^2*d^5+27*a*b*c^6-9*a*b*c^4*d^2-19*a*b*c^2*d^4+17*a*b*d^6+8*a*c^6*d-4*a*c^4*d^3-8*a*c^2*d^5+4*a*d^7+6*b^5*c^3+6*b^5*c*d^2-2*b^4*c^3*d-2*b^4*c*d^3+3*b^3*c^5-74*b^3*c^3*d^2-77*b^3*c*d^4+27*b^2*c^5*d+38*b^2*c^3*d^3+11*b^2*c*d^5-6*b*c^7+4*b*c^5*d^2+30*b*c^3*d^4+20*b*c*d^6)]
[(64*b^5)*y(0)^2*r(2)^2+(-32*a^2*b^3)*r(2)^4+(-64*b^6-128*b^5*d)*y(0)*r(2)^2+(16*a^2*b^5+16*b^7+64*b^6*d)*r(2)^2  ,  (32*a^5+32*a^3*b*d+96*a^3*d^2-32*a^2*b^2*c-32*a^2*b*c*d-32*a*b^4-32*a*b^3*d+32*a*b^2*d^2+64*a*b*d^3+64*a*d^4+32*b^4*c+32*b^3*c*d-64*b^2*c*d^2-64*b*c*d^3)*x(0)*y(0)^3+(-32*a^5-32*a^3*b*d-96*a^3*d^2+32*a^2*b^2*c+32*a^2*b*c*d+32*a*b^4+32*a*b^3*d-32*a*b^2*d^2-64*a*b*d^3-64*a*d^4-32*b^4*c-32*b^3*c*d+64*b^2*c*d^2+64*b*c*d^3)*x(0)*y(0)*r(2)^2+(64*b*c^2*d^2+64*b*d^4)*y(0)^4+(-64*b*c^2*d^2-64*b*d^4)*y(0)^2*r(2)^2+(-16*a^2*b*c^2-16*a^2*b*d^2+16*b*c^4+16*b*c^2*d^2)*r(2)^4+(16*a^5*b+16*a^3*b^2*d+48*a^3*b*d^2-16*a^2*b^3*c-16*a^2*b^2*c*d-16*a*b^5-16*a*b^4*d+16*a*b^3*d^2+32*a*b^2*d^3+32*a*b*d^4+16*b^5*c+16*b^4*c*d-32*b^3*c*d^2-32*b^2*c*d^3)*x(0)*r(2)^2+(-64*a^6-192*a^3*b*c*d-192*a^3*c*d^2+64*a^2*b^4-320*a^2*b^2*d^2-192*a^2*b*d^3+256*a^2*d^4+192*a*b^3*c*d+192*a*b^2*c*d^2-384*a*b*c*d^3-384*a*c*d^4+64*b^4*d^2+192*b^3*d^3-192*b^2*c^2*d^2-320*b^2*d^4-192*b*c^2*d^3-576*b*d^5)*y(0)^3+(64*a^6+192*a^3*b*c*d+8*a^3*c^3+200*a^3*c*d^2-64*a^2*b^4+320*a^2*b^2*d^2+192*a^2*b*d^3-256*a^2*d^4-192*a*b^3*c*d-192*a*b^2*c*d^2+384*a*b*c*d^3-8*a*c^5+392*a*c*d^4-32*b^4*c^2-96*b^4*d^2+72*b^3*c^2*d-120*b^3*d^3-16*b^2*c^4+32*b^2*c^2*d^2+176*b^2*d^4+104*b*c^4*d-80*b*c^2*d^3+200*b*d^5)*y(0)*r(2)^2+(32*a^6*b+96*a^3*b^2*c*d+96*a^3*b*c*d^2-32*a^2*b^5+160*a^2*b^3*d^2+96*a^2*b^2*d^3-128*a^2*b*d^4-96*a*b^4*c*d-96*a*b^3*c*d^2+192*a*b^2*c*d^3+192*a*b*c*d^4-32*b^5*d^2-96*b^4*d^3+64*b^3*d^4+448*b^2*c^2*d^3+640*b^2*d^5+320*b*c^2*d^4+320*b*d^6)*y(0)^2+(-56*a^2*b^3*c^2-56*a^2*b^3*d^2-20*a*b^3*c^3-20*a*b^3*c*d^2+36*a*b*c^5-36*a*b*c*d^4+104*b^5*c^2+104*b^5*d^2+108*b^4*c^2*d+108*b^4*d^3+252*b^3*c^4+232*b^3*c^2*d^2-20*b^3*d^4+268*b^2*c^4*d+112*b^2*c^2*d^3-156*b^2*d^5-52*b*c^6+228*b*c^4*d^2+212*b*c^2*d^4-68*b*d^6)*r(2)^2+(-4*a^5*b^3-4*a^3*b^4*d-12*a^3*b^3*d^2+4*a^2*b^5*c+4*a^2*b^4*c*d+4*a*b^7+4*a*b^6*d-4*a*b^5*d^2-8*a*b^4*d^3-8*a*b^3*d^4-4*b^7*c-4*b^6*c*d+8*b^5*c*d^2+8*b^4*c*d^3)*x(0)+(-12*a^8+56*a^7*c-8*a^6*b^2-40*a^6*c^2+10*a^5*c^3+12*a^4*b^4-6*a^4*c^4-56*a^3*b^4*c-48*a^3*b^3*c*d+64*a^3*b^2*c*d^2+32*a^3*b*c*d^3-2*a^3*c^5-210*a^3*c*d^4+8*a^2*b^6-128*a^2*b^4*d^2-48*a^2*b^3*d^3+240*a^2*b^2*d^4+32*a^2*b*d^5-34*a^2*c^6-302*a^2*d^6+48*a*b^5*c*d+170*a*b^4*c*d^2-128*a*b^3*c*d^3+402*a*b^2*c^5-774*a*b^2*c*d^4+64*a*b*c*d^5+24*a*c^7+88*a*c*d^6+104*b^6*c^2+112*b^6*d^2-18*b^5*c^2*d+30*b^5*d^3+920*b^4*c^2*d^2+1006*b^4*d^4+1752*b^3*c^4*d+612*b^3*c^2*d^3-1268*b^3*d^5+94*b^2*c^6+1386*b^2*c^4*d^2+1056*b^2*c^2*d^4-440*b^2*d^6-584*b*c^6*d-1664*b*c^4*d^3+288*b*c^2*d^5+1432*b*d^7)*y(0)+(-2*a^8*b+40*a^7*c*d-2*a^6*b^3-106*a^6*c^2*d+105*a^6*d^3+199*a^5*c^3*d-419*a^5*c*d^3+2*a^4*b^5+11*a^4*c^4*d+1040*a^4*c^2*d^3-256*a^4*d^5-50*a^3*b^4*c*d-10*a^3*b^3*c*d^2+94*a^3*b^2*c*d^3+226*a^3*b*c^5+235*a^3*b*c^3*d^2+1203*a^3*b*c*d^4-217*a^3*c^5*d+8*a^3*c^3*d^3+9*a^3*c*d^5+2*a^2*b^7+42*a^2*b^5*c^2+24*a^2*b^5*d^2+169*a^2*b^4*c^2*d-52*a^2*b^4*d^3-207*a^2*b^3*c^4-496*a^2*b^3*c^2*d^2-251*a^2*b^3*d^4+1157*a^2*b^2*c^4*d+462*a^2*b^2*c^2*d^3+921*a^2*b^2*d^5-230*a^2*b*c^6+266*a^2*b*c^4*d^2-546*a^2*b*c^2*d^4+122*a^2*b*d^6-127*a^2*c^6*d-1575*a^2*c^4*d^3+1726*a^2*c^2*d^5-240*a^2*d^7+10*a*b^6*c*d+8*a*b^5*c^3+18*a*b^5*c*d^2-849*a*b^4*c^3*d-185*a*b^4*c*d^3+20*a*b^3*c^5+2067*a*b^3*c^3*d^2+833*a*b^3*c*d^4-1991*a*b^2*c^5*d+284*a*b^2*c^3*d^3-273*a*b^2*c*d^5-8*a*b*c^7-194*a*b*c^5*d^2-1890*a*b*c^3*d^4+684*a*b*c*d^6+200*a*c^7*d+834*a*c^5*d^3-1380*a*c^3*d^5+346*a*c*d^7-74*b^7*c^2-72*b^7*d^2-89*b^6*c^2*d-79*b^6*d^3-86*b^5*c^4-648*b^5*c^2*d^2-572*b^5*d^4-190*b^4*c^4*d-726*b^4*c^2*d^3-43*b^4*d^5-99*b^3*c^6-3303*b^3*c^4*d^2-1433*b^3*c^2*d^4+603*b^3*d^6+762*b^2*c^6*d-956*b^2*c^4*d^3-1285*b^2*c^2*d^5-593*b^2*d^7+12*b*c^8-138*b*c^6*d^2+1940*b*c^4*d^4-1002*b*c^2*d^6-732*b*d^8)]
[(64*a*b^4)*y(0)^2*r(2)^2+(-32*a*b^4)*r(2)^4+(16*b^5*d)*x(0)*r(2)^2+(-64*a*b^5-112*b^5*c)*y(0)*r(2)^2+(32*a*b^6-64*b^6*c)*r(2)^2+(56*b^7*d)*x(0)+(-8*a^2*b^5*c-64*b^7*c)*y(0)+(-4*a^3*b^5*d+4*a^2*b^6*c+8*a^2*b^5*c*d-60*a*b^7*d+60*b^8*c+8*b^7*c*d)  ,  (-32*a^5-32*a^3*b*d-96*a^3*d^2+32*a^2*b^2*c+32*a^2*b*c*d+32*a*b^4+32*a*b^3*d-32*a*b^2*d^2-64*a*b*d^3-64*a*d^4-32*b^4*c-32*b^3*c*d+64*b^2*c*d^2+64*b*c^3*d+128*b*c*d^3)*y(0)^4+(64*a^5+64*a^3*b*d+192*a^3*d^2-64*a^2*b^2*c-64*a^2*b*c*d-64*a*b^4-64*a*b^3*d+64*a*b^2*d^2+128*a*b*d^3+128*a*d^4+64*b^4*c+64*b^3*c*d-128*b^2*c*d^2-128*b*c^3*d-256*b*c*d^3)*y(0)^2*r(2)^2+(-32*a^5-32*a^3*b*d-96*a^3*d^2+32*a^2*b^2*c+32*a^2*b*c*d+32*a*b^4+32*a*b^3*d+16*a*b^2*c^2-16*a*b^2*d^2-64*a*b*d^3-64*a*d^4-32*b^4*c-32*b^3*c*d+64*b^2*c*d^2+48*b*c^3*d+112*b*c*d^3)*r(2)^4+(-24*b^3*c^2*d-24*b^3*d^3-24*b^2*c^2*d^2-24*b^2*d^4+32*b*c^2*d^3+32*b*d^5)*x(0)*r(2)^2+(64*a^5*b+64*a^3*b^2*d+192*a^3*b*d^2-64*a^2*b^3*c-64*a^2*b^2*c*d-64*a*b^5-64*a*b^4*d+64*a*b^3*d^2+128*a*b^2*d^3+128*a*b*d^4+64*b^5*c+64*b^4*c*d-128*b^3*c*d^2-192*b^2*c^3*d-320*b^2*c*d^3-160*b*c^3*d^2-160*b*c*d^4)*y(0)^3+(-64*a^5*b-64*a^3*b^2*d-192*a^3*b*d^2+64*a^2*b^3*c+64*a^2*b^2*c*d+64*a*b^5+64*a*b^4*d+32*a*b^3*c^2-32*a*b^3*d^2-128*a*b^2*d^3+8*a*b*c^4-136*a*b*d^4-64*b^5*c-64*b^4*c*d-168*b^3*c^3-40*b^3*c*d^2+200*b^2*c^3*d+328*b^2*c*d^3-8*b*c^5+160*b*c^3*d^2+168*b*c*d^4)*y(0)*r(2)^2+(-48*a^5*b^2-48*a^3*b^3*d-144*a^3*b^2*d^2+48*a^2*b^4*c+48*a^2*b^3*c*d+48*a*b^6+48*a*b^5*d-48*a*b^4*d^2-96*a*b^3*d^3-96*a*b^2*d^4-48*b^6*c-48*b^5*c*d+96*b^4*c*d^2+96*b^3*c*d^3+256*b^2*c^3*d^2+256*b^2*c*d^4+320*b*c^3*d^3+320*b*c*d^5)*y(0)^2+(32*a^5*b^2+32*a^3*b^3*d+96*a^3*b^2*d^2-4*a^3*c^4+4*a^3*d^4-32*a^2*b^4*c-32*a^2*b^3*c*d-32*a*b^6-32*a*b^5*d+40*a*b^4*c^2+72*a*b^4*d^2+64*a*b^3*d^3+64*a*b^2*d^4+4*a*c^6+4*a*d^6+32*b^6*c+32*b^5*c*d-80*b^4*c^3-144*b^4*c*d^2+392*b^3*c^3*d+328*b^3*c*d^3-100*b^2*c^5-72*b^2*c^3*d^2+28*b^2*c*d^4+228*b*c^5*d-132*b*c^3*d^3-360*b*c*d^5)*r(2)^2+(16*b^6*c^2+16*b^6*d^2+52*b^5*c^2*d+52*b^5*d^3-184*b^4*c^2*d^2-184*b^4*d^4-56*b^3*c^2*d^3-56*b^3*d^5+126*b^2*c^2*d^4+126*b^2*d^6-10*b*c^2*d^5-10*b*d^7)*x(0)+(16*a^5*b^3+16*a^3*b^4*d+48*a^3*b^3*d^2-16*a^2*b^5*c-16*a^2*b^4*c*d-12*a^2*b*c^5+12*a^2*b*c*d^4-16*a*b^7-16*a*b^6*d-16*a*b^5*c^2+32*a*b^4*d^3+32*a*b^3*d^4+32*a*b*c^6+32*a*b*d^6+16*b^7*c+16*b^6*c*d+36*b^5*c^3+4*b^5*c*d^2+24*b^4*c^3*d-8*b^4*c*d^3+44*b^3*c^5+488*b^3*c^3*d^2+444*b^3*c*d^4-14*b^2*c^5*d-250*b^2*c^3*d^3-236*b^2*c*d^5-52*b*c^7+42*b*c^5*d^2-270*b*c^3*d^4-364*b*c*d^6)*y(0)+(2*a^9-16*a^8*c+32*a^7*c^2-8*a^7*d^2-16*a^6*c^3-20*a^6*c*d^2-4*a^5*b^4-2*a^5*c^4+140*a^5*c^2*d^2-42*a^5*d^4-2*a^4*c^5-152*a^4*c^3*d^2+150*a^4*c*d^4-18*a^3*b^5*d+22*a^3*b^4*d^2+28*a^3*b^3*d^3-68*a^3*b^2*d^4+54*a^3*b*c^4*d-62*a^3*b*c^2*d^3+34*a^3*b*d^5+22*a^3*c^6+15*a^3*c^4*d^2+2*a^3*c^2*d^4-33*a^3*d^6+18*a^2*b^6*c+18*a^2*b^5*c*d+58*a^2*b^4*c^3-30*a^2*b^4*c*d^2-68*a^2*b^3*c^3*d-96*a^2*b^3*c*d^3+42*a^2*b^2*c^5+140*a^2*b^2*c^3*d^2+68*a^2*b^2*c*d^4-83*a^2*b*c^5*d+96*a^2*b*c^3*d^3+29*a^2*b*c*d^5-44*a^2*c^7+30*a^2*c^5*d^2-260*a^2*c^3*d^4+154*a^2*c*d^6+2*a*b^8+18*a*b^7*d-76*a*b^6*c^2-58*a*b^6*d^2-14*a*b^5*c^2*d-78*a*b^5*d^3-84*a*b^4*c^4+50*a*b^4*c^2*d^2+158*a*b^4*d^4+48*a*b^3*c^4*d+270*a*b^3*c^2*d^3+128*a*b^3*d^5-26*a*b^2*c^6-207*a*b^2*c^4*d^2-56*a*b^2*c^2*d^4-161*a*b^2*d^6-39*a*b*c^6*d+43*a*b*c^4*d^3-193*a*b*c^2*d^5+25*a*b*d^7+26*a*c^8+a*c^6*d^2+153*a*c^4*d^4-123*a*c^2*d^6-a*d^8-2*b^8*c-18*b^7*c*d+84*b^6*c^3+84*b^6*c*d^2-150*b^5*c^3*d-86*b^5*c*d^3+56*b^4*c^5+52*b^4*c^3*d^2-90*b^4*c*d^4-147*b^3*c^5*d-578*b^3*c^3*d^3-337*b^3*c*d^5+22*b^2*c^7+71*b^2*c^5*d^2-72*b^2*c^3*d^4+67*b^2*c*d^6+24*b*c^7*d-155*b*c^5*d^3+276*b*c^3*d^5+155*b*c*d^7)]

Module Groebner basis: 
[(2*a*d-2*b*c)*y(0)+(-a^2*c-2*a*b*d-2*a*d^2+b^2*c+2*b*c*d), (a*c^2+a*d^2)], 
[(2*d^2)*x(0)+(-2*c*d)*y(0)+(-2*a*d^2+2*b*c*d), (-2*c^2-2*d^2)*x(0)+(2*a*c^2+2*a*d^2+c^3+c*d^2)], 
[(2*b^3*d-6*b^2*d^2+6*b*d^3-2*d^4)*y+(-a^3*b*c+a^3*c*d-2*a^2*b^2*d+3*a^2*b*d^2-a^2*d^3+a*b^3*c-a*b^2*c*d-2*a*b*c*d^2+2*a*c*d^3+b^3*d^2-3*b^2*d^3+2*b*d^4), (b^2*c^2+b^2*d^2-2*b*c^2*d-2*b*d^3+c^2*d^2+d^4)*y+(a*b*c^3+a*b*c*d^2-a*c^3*d-a*c*d^3-b^3*c^2-b^3*d^2+3*b^2*c^2*d+3*b^2*d^3-2*b*c^2*d^2-2*b*d^4)], 
[(b-d)*x+(-a+c)*y+(2*a*d-2*b*c), 0], 
[(4*d^2)*r(2)^2 , (4*c^2+4*d^2)*y(0)^2+(-4*c^2-4*d^2)*r(2)^2+(-8*b*c^2-8*b*d^2-4*c^2*d-4*d^3)*y(0)+(4*b^2*c^2+4*b^2*d^2+4*b*c^2*d+4*b*d^3+c^4+2*c^2*d^2+d^4)].

LPP Set of Module Groebner Basis under specialization:
[ y(0) ]
[ x(0) ]
[ y ]
[ x ]
[ r(2)^2 ]

Branch 41:
constraints: c^2+d^2=0,a*d-b*c=0,a*c+b*d=0,a^2+b^2=0,c!=0,b!=0,-a-b+c+d!=0,c+d!=0,b+d!=0,b-d!=0,c-d!=0,-a+b+c-d!=0,d!=0,d!=0,b-d!=0,
RGB from KSW:
[(2*c)*x(0)+(2*d)*y(0)  ,  (-2*a*c-2*b*d-c^2-d^2)]
[(2*a)*x(0)+(2*b)*y(0)  ,  (-a^2-2*a*c-b^2-2*b*d)]
[(2*d^2)*x(0)+(-2*c*d)*y(0)  ,  (-2*c^2-2*d^2)*x(0)+(2*a*c^2+2*b*c*d+c^3+c*d^2)]
[(2*b*d)*x(0)+(-2*b*c)*y(0)  ,  (-2*a*c-2*b*d)*x(0)+(a^2*c+2*a*c^2+b^2*c+2*b*c*d)]
[(2*b^2)*x(0)+(-2*a*b)*y(0)  ,  (-2*a^2-2*b^2)*x(0)+(a^3+2*a^2*c+a*b^2+2*a*b*d)]
[(2*b*d-2*d^2)*y  ,  (-a*d+b*c)*x+(-a*c-b*d+c^2+d^2)*y+(2*a*c*d-2*b*c^2)]
[(2*b*c-2*c*d)*y  ,  (-a*c-b*d+c^2+d^2)*x+(a*d-b*c)*y+(-2*a*d^2+2*b*c*d)]
[(2*b^2-2*d^2)*y  ,  (-2*a*d+2*b*c)*x+(-a^2-b^2+c^2+d^2)*y+(2*a^2*d-2*a*b*c+2*a*c*d-2*b*c^2)]
[(2*a*b-2*c*d)*y  ,  (-a^2-b^2+c^2+d^2)*x+(-2*a*b*d-2*a*d^2+2*b^2*c+2*b*c*d)]
[(b-d)*x+(-a+c)*y  ,  (2*a*d-2*b*c)]
[(a-c)*x+(-b+d)*y  ,  0]
[(4*d^2)*r(2)^2  ,  (4*c^2+4*d^2)*y(0)^2+(-4*c^2-4*d^2)*r(2)^2+(-8*b*c^2-8*b*d^2-4*c^2*d-4*d^3)*y(0)+(4*b^2*c^2+4*b^2*d^2+4*b*c^2*d+4*b*d^3+c^4+2*c^2*d^2+d^4)]
[(2*c*d)*r(2)^2  ,  (2*c^2+2*d^2)*x(0)*y(0)+(-2*b*c^2-2*b*d^2-c^2*d-d^3)*x(0)+(-2*a*c^2-2*b*c*d-c^3-c*d^2)*y(0)+(-a^2*c*d+2*a*b*c^2+2*a*c^2*d+b^2*c*d+b*c^3+3*b*c*d^2)]
[(4*b*d)*r(2)^2  ,  (4*a*c+4*b*d)*y(0)^2+(-4*a*c-4*b*d)*r(2)^2+(-6*a*b*c-6*b^2*d-6*b*c^2-6*b*d^2)*y(0)+(a^3*c-4*a^2*c^2+3*a*b^2*c-2*a*b*c*d+4*a*c^3+2*b^3*d+3*b^2*c^2+5*b^2*d^2+6*b*c^2*d+2*b*d^3)]
[(2*b*c)*r(2)^2  ,  (2*a*c+2*b*d)*x(0)*y(0)+(-2*a*b*c-2*b^2*d-b*c^2-b*d^2)*x(0)+(-a^2*c-2*a*c^2-b^2*c-2*b*c*d)*y(0)+(4*a*b*c^2+4*b^2*c*d)]
[(4*b^2)*r(2)^2  ,  (4*a^2+4*b^2)*y(0)^2+(-4*a^2-4*b^2)*r(2)^2+(-4*a^2*b-8*a*b*c-4*b^3-8*b^2*d)*y(0)+(a^4-4*a^3*c+2*a^2*b^2-4*a^2*b*d+4*a^2*c^2+4*a*b^2*c+8*a*b*c*d+b^4+4*b^3*d+4*b^2*d^2)]
[(2*a*b)*r(2)^2  ,  (2*a^2+2*b^2)*x(0)*y(0)+(-a^2*b-2*a*b*c-b^3-2*b^2*d)*x(0)+(-a^3-2*a^2*c-a*b^2-2*b^2*c)*y(0)+(3*a^2*b*c+2*a*b^2*d+a*b*c^2-a*b*d^2+b^3*c+2*b^2*c*d)]
[(2*d)*x(0)*y(0)+(-2*c)*y(0)^2+(2*c)*r(2)^2  ,  (-2*a*c-2*b*d-c^2-d^2)*x(0)+(4*a*c^2+4*b*c*d)]
[(2*b)*x(0)*y(0)+(-2*a)*y(0)^2+(2*a)*r(2)^2  ,  (-a^2-2*a*c-b^2-2*b*d)*x(0)+(4*a^2*c+4*a*b*d)]
[x(0)^2+y(0)^2-r(2)^2  ,  (-2*a*c-2*b*d)]
[(2*b-2*d)*y*x(0)+(2*a-2*c)*y*y(0)  ,  (-a^2-b^2+c^2+d^2)*x+(-2*a^2*c-4*a*b*d+2*a*c^2-2*a*d^2+2*b^2*c+4*b*c*d)]
[(2*b-2*d)*y^2  ,  (-2*a*d+2*b*c)*x+(-a^2-b^2+c^2+d^2)*y+(2*a^2*d-2*a*b*c+2*a*c*d-2*b*c^2)]
[(2*a-2*c)*y^2  ,  (-a^2-b^2+c^2+d^2)*x+(-2*a*d+2*b*c)*y+(-2*a*b*d-2*a*d^2+2*b^2*c+2*b*c*d)]
[x^2-2*x*x(0)+y^2-2*y*y(0)  ,  (2*a*c+2*b*d)]
[(4*b-4*d)*y*y(0)^2+(-2*b+2*d)*y*r(2)^2  ,  (-2*a^2-2*b^2+2*c^2+2*d^2)*y*y(0)+(-2*a*d^2+2*b*c*d)*x+(a^2*b-3*a*b*c+3*a*c*d+b^3-3*b^2*d+3*b*d^2-c^2*d-d^3)*y+(-2*a*b*c-2*b^2*d+2*b*c^2+2*b*d^2)*y(0)+(2*a^3*c+2*a^2*b*d+a^2*c^2+2*a^2*d^2+a*b^2*c-3*a*c^3+2*a*c*d^2+b^3*d-b^2*c^2-6*b*c^2*d-b*d^3)]
[(4*a-4*c)*y*y(0)^2+(-2*a+2*c)*y*r(2)^2  ,  (2*a^2+2*b^2-2*c^2-2*d^2)*y*x(0)+(-2*a*c*d-2*b*d^2+2*c^2*d+2*d^3)*x+(-a^3-a*b^2-a*b*d+2*a*c^2+3*a*d^2+b^2*c-b*c*d-c^3-c*d^2)*y+(-2*a^2*c+2*a*c^2-2*b^2*c+2*b*c*d)*y(0)+(a^3*d-8*a^2*b*c-4*a^2*c*d-8*a*b^2*d+5*a*b*c^2-7*a*b*d^2+3*a*c^2*d-4*a*d^3+b^3*c+8*b^2*c*d+3*b*c^3+10*b*c*d^2)]

Module Groebner basis: 
[(2*d^2)*x(0)+(-2*c*d)*y(0), (-2*c^2-2*d^2)*x(0)+(2*a*c^2+2*b*c*d+c^3+c*d^2)], 
[(2*b*d-2*d^2)*y, (-a*d+b*c)*x+(-a*c-b*d+c^2+d^2)*y+(2*a*c*d-2*b*c^2)], 
[(b-d)*x+(-a+c)*y, (2*a*d-2*b*c)], 
[(4*d^2)*r(2)^2 , (4*c^2+4*d^2)*y(0)^2+(-4*c^2-4*d^2)*r(2)^2+(-8*b*c^2-8*b*d^2-4*c^2*d-4*d^3)*y(0)+(4*b^2*c^2+4*b^2*d^2+4*b*c^2*d+4*b*d^3+c^4+2*c^2*d^2+d^4)].

LPP Set of Module Groebner Basis under specialization:
[ x(0) ]
[ y ]
[ x ]
[ r(2)^2 ]




Comprehensive Groebner Basis: 

(a^4*b*d-a^4*d^2-a^3*b^2*c+a^3*c*d^2-a^2*b^3*d+a^2*b^2*c^2+a^2*b^2*d^2-2*a^2*b*c^2*d+a^2*b*d^3+a^2*c^2*d^2-a^2*d^4+a*b^4*c+a*b^2*c^3-2*a*b^2*c*d^2-a*c^3*d^2+a*c*d^4-b^4*c^2+b^3*c^2*d-b^2*c^4+b^2*c^2*d^2+b*c^4*d-b*c^2*d^3),
(a^4*b*c-a^4*c*d+a^3*b^2*d-a^3*b*c^2-a^3*b*d^2+a^3*c^2*d-a^2*b^3*c-a^2*b*c^3+2*a^2*b*c*d^2+a^2*c^3*d-a^2*c*d^3-a*b^4*d+a*b^3*c^2+a*b^3*d^2-2*a*b^2*c^2*d+a*b^2*d^3+a*b*c^4-a*b*d^4-a*c^4*d+a*c^2*d^3+b^4*c*d-b^3*c*d^2+b^2*c^3*d-b^2*c*d^3-b*c^3*d^2+b*c*d^4),
(a*d-b*c)*y(0)+(-a^2*c-2*a*b*d+a*c^2-a*d^2+b^2*c+2*b*c*d)/2,
(a^3*d-a^2*b*c+a^2*b*d-a^2*d^2-a*b^2*c+b^2*c^2)*y(0)+(-a^4*c-a^3*b*c-2*a^3*b*d+a^3*c^2+a^3*c*d-a^3*d^2+a^2*b^2*c-2*a^2*b^2*d+2*a^2*b*c^2+2*a^2*b*c*d+a^2*b*d^2-a^2*c^2*d+a^2*d^3+a*b^3*c+3*a*b^2*c*d-a*b*c^3-a*b*c*d^2-b^3*c^2-2*b^2*c^2*d)/2,
(a^3*b*c-a^2*b*c^2-a*b*c^3-b^4*d+b^3*d^2+b^2*d^3+b*c^4-b*d^4)*y(0)+(-a^4*c^2-3*a^3*b*c*d+a^3*c^3+a^2*b^3*d-a^2*b^2*d^2+4*a^2*b*c^2*d+a^2*c^4-a^2*c^2*d^2-a*b^3*c*d+a*b^2*c^3+2*a*b^2*c*d^2+a*b*c^3*d-a*b*c*d^3-a*c^5+a*c^3*d^2+b^5*d-2*b^3*d^3-b^2*c^4-b^2*c^2*d^2-2*b*c^4*d+b*c^2*d^3+b*d^5)/2,
(b^4*c^4-b^4*d^4-b^3*c^4*d+b^3*d^5-b^2*c^4*d^2+b^2*d^6+b*c^4*d^3-b*d^7)*y(0)+(a^2*b^3*c^4+2*a^2*b^3*c^2*d^2+a^2*b^3*d^4-a^2*b^2*c^4*d-2*a^2*b^2*c^2*d^3-a^2*b^2*d^5+2*a*b^4*c^3*d+2*a*b^4*c*d^3-a*b^3*c^5-4*a*b^3*c^3*d^2-3*a*b^3*c*d^4+2*a*b^2*c^5*d+2*a*b^2*c^3*d^3-a*b*c^5*d^2+a*b*c*d^6-b^5*c^4+b^5*d^4-2*b^4*c^4*d-2*b^4*c^2*d^3+4*b^3*c^4*d^2+2*b^3*c^2*d^4-2*b^3*d^6-b^2*c^6*d+b^2*c^2*d^5+b*c^6*d^2-b*c^4*d^4-b*c^2*d^6+b*d^8)/2,
(c)*x(0)+(d)*y(0)+(-2*a*c-2*b*d-c^2-d^2)/2,
(a)*x(0)+(b)*y(0)+(-a^2-2*a*c-b^2-2*b*d)/2,
(a-c)*x(0)+(b-d)*y(0)+(-a^2-b^2+c^2+d^2)/2,
(a+c)*x(0)+(b+d)*y(0)+(-a^2-4*a*c-b^2-4*b*d-c^2-d^2)/2,
(c^2)*x(0)+(c*d)*y(0)+(-2*a*c^2-2*b*c*d-c^3-c*d^2)/2,
(a^2)*x(0)+(a*b)*y(0)+(-a^3-2*a^2*c-a*b^2-2*a*b*d)/2,
(a^2-c^2)*x(0)+(a*b+a*d-b*c-c*d)*y(0)+(-a^3-3*a^2*c-a*b^2-4*a*b*d+3*a*c^2-a*d^2+b^2*c+4*b*c*d+c^3+c*d^2)/2,
(a^3*b*d-a^3*d^2-a*b^3*d+a*b^2*d^2+a*b*d^3-a*d^4)*x(0)+(-a^3*b*c+a^2*b*c^2+a*b^3*c+a*b*c^3-b^3*c^2-b*c^4)*y(0)+(a^4*c^2-a^3*c^3+3*a^3*c*d^2-a^2*b^2*c^2-a^2*b^2*d^2-5*a^2*b*c^2*d+a^2*b*d^3-a^2*c^4+2*a^2*c^2*d^2+a*b^2*c^3-5*a*b^2*c*d^2-a*b*c^3*d-a*b*c*d^3+a*c^5-2*a*c^3*d^2+3*a*c*d^4+b^4*d^2+3*b^3*c^2*d-b^3*d^3+2*b^2*c^2*d^2-b^2*d^4+3*b*c^4*d-2*b*c^2*d^3+b*d^5)/2,
(a^2-2*a*c-b^2+2*b*d+c^2-d^2)*y+(-2*a^2*d+2*a*b*c+2*a*c*d-2*b*c^2),
(a*b*c-a*c*d-b^2*d-b*c^2+2*b*d^2+c^2*d-d^3)*y+(a^2*b*d-a^2*d^2-a*b^2*c+a*c*d^2+b^2*c^2-b*c^2*d),
(2*b^3*d+b^2*c^2-5*b^2*d^2-2*b*c^2*d+4*b*d^3+c^2*d^2-d^4)/2*y+(-a^3*b*c+a^3*c*d-2*a^2*b^2*d+3*a^2*b*d^2-a^2*d^3+a*b^3*c-a*b^2*c*d+a*b*c^3-a*b*c*d^2-a*c^3*d+a*c*d^3-b^3*c^2+3*b^2*c^2*d-2*b*c^2*d^2)/2,
(b-d)*x+(-a+c)*y+(2*a*d-2*b*c),
(a-c)*x+(-b+d)*y,
(a*d-b*c)*x+(a*c-b*d-c^2+d^2)*y+(-2*a*c*d+2*b*c^2),
(a^2*c-2*a*c^2-2*a*d^2+c^3+2*c*d^2)*x+(-b^2*d+4*b*d^2-3*d^3)*y+(a^2*b*d-a^2*d^2-a*b^2*c+a*c*d^2+b^2*c^2-b*c^2*d),
(a*d-b*c)*r(2)^2+(b^2*d-b*d^2)/2*x(0)+(-a^2*c+a*c^2-2*b^2*c+2*b*c*d)/2*y(0)+(-a^3*d+a^2*b*c+3*a^2*c*d-3*a*b^2*d-a*b*c^2+3*a*b*d^2-3*a*c^2*d-a*d^3+3*b^3*c-b^2*c*d+b*c^3-b*c*d^2)/4,
(a*d-b*c)*r(2)^2+(b^2*d-b*d^2)/2*x(0)+(-a^2*c-a^2*d+a*b*c+a*c^2-2*b^2*c+2*b*c*d)/2*y(0)+(a^3*c-a^3*d+a^2*b*c+2*a^2*b*d-a^2*c^2+3*a^2*c*d+a^2*d^2-a*b^2*c-3*a*b^2*d-a*b*c^2-2*a*b*c*d+3*a*b*d^2-3*a*c^2*d-a*d^3+3*b^3*c-b^2*c*d+b*c^3-b*c*d^2)/4,
(a^2*b*c-b^3*c-b*c^3+b*c*d^2)*r(2)^2+(b^4*d-b^2*d^3)/2*x(0)+(-a^3*c^2+a^2*b^2*c+a*c^4+b^3*c*d-b^2*c^3-b*c*d^3)/2*y(0)+(-a^4*c*d+a^3*b^2*d-a^3*b*d^2+2*a^3*c^2*d-a^2*b^3*c-2*a^2*b^2*c*d-a^2*c*d^3-a*b^4*d-a*b^3*c^2+2*a*b^2*d^3-a*b*c^4-a*b*d^4-a*c^4*d+a*c^2*d^3+b^5*c-3*b^4*c*d+3*b^3*c^3-b^3*c*d^2+b^2*c^3*d+2*b^2*c*d^3+b*c^5+b*c*d^4)/4,
(b^3*c^3-b^3*c*d^2-b*c^3*d^2+b*c*d^4)*r(2)^2+(b^4*d^3-b^2*d^5)/2*x(0)+(-a*b^2*c^4+5*b^4*c^3+4*b^4*c*d^2-4*b^3*c^3*d-3*b^3*c*d^3+2*b^2*c^5-b^2*c^3*d^2-2*b^2*c*d^4-b*c^5*d+b*c*d^5)/2*y(0)+(2*a^2*b^3*c^3+2*a^2*b^3*c*d^2-2*a^2*b^2*c^3*d-a^2*b^2*c*d^3+a^2*b*c^5-a^2*b*c*d^4+2*a*b^4*c^2*d-a*b^3*c^4-4*a*b^3*c^2*d^2-a*b^3*d^4+4*a*b^2*c^4*d+a*b^2*c^2*d^3+a*b^2*d^5-a*b*c^6+a*b*c^2*d^4-6*b^5*c^3-4*b^5*c*d^2-3*b^4*c^3*d-4*b^4*c*d^3-3*b^3*c^5+8*b^3*c^3*d^2+7*b^3*c*d^4-2*b^2*c^5*d+b^2*c^3*d^3+3*b^2*c*d^5+2*b*c^5*d^2-2*b*c*d^6)/4,
(c^2+d^2)*y(0)^2+(-c^2)*r(2)^2+(-2*b*c^2-2*b*d^2-c^2*d-d^3)*y(0)+(4*b^2*c^2+4*b^2*d^2+4*b*c^2*d+4*b*d^3+c^4+2*c^2*d^2+d^4)/4,
(a^2+b^2)*y(0)^2+(-a^2)*r(2)^2+(-a^2*b-2*a*b*c-b^3-2*b^2*d)*y(0)+(a^4-4*a^3*c+2*a^2*b^2-4*a^2*b*d+4*a^2*c^2+4*a*b^2*c+8*a*b*c*d+b^4+4*b^3*d+4*b^2*d^2)/4,
(a*c^2+a*d^2-c^3-c*d^2)*y(0)^2+(-a*c^2-a*d^2+b*c*d+c^3)*r(2)^2+(-b^2*d^2+b*d^3)/2*x(0)+(-3*a*b*c^2-2*a*c^2*d+a*d^3-2*b^2*c*d+3*b*c^3-b*c*d^2+2*c^3*d+2*c*d^3)/2*y(0)+(a^3*c^2+a^3*d^2-3*a^2*b*c*d-2*a^2*c^3-5*a^2*c*d^2+3*a*b^2*c^2-a*b^2*d^2+5*a*b*c^2*d-9*a*b*d^3+2*a*c^4+7*a*c^2*d^2-a*d^4+b^3*c*d-3*b^2*c^3+8*b^2*c*d^2-3*b*c^3*d+3*b*c*d^3-c^5-2*c^3*d^2-c*d^4)/4,
(d)*x(0)*y(0)+(-c)*y(0)^2+(c)*r(2)^2+(-2*b*d-d^2)/2*x(0)+(2*b*c+c*d)/2*y(0)+(-2*a^2*c+2*a*c^2-2*b^2*c+2*b*c*d-c^3-c*d^2)/4,
(c-d)*x(0)*y(0)+(c+d)*y(0)^2+(-c)*r(2)^2+(2*b*d-c*d+d^2)/2*x(0)+(-2*a*c-2*b*c-2*b*d-c^2-c*d-2*d^2)/2*y(0)+(2*a^2*c-2*a*c^2+2*a*c*d+2*b^2*c-2*b*c*d+2*b*d^2+c^3+c^2*d+c*d^2+d^3)/4,
(c+d)*x(0)*y(0)+(-c+d)*y(0)^2+(c)*r(2)^2+(-2*b*d-c*d-d^2)/2*x(0)+(-2*a*c+2*b*c-2*b*d-c^2+c*d-2*d^2)/2*y(0)+(-2*a^2*c+2*a*c^2+2*a*c*d-2*b^2*c+2*b*c*d+2*b*d^2-c^3+c^2*d-c*d^2+d^3)/4,
(b)*x(0)*y(0)+(-a)*y(0)^2+(a)*r(2)^2+(-b^2-2*b*d)/2*x(0)+(a*b+2*b*c)/2*y(0)+(-a^3+4*a^2*c-a*b^2+6*a*b*d-4*a*c^2-2*b^2*c-4*b*c*d)/4,
(2*b+c-d)/2*x(0)*y(0)+(-2*a+c+d)/2*y(0)^2+(2*a-c)/2*r(2)^2+(-2*b^2-2*b*d-c*d+d^2)/4*x(0)+(2*a*b-2*a*c+6*a*d-4*b*c-2*b*d-c^2-c*d-2*d^2)/4*y(0)+(-2*a^3+4*a^2*c-2*a*b^2-4*a*c^2+2*a*c*d-6*a*d^2+4*b^2*c+2*b*c*d+2*b*d^2+c^3+c^2*d+c*d^2+d^3)/8,
(a-b)*x(0)*y(0)+(a+b)*y(0)^2+(-a)*r(2)^2+(-a*b+b^2+2*b*d)/2*x(0)+(-a^2-a*b-2*a*c-2*b^2-2*b*c-2*b*d)/2*y(0)+(a^3+a^2*b-4*a^2*c+a*b^2+2*a*b*c-6*a*b*d+4*a*c^2+b^3+2*b^2*c+2*b^2*d+4*b*c*d)/4,
(a+b)*x(0)*y(0)+(-a+b)*y(0)^2+(a)*r(2)^2+(-a*b-b^2-2*b*d)/2*x(0)+(-a^2+a*b-2*a*c-2*b^2+2*b*c-2*b*d)/2*y(0)+(-a^3+a^2*b+4*a^2*c-a*b^2+2*a*b*c+6*a*b*d-4*a*c^2+b^3-2*b^2*c+2*b^2*d-4*b*c*d)/4,
x(0)^2+y(0)^2-r(2)^2+(-2*a*c-2*b*d),
(a*c-a*d+b*c-b*d-c^2+d^2)*y*y(0)+(-a*b*c+a*b*d-a*c*d+a*d^2-b^2*c+3*b^2*d+2*b*c^2-b*c*d-3*b*d^2)/2*y+(a^2*b*c-a^2*b*d-2*a^2*c^2+a^2*c*d+a^2*d^2+a*b^2*c+a*b^2*d-a*b*c^2-2*a*b*c*d+a*b*d^2+2*a*c^3-a*c^2*d-a*c*d^2-b^2*c^2-b^2*c*d+3*b*c^2*d-b*c*d^2)/2,
(a*c+a*d-b*c-b*d-c^2+d^2)*y*y(0)+(-a*b*c-a*b*d-a*c*d-a*d^2+b^2*c+3*b^2*d+2*b*c^2+b*c*d-3*b*d^2)/2*y+(-a^2*b*c-a^2*b*d-2*a^2*c^2-a^2*c*d+a^2*d^2+a*b^2*c-a*b^2*d+a*b*c^2-2*a*b*c*d-a*b*d^2+2*a*c^3+a*c^2*d-a*c*d^2-b^2*c^2+b^2*c*d+3*b*c^2*d+b*c*d^2)/2,
(a+b-c-d)*y*x(0)+(a+b-c-d)*y*y(0)+(a*c-a*d+b*c-b*d-c^2+d^2)/2*x+(-2*a*b-3*a*c+a*d-2*b^2-b*c+3*b*d+3*c^2+2*c*d-d^2)/2*y+(-a^2*c-a^2*d+a*b*c-a*b*d+a*c^2+2*a*c*d-a*d^2-2*b*c^2+2*b*c*d),
(b-d)*y^2+(-b^2+d^2)*y,
x^2-2*x*x(0)+y^2-2*y*y(0)+(2*a*c+2*b*d),
(b^3*c-b*c*d^2)*x(0)*r(2)^2+(a*b^2*c-b*c^2*d)*y(0)*r(2)^2+(-a*b^3*c+a*b*c^3-b^4*d-4*b^3*c^2+2*b^2*c^2*d+b^2*d^3-b*c^4+3*b*c^2*d^2)/2*r(2)^2+(-3*b^3*c*d^2+4*b^2*c*d^3-b*c*d^4)/4*x(0)+(-a^3*c^3-2*a^2*b^3*d+6*a^2*b^2*d^2-4*a^2*b*d^3+4*a*b^4*c+a*b^2*c^3+a*c^5+2*b^5*d-12*b^4*c^2-6*b^4*d^2+11*b^3*c^2*d+2*b^3*d^3-4*b^2*c^4-2*b^2*c^2*d^2+6*b^2*d^4+3*b*c^4*d-b*c^2*d^3-4*b*d^5)/4*y(0)+(-a^4*c^2*d+2*a^3*b^3*c-6*a^3*b^2*c*d-a^3*b*c^3+2*a^3*b*c*d^2+2*a^3*c^3*d+6*a^2*b^4*d-7*a^2*b^3*c^2-9*a^2*b^3*d^2+8*a^2*b^2*c^2*d-a^2*b^2*d^3+a^2*b*c^4-3*a^2*b*c^2*d^2+4*a^2*b*d^4-a^2*c^2*d^3-6*a*b^5*c-14*a*b^4*c*d+a*b^3*c^3+14*a*b^3*c*d^2-5*a*b^2*c^3*d-11*a*b^2*c*d^3-a*b*c^5+2*a*b*c^3*d^2+3*a*b*c*d^4-a*c^5*d+a*c^3*d^3-2*b^6*d+15*b^5*c^2+5*b^5*d^2+5*b^4*c^2*d+5*b^4*d^3+8*b^3*c^4-7*b^3*c^2*d^2-11*b^3*d^4+b^2*c^4*d-b^2*c^2*d^3-b^2*d^5+b*c^6-3*b*c^4*d^2+2*b*c^2*d^4+4*b*d^6)/8,
(a*c-a*d+b*c-b*d-c^2+d^2)*y*r(2)^2+(a^2*b*c-a^2*b*d-a^2*c^2+a^2*d^2+2*a*b^2*c-2*a*b^2*d+a*c^3-a*d^3+3*b^3*c+b^3*d-3*b^2*c^2-b^2*d^2-b*c^3+b*c^2*d)*y(0)+(a^3*b*c+a^3*b*d-2*a^3*c*d+a^2*b^2*c+3*a^2*b^2*d-2*a^2*b*c^2-2*a^2*b*c*d-2*a^2*b*d^2-a^2*c^3+4*a^2*c^2*d-a^2*d^3-3*a*b^3*c+5*a*b^3*d-2*a*b^2*c^2-6*a*b^2*c*d+2*a*b^2*d^2+2*a*b*c*d^2+2*a*b*d^3+a*c^4-2*a*c^3*d+a*d^4-3*b^4*c-b^4*d+4*b^3*c^2-6*b^3*c*d+b^2*c^3+4*b^2*c^2*d+b^2*d^3+b*c^4+b*c^3*d-b*c^2*d^2-b*c*d^3)/2,
(a*c+a*d-b*c-b*d-c^2+d^2)*y*r(2)^2+(-a^2*b*c+a^2*b*d-a^2*c^2-a^2*d^2-2*a*b^2*d+4*a*b*d^2+a*c^3-a*d^3+b^3*c+b^3*d-b^2*c^2-4*b^2*c*d-b^2*d^2+b*c^3+b*c^2*d+2*b*c*d^2)*y(0)+(-a^3*b*c-a^3*b*d+3*a^2*b^2*c-a^2*b^2*d+2*a^2*b*c^2-2*a^2*b*c*d+a^2*c^3+2*a^2*c^2*d+2*a^2*c*d^2+a^2*d^3-a*b^3*c+3*a*b^3*d-2*a*b^2*c^2-6*a*b^2*d^2-2*a*b*c^3+4*a*b*c^2*d-2*a*b*d^3-a*c^4-2*a*c^3*d-2*a*c^2*d^2+a*d^4-b^4*c-b^4*d+2*b^3*c^2+2*b^3*c*d-b^2*c^3+6*b^2*c*d^2+b^2*d^3+b*c^4-b*c^3*d-b*c^2*d^2-3*b*c*d^3)/2,
(a*c-a*d+b*c-b*d-c^2+d^2)*y*y(0)*r(2)^2+(-a^2*b*c+a^2*b*d-a^2*c^2+a^2*d^2+a*c^3-a*d^3+2*b^3*c-2*b^2*c^2+b*c^3-b*c*d^2)*r(2)^2+(2*b^4*c-2*b^4*d-b^2*c*d^2+b^2*d^3-b*c*d^3+b*d^4)/2*x(0)+(2*a^3*c^2+2*a^2*b^2*d-5*a^2*b*c^2+3*a^2*b*d^2-a^2*c^3-a^2*d^3-2*a*b^3*c+4*a*b^3*d+2*a*b^2*c^2-8*a*b^2*d^2+2*a*b*c^3-a*c^4+a*d^4-2*b^4*c+2*b^4*d-9*b^3*c^2+8*b^3*c*d-b^3*d^2-b^2*c^3+5*b^2*c^2*d-b^2*c*d^2+b^2*d^3+3*b*c^4-b*c^3*d+2*b*c^2*d^2-2*b*c*d^3-2*b*d^4)/2*y(0)+(-2*a^4*c^2+2*a^4*c*d-2*a^4*d^2-2*a^3*b^2*c+a^3*b*c^2-8*a^3*b*c*d+3*a^3*b*d^2+2*a^3*c^3-4*a^3*c^2*d+3*a^3*c*d^2+a^3*d^3-4*a^2*b^3*c-4*a^2*b^3*d+3*a^2*b^2*c^2+10*a^2*b^2*c*d-9*a^2*b^2*d^2-2*a^2*b*c^3+17*a^2*b*c^2*d-3*a^2*b*c*d^2+3*a^2*c^4-2*a^2*c*d^3-a^2*d^4-2*a*b^4*c-4*a*b^4*d+3*a*b^3*c^2-4*a*b^3*c*d+13*a*b^3*d^2+2*a*b^2*c^3-12*a*b^2*c^2*d+9*a*b^2*c*d^2+7*a*b^2*d^3+2*a*b*c^4-7*a*b*c^3*d+a*b*c^2*d^2-a*b*c*d^3-3*a*b*d^4-3*a*c^5+2*a*c^4*d-2*a*c^3*d^2+2*a*c^2*d^3+a*c*d^4-4*b^5*d+9*b^4*c^2+b^4*d^2-2*b^3*c^3+11*b^3*c^2*d-17*b^3*c*d^2-b^2*c^4+2*b^2*c^3*d-8*b^2*c^2*d^2+2*b^2*c*d^3+b^2*d^4-b*c^5-3*b*c^4*d+b*c^3*d^2-b*c^2*d^3+2*b*c*d^4+2*b*d^5)/4,
(a*c+a*d-b*c-b*d-c^2+d^2)*y*y(0)*r(2)^2+(a^2*b*c+2*a^2*b*d-a^2*c^2-a*b^2*c-2*a*b^2*d+2*a*b*d^2+a*c^3-b^2*c^2-2*b^2*c*d-b*c^3+2*b*c*d^2)*r(2)^2+(2*b^3*c*d+2*b^3*d^2-2*b^2*c*d^2-2*b^2*d^3)*x(0)+(-2*a^3*c^2+2*a^3*d^2+2*a^2*b^2*c-2*a^2*b^2*d-3*a^2*b*c^2+9*a^2*b*d^2+a^2*c^3-a^2*d^3+4*a*b^3*d-8*a*b^2*c^2-2*a*b^2*d^2-a*b*c^3+7*a*b*d^3+a*c^4-3*a*d^4-2*b^4*c-2*b^4*d-9*b^3*c^2-6*b^3*c*d+7*b^3*d^2+4*b^2*c^3+b^2*c^2*d-3*b^2*d^3+4*b*c^4+2*b*c^2*d^2+2*b*c*d^3-2*b*d^4)/2*y(0)+(-2*a^4*c^2-4*a^4*c*d-2*a^4*d^2+2*a^3*b^2*c+2*a^3*b^2*d-5*a^3*b*c^2-12*a^3*b*c*d-9*a^3*b*d^2+a^3*c^3+7*a^3*c^2*d+2*a^3*c*d^2-2*a^3*d^3-6*a^2*b^3*c+2*a^2*b^3*d-5*a^2*b^2*c^2-10*a^2*b^2*c*d-13*a^2*b^2*d^2+9*a^2*b*c^3+14*a^2*b*c^2*d+3*a^2*b*c*d^2-8*a^2*b*d^3+5*a^2*c^4-2*a^2*c^3*d+2*a^2*c^2*d^2+2*a^2*c*d^3-a^2*d^4+2*a*b^4*c-6*a*b^4*d+11*a*b^3*c^2-20*a*b^3*c*d-13*a*b^3*d^2+9*a*b^2*c^3+19*a*b^2*c^2*d+16*a*b^2*c*d^2-5*a*b*c^4-2*a*b*c*d^3-5*a*b*d^4-4*a*c^5-a*c^4*d-2*a*c^3*d^2-2*a*c^2*d^3+2*a*c*d^4+3*a*d^5+2*b^5*c+2*b^5*d+9*b^4*c^2+14*b^4*c*d-7*b^4*d^2-3*b^3*c^3+14*b^3*c^2*d+b^3*c*d^2-2*b^3*d^3-4*b^2*c^4-5*b^2*c^3*d+b^2*c^2*d^2+9*b^2*c*d^3+5*b^2*d^4+b*c^5-4*b*c^4*d-2*b*c^2*d^3-5*b*c*d^4+2*b*d^5)/4.




Size is: 46.

================ Algorithm 1 =====================

