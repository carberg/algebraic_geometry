
+++++++++++++++++++++++++++++++++++++++

The given ring is:
(0,l2,l3,a,b,c,d),(c3,s3,c2,s2,c1,s1),(dp(6),C)

F = {
(d)*s1+(a), 
(-d)*c1+(b), 
(l3)*c3+(l2)*c2+(-d), 
(l3)*s3+(l2)*s2+(-c), 
c1^2+s1^2-1, 
c2^2+s2^2-1, 
c3^2+s3^2-1
}.

E = {0}.

N = {}.


Module Comprehensive Groebner Systems: 

Branch 1:
constraints: a^2+b^2-d^2!=0,
RGB from KSW:
[(a^2+b^2-d^2)  ,  0]
[(d)*s1+(a)  ,  0]
[(d)*c1+(-b)  ,  0]
[(b)*c1+(-a)*s1+(-d)  ,  0]
[(a)*c1+(b)*s1  ,  0]
[(2*l2*d)*c2+(2*l2*c)*s2+(-l2^2+l3^2-c^2-d^2)  ,  0]
[(l3)*s3+(l2)*s2+(-c)  ,  0]
[(l3)*c3+(l2)*c2+(-d)  ,  0]
[(2*l2*c)*s2*s1+(-2*l2*a)*c2+(-l2^2+l3^2-c^2)*s1+(a*d)  ,  0]
[c1^2+s1^2-1  ,  0]
[(2*l2*c)*s2*c1+(2*l2*b)*c2+(-l2^2+l3^2-c^2)*c1+(-b*d)  ,  0]
[(4*l2*c^2+4*l2*d^2)*s2^2+(-2*l3^2*d+2*c^2*d+2*d^3)*c2+(-4*l2^2*c+2*l3^2*c-2*c^3-2*c*d^2)*s2+(l2^3-l2*l3^2+l2*c^2-3*l2*d^2)  ,  0]
[(2*l2*c)*c2*s2+(-2*l2*d)*s2^2+(-l2^2+l3^2-c^2-d^2)*c2+(2*l2*d)  ,  0]
[(4*l2*c^2+4*l2*d^2)*s3*s2+(2*l2^2*d-2*c^2*d-2*d^3)*c3+(-2*l2^2*c-2*c^3-2*c*d^2)*s3+(-4*l2*l3*c)*s2+(l2^2*l3-l3^3+3*l3*c^2+3*l3*d^2)  ,  0]
[(2*l2*d)*c3*s2+(2*l2*c)*s3*s2+(-2*c*d)*c3+(-l2^2-c^2+d^2)*s3+(-l2*l3)*s2+(l3*c)  ,  0]
[(2*l2*c)*c3*s2+(-2*l2*d)*s3*s2+(-l2^2-c^2+d^2)*c3+(2*c*d)*s3+(-l2*l3)*c2+(-l3*d)  ,  0]
[c2^2+s2^2-1  ,  0]
[(l2)*s3*c2+(-l2)*c3*s2+(c)*c3+(-d)*s3  ,  0]
[(c^2+d^2)*s3*c2+(c^2+d^2)*c3*s2+(-l2*c)*c3+(-l2*d)*s3+(-l3*c)*c2+(-l3*d)*s2  ,  0]
[(d)*c3*c2+(c)*s3*c2+(c)*c3*s2+(-d)*s3*s2+(-l2)*c3+(-l3)*c2  ,  0]
[(c)*c3*c2+(-d)*s3*c2+(-d)*c3*s2+(-c)*s3*s2+(l2)*s3+(l3)*s2  ,  0]
[(l2)*c3*c2+(l2)*s3*s2+(-d)*c3+(-c)*s3+(l3)  ,  0]
[c3^2+s3^2-1  ,  0]
[(c)*s3*c2*s1+(c)*c3*s2*s1+(-a)*c3*c2+(a)*s3*s2+(-l2)*c3*s1+(-l3)*c2*s1  ,  0]
[(c)*s3*c2*c1+(c)*c3*s2*c1+(b)*c3*c2+(-b)*s3*s2+(-l2)*c3*c1+(-l3)*c2*c1  ,  0]

Module Groebner basis: 
[(a^2+b^2-d^2) , 0].

LPP Set of Module Groebner Basis under specialization:
[ 1 ]

Branch 2:
constraints: a^2+b^2-d^2=0,d!=0,l2!=0,l3!=0,c^2+d^2!=0,
RGB from KSW:
[(d)*s1+(a)  ,  0]
[(d)*c1+(-b)  ,  0]
[(b)*c1+(-a)*s1+(-d)  ,  0]
[(a)*c1+(b)*s1  ,  0]
[(2*l2*d)*c2+(2*l2*c)*s2+(-l2^2+l3^2-c^2-d^2)  ,  0]
[(l3)*s3+(l2)*s2+(-c)  ,  0]
[(l3)*c3+(l2)*c2+(-d)  ,  0]
[(2*l2*c)*s2*s1+(-2*l2*a)*c2+(-l2^2+l3^2-c^2)*s1+(a*d)  ,  0]
[c1^2+s1^2-1  ,  0]
[(2*l2*c)*s2*c1+(2*l2*b)*c2+(-l2^2+l3^2-c^2)*c1+(-b*d)  ,  0]
[(4*l2*c^2+4*l2*d^2)*s2^2+(-2*l3^2*d+2*c^2*d+2*d^3)*c2+(-4*l2^2*c+2*l3^2*c-2*c^3-2*c*d^2)*s2+(l2^3-l2*l3^2+l2*c^2-3*l2*d^2)  ,  0]
[(2*l2*c)*c2*s2+(-2*l2*d)*s2^2+(-l2^2+l3^2-c^2-d^2)*c2+(2*l2*d)  ,  0]
[(4*l2*c^2+4*l2*d^2)*s3*s2+(2*l2^2*d-2*c^2*d-2*d^3)*c3+(-2*l2^2*c-2*c^3-2*c*d^2)*s3+(-4*l2*l3*c)*s2+(l2^2*l3-l3^3+3*l3*c^2+3*l3*d^2)  ,  0]
[(2*l2*d)*c3*s2+(2*l2*c)*s3*s2+(-2*c*d)*c3+(-l2^2-c^2+d^2)*s3+(-l2*l3)*s2+(l3*c)  ,  0]
[(2*l2*c)*c3*s2+(-2*l2*d)*s3*s2+(-l2^2-c^2+d^2)*c3+(2*c*d)*s3+(-l2*l3)*c2+(-l3*d)  ,  0]
[c2^2+s2^2-1  ,  0]
[(l2)*s3*c2+(-l2)*c3*s2+(c)*c3+(-d)*s3  ,  0]
[(c^2+d^2)*s3*c2+(c^2+d^2)*c3*s2+(-l2*c)*c3+(-l2*d)*s3+(-l3*c)*c2+(-l3*d)*s2  ,  0]
[(d)*c3*c2+(c)*s3*c2+(c)*c3*s2+(-d)*s3*s2+(-l2)*c3+(-l3)*c2  ,  0]
[(c)*c3*c2+(-d)*s3*c2+(-d)*c3*s2+(-c)*s3*s2+(l2)*s3+(l3)*s2  ,  0]
[(l2)*c3*c2+(l2)*s3*s2+(-d)*c3+(-c)*s3+(l3)  ,  0]
[c3^2+s3^2-1  ,  0]
[(c)*s3*c2*s1+(c)*c3*s2*s1+(-a)*c3*c2+(a)*s3*s2+(-l2)*c3*s1+(-l3)*c2*s1  ,  0]
[(c)*s3*c2*c1+(c)*c3*s2*c1+(b)*c3*c2+(-b)*s3*s2+(-l2)*c3*c1+(-l3)*c2*c1  ,  0]

Module Groebner basis: 
[(d)*s1+(a), 0], 
[(d)*c1+(-b), 0], 
[(2*l2*d)*c2+(2*l2*c)*s2+(-l2^2+l3^2-c^2-d^2), 0], 
[(l3)*s3+(l2)*s2+(-c), 0], 
[(l3)*c3+(l2)*c2+(-d), 0], 
[(4*l2*c^2+4*l2*d^2)*s2^2+(-2*l3^2*d+2*c^2*d+2*d^3)*c2+(-4*l2^2*c+2*l3^2*c-2*c^3-2*c*d^2)*s2+(l2^3-l2*l3^2+l2*c^2-3*l2*d^2) , 0].

LPP Set of Module Groebner Basis under specialization:
[ s1 ]
[ c1 ]
[ c2 ]
[ s3 ]
[ c3 ]
[ s2^2 ]

Branch 3:
constraints: l2=0,a^2+b^2-d^2=0,l3^2-c^2-d^2!=0,
RGB from KSW:
[(l3^2-c^2-d^2)  ,  (2*l2*d)*c2+(2*l2*c)*s2+(-l2^2)]
[(d)*s1+(a)  ,  0]
[(d)*c1+(-b)  ,  0]
[(b)*c1+(-a)*s1+(-d)  ,  0]
[(a)*c1+(b)*s1  ,  0]
[(l3)*s3+(-c)  ,  (l2)*s2]
[(c^2+d^2)*s3+(-l3*c)  ,  (-2*l2*d)*s3*c2+(-2*l2*c)*s3*s2+(l2^2)*s3+(l2*l3)*s2]
[(d)*c3+(c)*s3+(-l3)  ,  (-l2)*c3*c2+(-l2)*s3*s2]
[(c)*c3+(-d)*s3  ,  (l2)*s3*c2+(-l2)*c3*s2]
[(l3)*c3+(-d)  ,  (l2)*c2]
[(c)*s3*s1+(-a)*c3+(-l3)*s1  ,  (-l2)*c3*c2*s1+(-l2)*s3*s2*s1]
[c1^2+s1^2-1  ,  0]
[(c)*s3*c1+(b)*c3+(-l3)*c1  ,  (-l2)*c3*c2*c1+(-l2)*s3*s2*c1]
[c2^2+s2^2-1  ,  0]
[c3^2+s3^2-1  ,  0]

Module Groebner basis: 
[(l3^2-c^2-d^2) , (2*l2*d)*c2+(2*l2*c)*s2+(-l2^2)].

LPP Set of Module Groebner Basis under specialization:
[ 1 ]

Branch 4:
constraints: l2=0,a^2+b^2-d^2=0,l3^2-c^2-d^2=0,d!=0,l3!=0,
RGB from KSW:
[(d)*s1+(a)  ,  0]
[(d)*c1+(-b)  ,  0]
[(b)*c1+(-a)*s1+(-d)  ,  0]
[(a)*c1+(b)*s1  ,  0]
[(l3)*s3+(-c)  ,  (l2)*s2]
[(c^2+d^2)*s3+(-l3*c)  ,  (l3^2-c^2-d^2)*s3+(l2*l3)*s2]
[(d)*c3+(c)*s3+(-l3)  ,  (-l2)*c3*c2+(-l2)*s3*s2]
[(c)*c3+(-d)*s3  ,  (l2)*s3*c2+(-l2)*c3*s2]
[(l3)*c3+(-d)  ,  (l2)*c2]
[(c)*s3*s1+(-a)*c3+(-l3)*s1  ,  (-l2)*c3*c2*s1+(-l2)*s3*s2*s1]
[c1^2+s1^2-1  ,  0]
[(c)*s3*c1+(b)*c3+(-l3)*c1  ,  (-l2)*c3*c2*c1+(-l2)*s3*s2*c1]
[c2^2+s2^2-1  ,  0]
[c3^2+s3^2-1  ,  0]

Module Groebner basis: 
[(d)*s1+(a), 0], 
[(d)*c1+(-b), 0], 
[(l3)*s3+(-c), (l2)*s2], 
[(d)*c3+(c)*s3+(-l3), (-l2)*c3*c2+(-l2)*s3*s2], 
[c2^2+s2^2-1 , 0].

LPP Set of Module Groebner Basis under specialization:
[ s1 ]
[ c1 ]
[ s3 ]
[ c3 ]
[ c2^2 ]

Branch 5:
constraints: d=0,l2=0,a^2+b^2=0,l3^2-c^2=0,b!=0,
RGB from KSW:
[(b)  ,  (-d)*c1]
[(a)  ,  (d)*s1]
[(c)*s3+(-l3)  ,  (-l2)*c3*c2+(-l2)*s3*s2+(d)*c3]
[(l3)*s3+(-c)  ,  (l2)*s2]
[(c)*c3  ,  (l2)*s3*c2+(-l2)*c3*s2+(-d)*s3]
[(l3)*c3  ,  (l2)*c2+(-d)]
[c1^2+s1^2-1  ,  0]
[c2^2+s2^2-1  ,  0]
[c3^2+s3^2-1  ,  0]

Module Groebner basis: 
[(b) , (-d)*c1].

LPP Set of Module Groebner Basis under specialization:
[ 1 ]

Branch 6:
constraints: d=0,b=0,a=0,l2=0,l3^2-c^2=0,c!=0,
RGB from KSW:
[(c)*s3+(-l3)  ,  (-l2)*c3*c2+(-l2)*s3*s2+(d)*c3]
[(l3)*s3+(-c)  ,  (l2)*s2]
[(c)*c3  ,  (l2)*s3*c2+(-l2)*c3*s2+(-d)*s3]
[(l3)*c3  ,  (l2)*c2+(-d)]
[c1^2+s1^2-1  ,  0]
[c2^2+s2^2-1  ,  0]
[c3^2+s3^2-1  ,  0]

Module Groebner basis: 
[(c)*s3+(-l3), (-l2)*c3*c2+(-l2)*s3*s2+(d)*c3], 
[(c)*c3, (l2)*s3*c2+(-l2)*c3*s2+(-d)*s3], 
[c1^2+s1^2-1, 0], 
[c2^2+s2^2-1 , 0].

LPP Set of Module Groebner Basis under specialization:
[ s3 ]
[ c3 ]
[ c1^2 ]
[ c2^2 ]

Branch 7:
constraints: d=0,c=0,b=0,a=0,l3=0,l2=0,
RGB from KSW:
[c1^2+s1^2-1  ,  0]
[c2^2+s2^2-1  ,  0]
[c3^2+s3^2-1  ,  0]

Module Groebner basis: 
[c1^2+s1^2-1, 0], 
[c2^2+s2^2-1, 0], 
[c3^2+s3^2-1 , 0].

LPP Set of Module Groebner Basis under specialization:
[ c1^2 ]
[ c2^2 ]
[ c3^2 ]

Branch 8:
constraints: l3=0,l2=0,c^2+d^2=0,a^2+b^2-d^2=0,d!=0,d!=0,
RGB from KSW:
[(d)  ,  (-l3)*c3+(-l2)*c2]
[(c)  ,  (-l3)*s3+(-l2)*s2]
[(b)  ,  (-l3)*c3*c1+(-l2)*c2*c1]
[(a)  ,  (l3)*c3*s1+(l2)*c2*s1]
[c1^2+s1^2-1  ,  0]
[c2^2+s2^2-1  ,  0]
[c3^2+s3^2-1  ,  0]

Module Groebner basis: 
[(d) , (-l3)*c3+(-l2)*c2].

LPP Set of Module Groebner Basis under specialization:
[ 1 ]

Branch 9:
constraints: l3=0,a^2+b^2-d^2=0,l2!=0,l2^2-c^2-d^2!=0,
RGB from KSW:
[(l2^2-c^2-d^2)  ,  (2*l3*d)*c3+(2*l3*c)*s3+(-l3^2)]
[(d)*s1+(a)  ,  0]
[(d)*c1+(-b)  ,  0]
[(b)*c1+(-a)*s1+(-d)  ,  0]
[(a)*c1+(b)*s1  ,  0]
[(l2)*s2+(-c)  ,  (l3)*s3]
[(c^2+d^2)*s2+(-l2*c)  ,  (-2*l3*d)*c3*s2+(-2*l3*c)*s3*s2+(l2*l3)*s3+(l3^2)*s2]
[(d)*c2+(c)*s2+(-l2)  ,  (-l3)*c3*c2+(-l3)*s3*s2]
[(c)*c2+(-d)*s2  ,  (-l3)*s3*c2+(l3)*c3*s2]
[(l2)*c2+(-d)  ,  (l3)*c3]
[(c)*s2*s1+(-a)*c2+(-l2)*s1  ,  (-l3)*c3*c2*s1+(-l3)*s3*s2*s1]
[c1^2+s1^2-1  ,  0]
[(c)*s2*c1+(b)*c2+(-l2)*c1  ,  (-l3)*c3*c2*c1+(-l3)*s3*s2*c1]
[c2^2+s2^2-1  ,  0]
[c3^2+s3^2-1  ,  0]

Module Groebner basis: 
[(l2^2-c^2-d^2) , (2*l3*d)*c3+(2*l3*c)*s3+(-l3^2)].

LPP Set of Module Groebner Basis under specialization:
[ 1 ]

Branch 10:
constraints: l3=0,a^2+b^2-d^2=0,l2^2-c^2-d^2=0,l2!=0,d!=0,l2!=0,
RGB from KSW:
[(d)*s1+(a)  ,  0]
[(d)*c1+(-b)  ,  0]
[(b)*c1+(-a)*s1+(-d)  ,  0]
[(a)*c1+(b)*s1  ,  0]
[(l2)*s2+(-c)  ,  (l3)*s3]
[(c^2+d^2)*s2+(-l2*c)  ,  (l2*l3)*s3+(l2^2-c^2-d^2)*s2]
[(d)*c2+(c)*s2+(-l2)  ,  (-l3)*c3*c2+(-l3)*s3*s2]
[(c)*c2+(-d)*s2  ,  (-l3)*s3*c2+(l3)*c3*s2]
[(l2)*c2+(-d)  ,  (l3)*c3]
[(c)*s2*s1+(-a)*c2+(-l2)*s1  ,  (-l3)*c3*c2*s1+(-l3)*s3*s2*s1]
[c1^2+s1^2-1  ,  0]
[(c)*s2*c1+(b)*c2+(-l2)*c1  ,  (-l3)*c3*c2*c1+(-l3)*s3*s2*c1]
[c2^2+s2^2-1  ,  0]
[c3^2+s3^2-1  ,  0]

Module Groebner basis: 
[(d)*s1+(a), 0], 
[(d)*c1+(-b), 0], 
[(l2)*s2+(-c), (l3)*s3], 
[(d)*c2+(c)*s2+(-l2), (-l3)*c3*c2+(-l3)*s3*s2], 
[c3^2+s3^2-1 , 0].

LPP Set of Module Groebner Basis under specialization:
[ s1 ]
[ c1 ]
[ s2 ]
[ c2 ]
[ c3^2 ]

Branch 11:
constraints: d=0,l3=0,a^2+b^2=0,l2^2-c^2=0,l2!=0,b!=0,
RGB from KSW:
[(b)  ,  (-d)*c1]
[(a)  ,  (d)*s1]
[(c)*s2+(-l2)  ,  (-l3)*c3*c2+(-l3)*s3*s2+(d)*c2]
[(l2)*s2+(-c)  ,  (l3)*s3]
[(c)*c2  ,  (-l3)*s3*c2+(l3)*c3*s2+(-d)*s2]
[(l2)*c2  ,  (l3)*c3+(-d)]
[c1^2+s1^2-1  ,  0]
[c2^2+s2^2-1  ,  0]
[c3^2+s3^2-1  ,  0]

Module Groebner basis: 
[(b) , (-d)*c1].

LPP Set of Module Groebner Basis under specialization:
[ 1 ]

Branch 12:
constraints: d=0,b=0,a=0,l3=0,l2^2-c^2=0,l2!=0,c!=0,
RGB from KSW:
[(c)*s2+(-l2)  ,  (-l3)*c3*c2+(-l3)*s3*s2+(d)*c2]
[(l2)*s2+(-c)  ,  (l3)*s3]
[(c)*c2  ,  (-l3)*s3*c2+(l3)*c3*s2+(-d)*s2]
[(l2)*c2  ,  (l3)*c3+(-d)]
[c1^2+s1^2-1  ,  0]
[c2^2+s2^2-1  ,  0]
[c3^2+s3^2-1  ,  0]

Module Groebner basis: 
[(c)*s2+(-l2), (-l3)*c3*c2+(-l3)*s3*s2+(d)*c2], 
[(c)*c2, (-l3)*s3*c2+(l3)*c3*s2+(-d)*s2], 
[c1^2+s1^2-1, 0], 
[c3^2+s3^2-1 , 0].

LPP Set of Module Groebner Basis under specialization:
[ s2 ]
[ c2 ]
[ c1^2 ]
[ c3^2 ]

Branch 13:
constraints: d=0,a^2+b^2=0,l2!=0,l3!=0,b!=0,
RGB from KSW:
[(b)  ,  (-d)*c1]
[(a)  ,  (d)*s1]
[(2*l2*c)*s2+(-l2^2+l3^2-c^2)  ,  (2*l2*d)*c2+(-d^2)]
[(l3)*s3+(l2)*s2+(-c)  ,  0]
[(l3)*c3+(l2)*c2  ,  (-d)]
[c1^2+s1^2-1  ,  0]
[c2^2+s2^2-1  ,  0]
[(c)*s3*c2+(c)*c3*s2+(-l2)*c3+(-l3)*c2  ,  (d)*c3*c2+(-d)*s3*s2]
[(l2)*s3*c2+(-l2)*c3*s2+(c)*c3  ,  (-d)*s3]
[(c)*c3*c2+(-c)*s3*s2+(l2)*s3+(l3)*s2  ,  (-d)*s3*c2+(-d)*c3*s2]
[(l2)*c3*c2+(l2)*s3*s2+(-c)*s3+(l3)  ,  (-d)*c3]
[c3^2+s3^2-1  ,  0]

Module Groebner basis: 
[(b) , (-d)*c1].

LPP Set of Module Groebner Basis under specialization:
[ 1 ]

Branch 14:
constraints: d=0,b=0,a=0,l2!=0,l3!=0,l2!=0,c!=0,l3!=0,
RGB from KSW:
[(2*l2*c)*s2+(-l2^2+l3^2-c^2)  ,  (2*l2*d)*c2+(-d^2)]
[(l3)*s3+(l2)*s2+(-c)  ,  0]
[(l3)*c3+(l2)*c2  ,  (-d)]
[c1^2+s1^2-1  ,  0]
[c2^2+s2^2-1  ,  0]
[(c)*s3*c2+(c)*c3*s2+(-l2)*c3+(-l3)*c2  ,  (d)*c3*c2+(-d)*s3*s2]
[(l2)*s3*c2+(-l2)*c3*s2+(c)*c3  ,  (-d)*s3]
[(c)*c3*c2+(-c)*s3*s2+(l2)*s3+(l3)*s2  ,  (-d)*s3*c2+(-d)*c3*s2]
[(l2)*c3*c2+(l2)*s3*s2+(-c)*s3+(l3)  ,  (-d)*c3]
[c3^2+s3^2-1  ,  0]

Module Groebner basis: 
[(2*l2*c)*s2+(-l2^2+l3^2-c^2), (2*l2*d)*c2+(-d^2)], 
[(l3)*s3+(l2)*s2+(-c), 0], 
[(l3)*c3+(l2)*c2, (-d)], 
[c1^2+s1^2-1, 0], 
[c2^2+s2^2-1 , 0].

LPP Set of Module Groebner Basis under specialization:
[ s2 ]
[ s3 ]
[ c3 ]
[ c1^2 ]
[ c2^2 ]

Branch 15:
constraints: d=0,c=0,b=0,a=0,l2!=0,l3!=0,l2^2-l3^2!=0,
RGB from KSW:
[(l2^2-l3^2)  ,  (-2*l2*d)*c2+(-2*l2*c)*s2+(c^2+d^2)]
[(l3)*s3+(l2)*s2  ,  (-c)]
[(l2)*s3+(l3)*s2  ,  (c)*c3*c2+(-d)*s3*c2+(-d)*c3*s2+(-c)*s3*s2]
[(l3)*c3+(l2)*c2  ,  (-d)]
[(l2)*c3+(l3)*c2  ,  (-d)*c3*c2+(-c)*s3*c2+(-c)*c3*s2+(d)*s3*s2]
[c1^2+s1^2-1  ,  0]
[c2^2+s2^2-1  ,  0]
[c3^2+s3^2-1  ,  0]

Module Groebner basis: 
[(l2^2-l3^2) , (-2*l2*d)*c2+(-2*l2*c)*s2+(c^2+d^2)].

LPP Set of Module Groebner Basis under specialization:
[ 1 ]

Branch 16:
constraints: d=0,c=0,b=0,a=0,l2^2-l3^2=0,l2!=0,l3!=0,l3!=0,
RGB from KSW:
[(l3)*s3+(l2)*s2  ,  (-c)]
[(l2)*s3+(l3)*s2  ,  (c)*c3*c2+(-d)*s3*c2+(-d)*c3*s2+(-c)*s3*s2]
[(l3)*c3+(l2)*c2  ,  (-d)]
[(l2)*c3+(l3)*c2  ,  (-d)*c3*c2+(-c)*s3*c2+(-c)*c3*s2+(d)*s3*s2]
[c1^2+s1^2-1  ,  0]
[c2^2+s2^2-1  ,  0]
[c3^2+s3^2-1  ,  0]

Module Groebner basis: 
[(l3)*s3+(l2)*s2, (-c)], 
[(l3)*c3+(l2)*c2, (-d)], 
[c1^2+s1^2-1, 0], 
[c2^2+s2^2-1 , 0].

LPP Set of Module Groebner Basis under specialization:
[ s3 ]
[ c3 ]
[ c1^2 ]
[ c2^2 ]

Branch 17:
constraints: c^2+d^2=0,a^2+b^2-d^2=0,l2!=0,l3!=0,d!=0,d!=0,-l2+l3!=0,l2+l3!=0,c!=0,l2!=0,l3!=0,
RGB from KSW:
[(d)*s1+(a)  ,  0]
[(d)*c1+(-b)  ,  0]
[(b)*c1+(-a)*s1+(-d)  ,  0]
[(a)*c1+(b)*s1  ,  0]
[(4*l2^3*c-4*l2*l3^2*c)*s2+(-l2^4+2*l2^2*l3^2+4*l2^2*d^2-l3^4)  ,  (-4*l2^2*c^2-4*l2^2*d^2)*s2^2+(4*l2*c^3+4*l2*c*d^2)*s2+(-2*l2^2*c^2-2*l2^2*d^2+2*l3^2*c^2+2*l3^2*d^2-c^4-2*c^2*d^2-d^4)]
[(4*l2^3*d^2-4*l2*l3^2*d^2)*s2+(l2^4*c-2*l2^2*l3^2*c-4*l2^2*c*d^2+l3^4*c)  ,  (4*l2^2*c^3+4*l2^2*c*d^2)*s2^2+(-4*l2^3*c^2-4*l2^3*d^2+4*l2*l3^2*c^2+4*l2*l3^2*d^2-4*l2*c^4-4*l2*c^2*d^2)*s2+(2*l2^2*c^3+2*l2^2*c*d^2-2*l3^2*c^3-2*l3^2*c*d^2+c^5+2*c^3*d^2+c*d^4)]
[(4*l2^3*b*d-4*l2*l3^2*b*d)*s2+(l2^4*c-2*l2^2*l3^2*c+l3^4*c)*c1+(-4*l2^2*b*c*d)  ,  (-4*l2^2*b*c^2-4*l2^2*b*d^2)*c2*s2+(-2*l2^3*c^2-2*l2^3*d^2+2*l2*l3^2*c^2+2*l2*l3^2*d^2)*s2*c1+(2*l2*b*c^3+2*l2*b*c*d^2)*c2+(2*l2*b*c^2*d+2*l2*b*d^3)*s2+(l2^2*c^3+l2^2*c*d^2-l3^2*c^3-l3^2*c*d^2)*c1]
[(4*l2^3*a*d-4*l2*l3^2*a*d)*s2+(-l2^4*c+2*l2^2*l3^2*c-l3^4*c)*s1+(-4*l2^2*a*c*d)  ,  (-4*l2^2*a*c^2-4*l2^2*a*d^2)*c2*s2+(2*l2^3*c^2+2*l2^3*d^2-2*l2*l3^2*c^2-2*l2*l3^2*d^2)*s2*s1+(2*l2*a*c^3+2*l2*a*c*d^2)*c2+(2*l2*a*c^2*d+2*l2*a*d^3)*s2+(-l2^2*c^3-l2^2*c*d^2+l3^2*c^3+l3^2*c*d^2)*s1]
[(2*l2*d)*c2+(2*l2*c)*s2+(-l2^2+l3^2)  ,  (-c^2-d^2)]
[(2*l3^2*d)*c2+(4*l2^2*c-2*l3^2*c)*s2+(-l2^3+l2*l3^2+4*l2*d^2)  ,  (-4*l2*c^2-4*l2*d^2)*s2^2+(-2*c^2*d-2*d^3)*c2+(2*c^3+2*c*d^2)*s2+(-l2*c^2-l2*d^2)]
[(2*l2*b*c)*c2+(-2*l2*b*d)*s2+(-l2^2*c+l3^2*c)*c1  ,  (2*l2*c^2+2*l2*d^2)*s2*c1+(-c^3-c*d^2)*c1]
[(2*l2*a*c)*c2+(-2*l2*a*d)*s2+(l2^2*c-l3^2*c)*s1  ,  (-2*l2*c^2-2*l2*d^2)*s2*s1+(c^3+c*d^2)*s1]
[(l2^2*c-l3^2*c)*c2+(l2^2*d-l3^2*d)*s2+(-2*l2*c*d)  ,  (-2*l2*c^2-2*l2*d^2)*c2*s2+(c^3+c*d^2)*c2+(c^2*d+d^3)*s2]
[(2*l3^2*b*c)*c2+(-4*l2^2*b*d+2*l3^2*b*d)*s2+(-l2^3*c+l2*l3^2*c)*c1+(4*l2*b*c*d)  ,  (4*l2*b*c^2+4*l2*b*d^2)*c2*s2+(2*l2^2*c^2+2*l2^2*d^2)*s2*c1+(-2*b*c^3-2*b*c*d^2)*c2+(-2*b*c^2*d-2*b*d^3)*s2+(-l2*c^3-l2*c*d^2)*c1]
[(2*l3^2*a*c)*c2+(-4*l2^2*a*d+2*l3^2*a*d)*s2+(l2^3*c-l2*l3^2*c)*s1+(4*l2*a*c*d)  ,  (4*l2*a*c^2+4*l2*a*d^2)*c2*s2+(-2*l2^2*c^2-2*l2^2*d^2)*s2*s1+(-2*a*c^3-2*a*c*d^2)*c2+(-2*a*c^2*d-2*a*d^3)*s2+(l2*c^3+l2*c*d^2)*s1]
[(4*l2^3*b-4*l2*l3^2*b)*c2+(-l2^4+2*l2^2*l3^2-l3^4)*c1+(-4*l2^2*b*d)  ,  (4*l2^2*c^2+4*l2^2*d^2)*s2^2*c1+(4*l2*b*c^2+4*l2*b*d^2)*c2+(-2*l2^2*c^2-2*l2^2*d^2+2*l3^2*c^2+2*l3^2*d^2-c^4+d^4)*c1+(-2*b*c^2*d-2*b*d^3)]
[(4*l2^3*a-4*l2*l3^2*a)*c2+(l2^4-2*l2^2*l3^2+l3^4)*s1+(-4*l2^2*a*d)  ,  (-4*l2^2*c^2-4*l2^2*d^2)*s2^2*s1+(4*l2*a*c^2+4*l2*a*d^2)*c2+(2*l2^2*c^2+2*l2^2*d^2-2*l3^2*c^2-2*l3^2*d^2+c^4-d^4)*s1+(-2*a*c^2*d-2*a*d^3)]
[(l3)*s3+(l2)*s2+(-c)  ,  0]
[(l3)*c3+(l2)*c2+(-d)  ,  0]
[(l2*d)*c3+(-l2*c)*s3+(l3*d)*c2+(-l3*c)*s2  ,  (-c^2-d^2)*c3*c2+(c^2+d^2)*s3*s2]
[(l2*c)*c3+(l2*d)*s3+(l3*c)*c2+(l3*d)*s2  ,  (-c^2-d^2)*s3*c2+(-c^2-d^2)*c3*s2]
[(l2^4*c-2*l2^2*l3^2*c+l3^4*c)*s1^2+(-4*l2^3*b^2+4*l2*l3^2*b^2)*s2+(-l2^4*c+2*l2^2*l3^2*c+4*l2^2*b^2*c-l3^4*c)  ,  (4*l2^2*a*c^2+4*l2^2*a*d^2)*c2*s2*s1+(-2*l2^3*c^2-2*l2^3*d^2+2*l2*l3^2*c^2+2*l2*l3^2*d^2)*s2*s1^2+(-4*l2^2*c^3-4*l2^2*c*d^2)*s2^2+(-2*l2*a*c^3-2*l2*a*c*d^2)*c2*s1+(l2^2*c^3+l2^2*c*d^2-l3^2*c^3-l3^2*c*d^2)*s1^2+(4*l2^3*c^2+4*l2^3*d^2-4*l2*l3^2*c^2-4*l2*l3^2*d^2-2*l2*b^2*c^2-2*l2*b^2*d^2+4*l2*c^4+6*l2*c^2*d^2+2*l2*d^4)*s2+(-2*l2^2*c^3-2*l2^2*c*d^2+2*l3^2*c^3+2*l3^2*c*d^2-c^5-2*c^3*d^2-c*d^4)]
[(l2^4*c-2*l2^2*l3^2*c+l3^4*c)*c1*s1+(-4*l2^3*a*b+4*l2*l3^2*a*b)*s2+(4*l2^2*a*b*c)  ,  (-4*l2^2*b*c^2-4*l2^2*b*d^2)*c2*s2*s1+(-2*l2^3*c^2-2*l2^3*d^2+2*l2*l3^2*c^2+2*l2*l3^2*d^2)*s2*c1*s1+(2*l2*b*c^3+2*l2*b*c*d^2)*c2*s1+(l2^2*c^3+l2^2*c*d^2-l3^2*c^3-l3^2*c*d^2)*c1*s1+(-2*l2*a*b*c^2-2*l2*a*b*d^2)*s2]
[(2*l2*c)*s2*s1+(-2*l2*a)*c2+(-l2^2+l3^2)*s1  ,  (-c^2-d^2)*s1]
[(2*l3^2*c)*s2*s1+(-4*l2^2*a+2*l3^2*a)*c2+(-l2^3+l2*l3^2)*s1+(4*l2*a*d)  ,  (4*l2*c^2+4*l2*d^2)*s2^2*s1+(-2*c^3-2*c*d^2)*s2*s1+(-2*a*c^2-2*a*d^2)*c2+(-l2*c^2-l2*d^2)*s1]
[(l2*c)*s3*s1+(l3*c)*s2*s1+(l2*a)*c3+(l3*a)*c2  ,  (c^2+d^2)*c3*c2*s1+(-c^2-d^2)*s3*s2*s1]
[c1^2+s1^2-1  ,  0]
[(2*l2*c)*s2*c1+(2*l2*b)*c2+(-l2^2+l3^2)*c1  ,  (-c^2-d^2)*c1]
[(2*l3^2*c)*s2*c1+(4*l2^2*b-2*l3^2*b)*c2+(-l2^3+l2*l3^2)*c1+(-4*l2*b*d)  ,  (4*l2*c^2+4*l2*d^2)*s2^2*c1+(-2*c^3-2*c*d^2)*s2*c1+(2*b*c^2+2*b*d^2)*c2+(-l2*c^2-l2*d^2)*c1]
[(l2*c)*s3*c1+(l3*c)*s2*c1+(-l2*b)*c3+(-l3*b)*c2  ,  (c^2+d^2)*c3*c2*c1+(-c^2-d^2)*s3*s2*c1]
[(4*l2^3*d-4*l2*l3^2*d)*s2^2+(l2^4-2*l2^2*l3^2+l3^4)*c2+(-4*l2^2*c*d)*s2+(-2*l2^3*d+2*l2*l3^2*d)  ,  (-4*l2^2*c^2-4*l2^2*d^2)*c2*s2^2+(4*l2*c^2*d+4*l2*d^3)*s2^2+(2*l2^2*c^2+2*l2^2*d^2-2*l3^2*c^2-2*l3^2*d^2+c^4+2*c^2*d^2+d^4)*c2+(-2*l2*c^2*d-2*l2*d^3)]
[(4*l2^3*b-4*l2*l3^2*b)*s2^2+(l2^4-2*l2^2*l3^2+l3^4)*c2*c1+(-4*l2^2*b*c)*s2+(-2*l2^3*b+2*l2*l3^2*b)  ,  (-4*l2^2*c^2-4*l2^2*d^2)*c2*s2^2*c1+(4*l2*b*c^2+4*l2*b*d^2)*s2^2+(2*l2^2*c^2+2*l2^2*d^2-2*l3^2*c^2-2*l3^2*d^2+c^4-d^4)*c2*c1+(2*b*c^2*d+2*b*d^3)*c2+(-2*l2*b*c^2-2*l2*b*d^2)]
[(4*l2^3*a-4*l2*l3^2*a)*s2^2+(-l2^4+2*l2^2*l3^2-l3^4)*c2*s1+(-4*l2^2*a*c)*s2+(-2*l2^3*a+2*l2*l3^2*a)  ,  (4*l2^2*c^2+4*l2^2*d^2)*c2*s2^2*s1+(4*l2*a*c^2+4*l2*a*d^2)*s2^2+(-2*l2^2*c^2-2*l2^2*d^2+2*l3^2*c^2+2*l3^2*d^2-c^4+d^4)*c2*s1+(2*a*c^2*d+2*a*d^3)*c2+(-2*l2*a*c^2-2*l2*a*d^2)]
[(2*l2*c)*c2*s2+(-2*l2*d)*s2^2+(-l2^2+l3^2)*c2+(2*l2*d)  ,  (-c^2-d^2)*c2]
[(2*l3^2*c)*c2*s2+(-4*l2^2*d+2*l3^2*d)*s2^2+(-l2^3+l2*l3^2)*c2+(4*l2*c*d)*s2+(2*l2^2*d)  ,  (4*l2*c^2+4*l2*d^2)*c2*s2^2+(-2*c^3-2*c*d^2)*c2*s2+(-2*c^2*d-2*d^3)*s2^2+(-l2*c^2-l2*d^2)*c2]
[(4*l2*d)*s3*s2+(2*l3*c)*c2*s2+(2*l3*d)*s2^2+(l2^2-2*d^2)*c3+(-2*c*d)*s3+(l2*l3)*c2+(l3*d)  ,  (-2*c^2-2*d^2)*s3*c2*s2+(-2*c^2-2*d^2)*c3*s2^2+(c^2+d^2)*c3]
[(4*l2*c)*s3*s2+(-2*l3*d)*c2*s2+(2*l3*c)*s2^2+(-2*c*d)*c3+(-l2^2+2*d^2)*s3+(-l2*l3)*s2+(l3*c)  ,  (2*c^2+2*d^2)*c3*c2*s2+(-2*c^2-2*d^2)*s3*s2^2+(-c^2-d^2)*s3]
[(4*l2^2*b)*s3*s2+(4*l2*l3*b)*s2^2+(l2^3)*c3*c1+(2*l2^2*l3-l3^3)*c2*c1+(-4*l2*b*c)*s3+(2*l3*b*d)*c2+(-2*l3*b*c)*s2+(-l2*l3*b)  ,  (-4*l2*c^2-4*l2*d^2)*c3*s2^2*c1+(2*c^3+2*c*d^2)*c3*s2*c1+(-2*b*c^2-2*b*d^2)*c3*c2+(l2*c^2+l2*d^2)*c3*c1+(l3*c^2+l3*d^2)*c2*c1]
[(4*l2^2*a)*s3*s2+(4*l2*l3*a)*s2^2+(-l2^3)*c3*s1+(-2*l2^2*l3+l3^3)*c2*s1+(-4*l2*a*c)*s3+(2*l3*a*d)*c2+(-2*l3*a*c)*s2+(-l2*l3*a)  ,  (4*l2*c^2+4*l2*d^2)*c3*s2^2*s1+(-2*c^3-2*c*d^2)*c3*s2*s1+(-2*a*c^2-2*a*d^2)*c3*c2+(-l2*c^2-l2*d^2)*c3*s1+(-l3*c^2-l3*d^2)*c2*s1]
[(4*l2^2*b)*c3*s2+(4*l2*l3*b)*c2*s2+(-l2^3)*s3*c1+(-2*l2^2*l3+l3^3)*s2*c1+(4*l2*b*d)*s3+(2*l3*b*c)*c2+(2*l3*b*d)*s2+(l2*l3*c)*c1  ,  (4*l2*c^2+4*l2*d^2)*s3*s2^2*c1+(-2*c^3-2*c*d^2)*s3*s2*c1+(-2*b*c^2-2*b*d^2)*s3*c2+(-4*b*c^2-4*b*d^2)*c3*s2+(-l2*c^2-l2*d^2)*s3*c1+(l3*c^2+l3*d^2)*s2*c1]
[(4*l2^2*a)*c3*s2+(4*l2*l3*a)*c2*s2+(l2^3)*s3*s1+(2*l2^2*l3-l3^3)*s2*s1+(4*l2*a*d)*s3+(2*l3*a*c)*c2+(2*l3*a*d)*s2+(-l2*l3*c)*s1  ,  (-4*l2*c^2-4*l2*d^2)*s3*s2^2*s1+(2*c^3+2*c*d^2)*s3*s2*s1+(-2*a*c^2-2*a*d^2)*s3*c2+(-4*a*c^2-4*a*d^2)*c3*s2+(l2*c^2+l2*d^2)*s3*s1+(-l3*c^2-l3*d^2)*s2*s1]
[c2^2+s2^2-1  ,  0]
[(l2)*s3*c2+(-l2)*c3*s2+(c)*c3+(-d)*s3  ,  0]
[(d)*c3*c2+(c)*s3*c2+(c)*c3*s2+(-d)*s3*s2+(-l2)*c3+(-l3)*c2  ,  0]
[(c)*c3*c2+(-d)*s3*c2+(-d)*c3*s2+(-c)*s3*s2+(l2)*s3+(l3)*s2  ,  0]
[(l2)*c3*c2+(l2)*s3*s2+(-d)*c3+(-c)*s3+(l3)  ,  0]
[c3^2+s3^2-1  ,  0]
[(2*l3*c)*s2^2*s1+(4*l2*a)*c3*s2+(2*l3*a)*c2*s2+(l2^2)*s3*s1+(l2*l3)*s2*s1+(-2*a*c)*c3+(2*a*d)*s3+(-l3*c)*s1  ,  (2*c^2+2*d^2)*c3*c2*s2*s1+(-2*c^2-2*d^2)*s3*s2^2*s1+(c^2+d^2)*s3*s1]
[(2*l3*c)*c2*s2*s1+(-4*l2*a)*s3*s2+(-2*l3*a)*s2^2+(l2^2)*c3*s1+(l2*l3)*c2*s1+(2*a*d)*c3+(2*a*c)*s3+(-l3*a)  ,  (-2*c^2-2*d^2)*s3*c2*s2*s1+(-2*c^2-2*d^2)*c3*s2^2*s1+(c^2+d^2)*c3*s1]
[(c)*s3*c2*s1+(c)*c3*s2*s1+(-a)*c3*c2+(a)*s3*s2+(-l2)*c3*s1+(-l3)*c2*s1  ,  0]
[(2*l3*c)*s2^2*c1+(-4*l2*b)*c3*s2+(-2*l3*b)*c2*s2+(l2^2)*s3*c1+(l2*l3)*s2*c1+(2*b*c)*c3+(-2*b*d)*s3+(-l3*c)*c1  ,  (2*c^2+2*d^2)*c3*c2*s2*c1+(-2*c^2-2*d^2)*s3*s2^2*c1+(c^2+d^2)*s3*c1]
[(2*l3*c)*c2*s2*c1+(4*l2*b)*s3*s2+(2*l3*b)*s2^2+(l2^2)*c3*c1+(l2*l3)*c2*c1+(-2*b*d)*c3+(-2*b*c)*s3+(l3*b)  ,  (-2*c^2-2*d^2)*s3*c2*s2*c1+(-2*c^2-2*d^2)*c3*s2^2*c1+(c^2+d^2)*c3*c1]
[(c)*s3*c2*c1+(c)*c3*s2*c1+(b)*c3*c2+(-b)*s3*s2+(-l2)*c3*c1+(-l3)*c2*c1  ,  0]
[(4*l2*b)*s3^2*s2+(-4*l2*b)*s2^3+(l2^2)*c3*s3*c1+(-2*l2^2+l3^2)*c2*s2*c1+(-2*b*d)*c3*s3+(-2*b*c)*s3^2+(-2*b*d)*c2*s2+(2*b*c)*s2^2+(l2*c)*c2*c1+(l2*b)*s2+(b*c)  ,  (-2*c^2-2*d^2)*s3^2*c2*s2*c1+(-2*c^2-2*d^2)*c3*s3*s2^2*c1+(c^2+d^2)*c3*s3*c1+(c^2+d^2)*c2*s2*c1]
[(4*l2*a)*s3^2*s2+(-4*l2*a)*s2^3+(-l2^2)*c3*s3*s1+(2*l2^2-l3^2)*c2*s2*s1+(-2*a*d)*c3*s3+(-2*a*c)*s3^2+(-2*a*d)*c2*s2+(2*a*c)*s2^2+(-l2*c)*c2*s1+(l2*a)*s2+(a*c)  ,  (2*c^2+2*d^2)*s3^2*c2*s2*s1+(2*c^2+2*d^2)*c3*s3*s2^2*s1+(-c^2-d^2)*c3*s3*s1+(-c^2-d^2)*c2*s2*s1]
[(4*l2*b)*c3*s3*s2+(-4*l2*b)*c2*s2^2+(-l2^2)*s3^2*c1+(2*l2^2-l3^2)*s2^2*c1+(-2*b*c)*c3*s3+(2*b*d)*s3^2+(2*b*c)*c2*s2+(2*b*d)*s2^2+(2*l2*b)*c2+(-l2^2+l3^2)*c1+(-b*d)  ,  (-2*c^2-2*d^2)*c3*s3*c2*s2*c1+(2*c^2+2*d^2)*s3^2*s2^2*c1+(-c^2-d^2)*s3^2*c1+(-c^2-d^2)*s2^2*c1]
[(4*l2*a)*c3*s3*s2+(-4*l2*a)*c2*s2^2+(l2^2)*s3^2*s1+(-2*l2^2+l3^2)*s2^2*s1+(-2*a*c)*c3*s3+(2*a*d)*s3^2+(2*a*c)*c2*s2+(2*a*d)*s2^2+(2*l2*a)*c2+(l2^2-l3^2)*s1+(-a*d)  ,  (2*c^2+2*d^2)*c3*s3*c2*s2*s1+(-2*c^2-2*d^2)*s3^2*s2^2*s1+(c^2+d^2)*s3^2*s1+(c^2+d^2)*s2^2*s1]

Module Groebner basis: 
[(d)*s1+(a), 0], 
[(d)*c1+(-b), 0], 
[(4*l2^3*c-4*l2*l3^2*c)*s2+(-l2^4+2*l2^2*l3^2+4*l2^2*d^2-l3^4), (-4*l2^2*c^2-4*l2^2*d^2)*s2^2+(4*l2*c^3+4*l2*c*d^2)*s2+(-2*l2^2*c^2-2*l2^2*d^2+2*l3^2*c^2+2*l3^2*d^2-c^4-2*c^2*d^2-d^4)], 
[(2*l3^2*d)*c2+(4*l2^2*c-2*l3^2*c)*s2+(-l2^3+l2*l3^2+4*l2*d^2), (-4*l2*c^2-4*l2*d^2)*s2^2+(-2*c^2*d-2*d^3)*c2+(2*c^3+2*c*d^2)*s2+(-l2*c^2-l2*d^2)], 
[(l3)*s3+(l2)*s2+(-c), 0], 
[(l3)*c3+(l2)*c2+(-d) , 0].

LPP Set of Module Groebner Basis under specialization:
[ s1 ]
[ c1 ]
[ s2 ]
[ c2 ]
[ s3 ]
[ c3 ]

Branch 18:
constraints: l2+l3=0,c^2+d^2=0,a^2+b^2-d^2=0,-l3!=0,l3!=0,d!=0,2*d^2!=0,
RGB from KSW:
[(2*d^2)  ,  (c^2+d^2)*c3*c2+(-c^2-d^2)*s3*s2+(-l2*d-l3*d)*c3+(l2*c+l3*c)*s3+(-l2*d-l3*d)*c2+(l2*c+l3*c)*s2+(-c^2-d^2)]
[(2*c*d)  ,  (c^2+d^2)*s3*c2+(c^2+d^2)*c3*s2+(-l2*c-l3*c)*c3+(-l2*d-l3*d)*s3+(-l2*c-l3*c)*c2+(-l2*d-l3*d)*s2]
[(2*b*d)  ,  (c^2+d^2)*c3*c2*c1+(-c^2-d^2)*s3*s2*c1+(l2*c+l3*c)*s3*c1+(l2*c+l3*c)*s2*c1+(-l2*b-l3*b)*c3+(-l2*b-l3*b)*c2+(-c^2-d^2)*c1]
[(2*a*d)  ,  (-c^2-d^2)*c3*c2*s1+(c^2+d^2)*s3*s2*s1+(-l2*c-l3*c)*s3*s1+(-l2*c-l3*c)*s2*s1+(-l2*a-l3*a)*c3+(-l2*a-l3*a)*c2+(c^2+d^2)*s1]
[(2*c^2)  ,  (-c^2-d^2)*c3*c2+(c^2+d^2)*s3*s2+(l2*d+l3*d)*c3+(-l2*c-l3*c)*s3+(l2*d+l3*d)*c2+(-l2*c-l3*c)*s2+(-c^2-d^2)]
[(2*b*c)  ,  (c^2+d^2)*s3*c2*c1+(c^2+d^2)*c3*s2*c1+(-l2*c-l3*c)*c3*c1+(-l2*c-l3*c)*c2*c1+(-l2*b-l3*b)*s3+(-l2*b-l3*b)*s2]
[(2*a*c)  ,  (-c^2-d^2)*s3*c2*s1+(-c^2-d^2)*c3*s2*s1+(l2*c+l3*c)*c3*s1+(l2*c+l3*c)*c2*s1+(-l2*a-l3*a)*s3+(-l2*a-l3*a)*s2]
[(2*b^2)  ,  (-c^2-d^2)*c3*c2*s1^2+(c^2+d^2)*s3*s2*s1^2+(-l2*c-l3*c)*s3*s1^2+(-l2*c-l3*c)*s2*s1^2+(c^2+d^2)*c3*c2+(-c^2-d^2)*s3*s2+(-l2*a-l3*a)*c3*s1+(-l2*a-l3*a)*c2*s1+(c^2+d^2)*s1^2+(-l2*d-l3*d)*c3+(l2*c+l3*c)*s3+(-l2*d-l3*d)*c2+(l2*c+l3*c)*s2+(-c^2-d^2)]
[(2*a*b)  ,  (-c^2-d^2)*c3*c2*c1*s1+(c^2+d^2)*s3*s2*c1*s1+(-l2*c-l3*c)*s3*c1*s1+(-l2*c-l3*c)*s2*c1*s1+(l2*b+l3*b)*c3*s1+(l2*b+l3*b)*c2*s1+(c^2+d^2)*c1*s1]
[(2*a^2)  ,  (c^2+d^2)*c3*c2*s1^2+(-c^2-d^2)*s3*s2*s1^2+(l2*c+l3*c)*s3*s1^2+(l2*c+l3*c)*s2*s1^2+(l2*a+l3*a)*c3*s1+(l2*a+l3*a)*c2*s1+(-c^2-d^2)*s1^2]
[(d)*s1+(a)  ,  0]
[(d)*c1+(-b)  ,  0]
[(b)*c1+(-a)*s1+(-d)  ,  0]
[(a)*c1+(b)*s1  ,  0]
[(2*l3*d)*c2+(2*l3*c)*s2  ,  (-2*l2*d-2*l3*d)*c2+(-2*l2*c-2*l3*c)*s2+(l2^2-l3^2+c^2+d^2)]
[(l3)*s3+(-l3)*s2+(-c)  ,  (l2+l3)*s2]
[(d)*c3+(c)*s3+(d)*c2+(c)*s2  ,  (-l2-l3)*c3*c2+(-l2-l3)*s3*s2+(-l2-l3)]
[(c)*c3+(-d)*s3+(-c)*c2+(d)*s2  ,  (l2+l3)*s3*c2+(-l2-l3)*c3*s2]
[(l3)*c3+(-l3)*c2+(-d)  ,  (l2+l3)*c2]
[(2*l3*c)*s2*s1+(-2*l3*a)*c2  ,  (-2*l2*c-2*l3*c)*s2*s1+(2*l2*a+2*l3*a)*c2+(l2^2-l3^2+c^2+d^2)*s1]
[(c)*s3*s1+(c)*s2*s1+(-a)*c3+(-a)*c2  ,  (-l2-l3)*c3*c2*s1+(-l2-l3)*s3*s2*s1+(-l2-l3)*s1]
[c1^2+s1^2-1  ,  0]
[(2*l3*c)*s2*c1+(2*l3*b)*c2  ,  (-2*l2*c-2*l3*c)*s2*c1+(-2*l2*b-2*l3*b)*c2+(l2^2-l3^2+c^2+d^2)*c1]
[(c)*s3*c1+(c)*s2*c1+(b)*c3+(b)*c2  ,  (-l2-l3)*c3*c2*c1+(-l2-l3)*s3*s2*c1+(-l2-l3)*c1]
[(2*l3*c)*c2*s2+(-2*l3*d)*s2^2+(2*l3*d)  ,  (-2*l2*c-2*l3*c)*c2*s2+(2*l2*d+2*l3*d)*s2^2+(l2^2-l3^2+c^2+d^2)*c2+(-2*l2*d-2*l3*d)]
[c2^2+s2^2-1  ,  0]
[c3^2+s3^2-1  ,  0]

Module Groebner basis: 
[(2*d^2) , (c^2+d^2)*c3*c2+(-c^2-d^2)*s3*s2+(-l2*d-l3*d)*c3+(l2*c+l3*c)*s3+(-l2*d-l3*d)*c2+(l2*c+l3*c)*s2+(-c^2-d^2)].

LPP Set of Module Groebner Basis under specialization:
[ 1 ]

Branch 19:
constraints: l2-l3=0,c^2+d^2=0,a^2+b^2-d^2=0,l3!=0,d!=0,2*l3!=0,c!=0,2*d^2!=0,
RGB from KSW:
[(2*d^2)  ,  (-c^2-d^2)*c3*c2+(c^2+d^2)*s3*s2+(l2*d-l3*d)*c3+(-l2*c+l3*c)*s3+(-l2*d+l3*d)*c2+(l2*c-l3*c)*s2+(-c^2-d^2)]
[(2*c*d)  ,  (-c^2-d^2)*s3*c2+(-c^2-d^2)*c3*s2+(l2*c-l3*c)*c3+(l2*d-l3*d)*s3+(-l2*c+l3*c)*c2+(-l2*d+l3*d)*s2]
[(2*b*d)  ,  (-c^2-d^2)*c3*c2*c1+(c^2+d^2)*s3*s2*c1+(-l2*c+l3*c)*s3*c1+(l2*c-l3*c)*s2*c1+(l2*b-l3*b)*c3+(-l2*b+l3*b)*c2+(-c^2-d^2)*c1]
[(2*a*d)  ,  (c^2+d^2)*c3*c2*s1+(-c^2-d^2)*s3*s2*s1+(l2*c-l3*c)*s3*s1+(-l2*c+l3*c)*s2*s1+(l2*a-l3*a)*c3+(-l2*a+l3*a)*c2+(c^2+d^2)*s1]
[(2*c^2)  ,  (c^2+d^2)*c3*c2+(-c^2-d^2)*s3*s2+(-l2*d+l3*d)*c3+(l2*c-l3*c)*s3+(l2*d-l3*d)*c2+(-l2*c+l3*c)*s2+(-c^2-d^2)]
[(2*b*c)  ,  (-c^2-d^2)*s3*c2*c1+(-c^2-d^2)*c3*s2*c1+(l2*c-l3*c)*c3*c1+(-l2*c+l3*c)*c2*c1+(l2*b-l3*b)*s3+(-l2*b+l3*b)*s2]
[(2*a*c)  ,  (c^2+d^2)*s3*c2*s1+(c^2+d^2)*c3*s2*s1+(-l2*c+l3*c)*c3*s1+(l2*c-l3*c)*c2*s1+(l2*a-l3*a)*s3+(-l2*a+l3*a)*s2]
[(2*b^2)  ,  (c^2+d^2)*c3*c2*s1^2+(-c^2-d^2)*s3*s2*s1^2+(l2*c-l3*c)*s3*s1^2+(-l2*c+l3*c)*s2*s1^2+(-c^2-d^2)*c3*c2+(c^2+d^2)*s3*s2+(l2*a-l3*a)*c3*s1+(-l2*a+l3*a)*c2*s1+(c^2+d^2)*s1^2+(l2*d-l3*d)*c3+(-l2*c+l3*c)*s3+(-l2*d+l3*d)*c2+(l2*c-l3*c)*s2+(-c^2-d^2)]
[(2*a*b)  ,  (c^2+d^2)*c3*c2*c1*s1+(-c^2-d^2)*s3*s2*c1*s1+(l2*c-l3*c)*s3*c1*s1+(-l2*c+l3*c)*s2*c1*s1+(-l2*b+l3*b)*c3*s1+(l2*b-l3*b)*c2*s1+(c^2+d^2)*c1*s1]
[(2*a^2)  ,  (-c^2-d^2)*c3*c2*s1^2+(c^2+d^2)*s3*s2*s1^2+(-l2*c+l3*c)*s3*s1^2+(l2*c-l3*c)*s2*s1^2+(-l2*a+l3*a)*c3*s1+(l2*a-l3*a)*c2*s1+(-c^2-d^2)*s1^2]
[(d)*s1+(a)  ,  0]
[(d)*c1+(-b)  ,  0]
[(b)*c1+(-a)*s1+(-d)  ,  0]
[(a)*c1+(b)*s1  ,  0]
[(2*l3*d)*c2+(2*l3*c)*s2  ,  (2*l2*d-2*l3*d)*c2+(2*l2*c-2*l3*c)*s2+(-l2^2+l3^2-c^2-d^2)]
[(l3)*s3+(l3)*s2+(-c)  ,  (l2-l3)*s2]
[(d)*c3+(c)*s3+(-d)*c2+(-c)*s2  ,  (-l2+l3)*c3*c2+(-l2+l3)*s3*s2+(l2-l3)]
[(c)*c3+(-d)*s3+(c)*c2+(-d)*s2  ,  (l2-l3)*s3*c2+(-l2+l3)*c3*s2]
[(l3)*c3+(l3)*c2+(-d)  ,  (l2-l3)*c2]
[(2*l3*c)*s2*s1+(-2*l3*a)*c2  ,  (2*l2*c-2*l3*c)*s2*s1+(-2*l2*a+2*l3*a)*c2+(-l2^2+l3^2-c^2-d^2)*s1]
[(c)*s3*s1+(-c)*s2*s1+(-a)*c3+(a)*c2  ,  (-l2+l3)*c3*c2*s1+(-l2+l3)*s3*s2*s1+(l2-l3)*s1]
[c1^2+s1^2-1  ,  0]
[(2*l3*c)*s2*c1+(2*l3*b)*c2  ,  (2*l2*c-2*l3*c)*s2*c1+(2*l2*b-2*l3*b)*c2+(-l2^2+l3^2-c^2-d^2)*c1]
[(c)*s3*c1+(-c)*s2*c1+(b)*c3+(-b)*c2  ,  (-l2+l3)*c3*c2*c1+(-l2+l3)*s3*s2*c1+(l2-l3)*c1]
[(2*l3*c)*c2*s2+(-2*l3*d)*s2^2+(2*l3*d)  ,  (2*l2*c-2*l3*c)*c2*s2+(-2*l2*d+2*l3*d)*s2^2+(-l2^2+l3^2-c^2-d^2)*c2+(2*l2*d-2*l3*d)]
[c2^2+s2^2-1  ,  0]
[c3^2+s3^2-1  ,  0]

Module Groebner basis: 
[(2*d^2) , (-c^2-d^2)*c3*c2+(c^2+d^2)*s3*s2+(l2*d-l3*d)*c3+(-l2*c+l3*c)*s3+(-l2*d+l3*d)*c2+(l2*c-l3*c)*s2+(-c^2-d^2)].

LPP Set of Module Groebner Basis under specialization:
[ 1 ]




Comprehensive Groebner Basis: 

(a^2+b^2-d^2),
(d)*s1+(a),
(d)*c1+(-b),
(l2*d)*c2+(l2*c)*s2+(-l2^2+l3^2-c^2-d^2)/2,
(l3)*s3+(l2)*s2+(-c),
(l3)*c3+(l2)*c2+(-d),
(l3*d)*c3+(l3*c)*s3+(l2^2-l3^2-c^2-d^2)/2,
c1^2+s1^2-1,
(l2*c^2+l2*d^2)*s2^2+(-l3^2*d+c^2*d+d^3)/2*c2+(-2*l2^2*c+l3^2*c-c^3-c*d^2)/2*s2+(l2^3-l2*l3^2+l2*c^2-3*l2*d^2)/4,
(l2^2*c^2+l2^2*d^2)*s2^2+(-l2^3*c+l2*l3^2*c-l2*c^3-l2*c*d^2)*s2+(l2^4-2*l2^2*l3^2+2*l2^2*c^2-2*l2^2*d^2+l3^4-2*l3^2*c^2-2*l3^2*d^2+c^4+2*c^2*d^2+d^4)/4,
c2^2+s2^2-1,
(l3)*s3*c2+(-l3)*c3*s2+(-c)*c2+(d)*s2,
(l2)*s3*c2+(-l2)*c3*s2+(c)*c3+(-d)*s3,
(l3)*c3*c2+(l3)*s3*s2+(-d)*c2+(-c)*s2+(l2),
(l2)*c3*c2+(l2)*s3*s2+(-d)*c3+(-c)*s3+(l3),
(c^2+d^2)*c3*c2+(-c^2-d^2)*s3*s2+(-l2*d-l3*d)*c3+(l2*c+l3*c)*s3+(-l2*d-l3*d)*c2+(l2*c+l3*c)*s2+(-c^2+d^2),
(c^2+d^2)*c3*c2+(-c^2-d^2)*s3*s2+(-l2*d+l3*d)*c3+(l2*c-l3*c)*s3+(l2*d-l3*d)*c2+(-l2*c+l3*c)*s2+(c^2-d^2),
c3^2+s3^2-1.




Size is: 18.

================ Algorithm 1 =====================

---------------------

M_1

M = [

(a^2+b^2-d^2),
(d)*s1+(a),
(d)*c1+(-b),
(l2*d)*c2+(l2*c)*s2+(-l2^2+l3^2-c^2-d^2)/2,
(l3)*s3+(l2)*s2+(-c),
(l3)*c3+(l2)*c2+(-d),
(l3*d)*c3+(l3*c)*s3+(l2^2-l3^2-c^2-d^2)/2,
c1^2+s1^2-1,
(l2^2*c^2+l2^2*d^2)*s2^2+(-l2^3*c+l2*l3^2*c-l2*c^3-l2*c*d^2)*s2+(l2^4-2*l2^2*l3^2+2*l2^2*c^2-2*l2^2*d^2+l3^4-2*l3^2*c^2-2*l3^2*d^2+c^4+2*c^2*d^2+d^4)/4,
c2^2+s2^2-1,
c3^2+s3^2-1.

].

Size is: 11.

It is comprehensive and minimal.

========================= Algorithm 3 ======================

C = [

(a^2+b^2-d^2)
(d)*s1+(a)
(d)*c1+(-b)
(l2*d)*c2+(l2*c)*s2+(-l2^2+l3^2-c^2-d^2)/2
(l3)*s3+(l2)*s2+(-c)
(l3)*c3+(l2)*c2+(-d)
(l3*d)*c3+(l3*c)*s3+(l2^2-l3^2-c^2-d^2)/2
c1^2+s1^2-1
(l2^2*c^2+l2^2*d^2)*s2^2+(-l2^3*c+l2*l3^2*c-l2*c^3-l2*c*d^2)*s2+(l2^4-2*l2^2*l3^2+2*l2^2*c^2-2*l2^2*d^2+l3^4-2*l3^2*c^2-2*l3^2*d^2+c^4+2*c^2*d^2+d^4)/4
c2^2+s2^2-1
c3^2+s3^2-1.

].


Size is: 11.

It is comprehensive and minimal.
=================================
Compare MCGBs with CCGB:

Consider M_1:
M_1

M = [

(a^2+b^2-d^2),
(d)*s1+(a),
(d)*c1+(-b),
(l2*d)*c2+(l2*c)*s2+(-l2^2+l3^2-c^2-d^2)/2,
(l3)*s3+(l2)*s2+(-c),
(l3)*c3+(l2)*c2+(-d),
(l3*d)*c3+(l3*c)*s3+(l2^2-l3^2-c^2-d^2)/2,
c1^2+s1^2-1,
(l2^2*c^2+l2^2*d^2)*s2^2+(-l2^3*c+l2*l3^2*c-l2*c^3-l2*c*d^2)*s2+(l2^4-2*l2^2*l3^2+2*l2^2*c^2-2*l2^2*d^2+l3^4-2*l3^2*c^2-2*l3^2*d^2+c^4+2*c^2*d^2+d^4)/4,
c2^2+s2^2-1,
c3^2+s3^2-1.

].

Size is: 11.

CCGB

C = [

(a^2+b^2-d^2)
(d)*s1+(a)
(d)*c1+(-b)
(l2*d)*c2+(l2*c)*s2+(-l2^2+l3^2-c^2-d^2)/2
(l3)*s3+(l2)*s2+(-c)
(l3)*c3+(l2)*c2+(-d)
(l3*d)*c3+(l3*c)*s3+(l2^2-l3^2-c^2-d^2)/2
c1^2+s1^2-1
(l2^2*c^2+l2^2*d^2)*s2^2+(-l2^3*c+l2*l3^2*c-l2*c^3-l2*c*d^2)*s2+(l2^4-2*l2^2*l3^2+2*l2^2*c^2-2*l2^2*d^2+l3^4-2*l3^2*c^2-2*l3^2*d^2+c^4+2*c^2*d^2+d^4)/4
c2^2+s2^2-1
c3^2+s3^2-1.

].


Size is: 11.

Polys in M_1 but not in CCGB:


Polys in CCGB but not in M_1:

--------------------


=================== RGB =================

RGB = [

(a^2+b^2-d^2)
(d)*s1+(a)
(d)*c1+(-b)
(b)*c1+(-a)*s1+(-d)
(a)*c1+(b)*s1
(l2*d)*c2+(l2*c)*s2+(-l2^2+l3^2-c^2-d^2)/2
(l3)*s3+(l2)*s2+(-c)
(l3)*c3+(l2)*c2+(-d)
(l2*c)*s2*s1+(-l2*a)*c2+(-l2^2+l3^2-c^2)/2*s1+(a*d)/2
c1^2+s1^2-1
(l2*c)*s2*c1+(l2*b)*c2+(-l2^2+l3^2-c^2)/2*c1+(-b*d)/2
(l2*c^2+l2*d^2)*s2^2+(-l3^2*d+c^2*d+d^3)/2*c2+(-2*l2^2*c+l3^2*c-c^3-c*d^2)/2*s2+(l2^3-l2*l3^2+l2*c^2-3*l2*d^2)/4
(l2*c)*c2*s2+(-l2*d)*s2^2+(-l2^2+l3^2-c^2-d^2)/2*c2+(l2*d)
(l2*c^2+l2*d^2)*s3*s2+(l2^2*d-c^2*d-d^3)/2*c3+(-l2^2*c-c^3-c*d^2)/2*s3+(-l2*l3*c)*s2+(l2^2*l3-l3^3+3*l3*c^2+3*l3*d^2)/4
(l2*d)*c3*s2+(l2*c)*s3*s2+(-c*d)*c3+(-l2^2-c^2+d^2)/2*s3+(-l2*l3)/2*s2+(l3*c)/2
(l2*c)*c3*s2+(-l2*d)*s3*s2+(-l2^2-c^2+d^2)/2*c3+(c*d)*s3+(-l2*l3)/2*c2+(-l3*d)/2
c2^2+s2^2-1
(l2)*s3*c2+(-l2)*c3*s2+(c)*c3+(-d)*s3
(c^2+d^2)*s3*c2+(c^2+d^2)*c3*s2+(-l2*c)*c3+(-l2*d)*s3+(-l3*c)*c2+(-l3*d)*s2
(d)*c3*c2+(c)*s3*c2+(c)*c3*s2+(-d)*s3*s2+(-l2)*c3+(-l3)*c2
(c)*c3*c2+(-d)*s3*c2+(-d)*c3*s2+(-c)*s3*s2+(l2)*s3+(l3)*s2
(l2)*c3*c2+(l2)*s3*s2+(-d)*c3+(-c)*s3+(l3)
c3^2+s3^2-1
(c)*s3*c2*s1+(c)*c3*s2*s1+(-a)*c3*c2+(a)*s3*s2+(-l2)*c3*s1+(-l3)*c2*s1
(c)*s3*c2*c1+(c)*c3*s2*c1+(b)*c3*c2+(-b)*s3*s2+(-l2)*c3*c1+(-l3)*c2*c1.

].


Size is: 25.

It is not comprehensive.
RGB is not a subset of CGB!
